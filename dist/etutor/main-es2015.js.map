{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/appconstants.ts","./src/app/common/generic-validator.ts","./src/app/cvdclasse/cvdclasse-detail/cvdclasse-detail.component.ts","./src/app/cvdclasse/cvdclasse-detail/cvdclasse-detail.component.html","./src/app/cvdclasse/cvdclasse-edit/cvdclasse-edit.component.ts","./src/app/cvdclasse/cvdclasse-edit/cvdclasse-edit.component.html","./src/app/cvdclasse/cvdclasse-list/cvdclasse-list.component.ts","./src/app/cvdclasse/cvdclasse-list/cvdclasse-list.component.html","./src/app/cvdcourse/cvdcourse-detail/cvdcourse-detail.component.ts","./src/app/cvdcourse/cvdcourse-detail/cvdcourse-detail.component.html","./src/app/cvdcourse/cvdcourse-edit/cvdcourse-edit.component.ts","./src/app/cvdcourse/cvdcourse-edit/cvdcourse-edit.component.html","./src/app/cvdcourse/cvdcourse-list/cvdcourse-list.component.ts","./src/app/cvdcourse/cvdcourse-list/cvdcourse-list.component.html","./src/app/cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component.ts","./src/app/cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component.html","./src/app/cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component.ts","./src/app/cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component.html","./src/app/cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component.ts","./src/app/cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component.html","./src/app/cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component.ts","./src/app/cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component.html","./src/app/cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component.ts","./src/app/cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component.html","./src/app/cvddiscussion/cvddiscussion-list/cvddiscussion-list.component.ts","./src/app/cvddiscussion/cvddiscussion-list/cvddiscussion-list.component.html","./src/app/cvdfaq/cvdfaq-detail/cvdfaq-detail.component.ts","./src/app/cvdfaq/cvdfaq-detail/cvdfaq-detail.component.html","./src/app/cvdfaq/cvdfaq-edit/cvdfaq-edit.component.ts","./src/app/cvdfaq/cvdfaq-edit/cvdfaq-edit.component.html","./src/app/cvdfaq/cvdfaq-list/cvdfaq-list.component.ts","./src/app/cvdfaq/cvdfaq-list/cvdfaq-list.component.html","./src/app/cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component.ts","./src/app/cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component.html","./src/app/cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component.ts","./src/app/cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component.html","./src/app/cvdfeedback/cvdfeedback-list/cvdfeedback-list.component.ts","./src/app/cvdfeedback/cvdfeedback-list/cvdfeedback-list.component.html","./src/app/cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component.ts","./src/app/cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component.html","./src/app/cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component.ts","./src/app/cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component.html","./src/app/cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component.ts","./src/app/cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component.html","./src/app/cvdlevel/cvdlevel-detail/cvdlevel-detail.component.ts","./src/app/cvdlevel/cvdlevel-detail/cvdlevel-detail.component.html","./src/app/cvdlevel/cvdlevel-edit/cvdlevel-edit.component.ts","./src/app/cvdlevel/cvdlevel-edit/cvdlevel-edit.component.html","./src/app/cvdlevel/cvdlevel-list/cvdlevel-list.component.ts","./src/app/cvdlevel/cvdlevel-list/cvdlevel-list.component.html","./src/app/cvdoption/cvdoption-detail/cvdoption-detail.component.ts","./src/app/cvdoption/cvdoption-detail/cvdoption-detail.component.html","./src/app/cvdoption/cvdoption-edit/cvdoption-edit.component.ts","./src/app/cvdoption/cvdoption-edit/cvdoption-edit.component.html","./src/app/cvdoption/cvdoption-list/cvdoption-list.component.ts","./src/app/cvdoption/cvdoption-list/cvdoption-list.component.html","./src/app/cvdpermission/cvdpermission-detail/cvdpermission-detail.component.ts","./src/app/cvdpermission/cvdpermission-detail/cvdpermission-detail.component.html","./src/app/cvdpermission/cvdpermission-edit/cvdpermission-edit.component.ts","./src/app/cvdpermission/cvdpermission-edit/cvdpermission-edit.component.html","./src/app/cvdpermission/cvdpermission-list/cvdpermission-list.component.ts","./src/app/cvdpermission/cvdpermission-list/cvdpermission-list.component.html","./src/app/cvdquestion/cvdquestion-detail/cvdquestion-detail.component.ts","./src/app/cvdquestion/cvdquestion-detail/cvdquestion-detail.component.html","./src/app/cvdquestion/cvdquestion-edit/cvdquestion-edit.component.ts","./src/app/cvdquestion/cvdquestion-edit/cvdquestion-edit.component.html","./src/app/cvdquestion/cvdquestion-list/cvdquestion-list.component.ts","./src/app/cvdquestion/cvdquestion-list/cvdquestion-list.component.html","./src/app/cvdrole/cvdrole-detail/cvdrole-detail.component.ts","./src/app/cvdrole/cvdrole-detail/cvdrole-detail.component.html","./src/app/cvdrole/cvdrole-edit/cvdrole-edit.component.ts","./src/app/cvdrole/cvdrole-edit/cvdrole-edit.component.html","./src/app/cvdrole/cvdrole-list/cvdrole-list.component.ts","./src/app/cvdrole/cvdrole-list/cvdrole-list.component.html","./src/app/cvdscreen/cvdscreen-detail/cvdscreen-detail.component.ts","./src/app/cvdscreen/cvdscreen-detail/cvdscreen-detail.component.html","./src/app/cvdscreen/cvdscreen-edit/cvdscreen-edit.component.ts","./src/app/cvdscreen/cvdscreen-edit/cvdscreen-edit.component.html","./src/app/cvdscreen/cvdscreen-list/cvdscreen-list.component.ts","./src/app/cvdscreen/cvdscreen-list/cvdscreen-list.component.html","./src/app/cvdstatu/cvdstatu-detail/cvdstatu-detail.component.ts","./src/app/cvdstatu/cvdstatu-detail/cvdstatu-detail.component.html","./src/app/cvdstatu/cvdstatu-edit/cvdstatu-edit.component.ts","./src/app/cvdstatu/cvdstatu-edit/cvdstatu-edit.component.html","./src/app/cvdstatu/cvdstatu-list/cvdstatu-list.component.ts","./src/app/cvdstatu/cvdstatu-list/cvdstatu-list.component.html","./src/app/cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component.ts","./src/app/cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component.html","./src/app/cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component.ts","./src/app/cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component.html","./src/app/cvdsubscription/cvdsubscription-list/cvdsubscription-list.component.ts","./src/app/cvdsubscription/cvdsubscription-list/cvdsubscription-list.component.html","./src/app/cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component.ts","./src/app/cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component.html","./src/app/cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component.ts","./src/app/cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component.html","./src/app/cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component.ts","./src/app/cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component.html","./src/app/cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component.ts","./src/app/cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component.html","./src/app/cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component.ts","./src/app/cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component.html","./src/app/cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component.ts","./src/app/cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component.html","./src/app/cvduser/cvduser-detail/cvduser-detail.component.ts","./src/app/cvduser/cvduser-detail/cvduser-detail.component.html","./src/app/cvduser/cvduser-edit/cvduser-edit.component.ts","./src/app/cvduser/cvduser-edit/cvduser-edit.component.html","./src/app/cvduser/cvduser-list/cvduser-list.component.ts","./src/app/cvduser/cvduser-list/cvduser-list.component.html","./src/app/cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component.ts","./src/app/cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component.html","./src/app/cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component.ts","./src/app/cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component.html","./src/app/cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component.ts","./src/app/cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/cvdclasse.service.ts","./src/app/services/cvdcourse.service.ts","./src/app/services/cvdcoursestatu.service.ts","./src/app/services/cvddiscussion.service.ts","./src/app/services/cvdfaq.service.ts","./src/app/services/cvdfeedback.service.ts","./src/app/services/cvdlearncheck.service.ts","./src/app/services/cvdlevel.service.ts","./src/app/services/cvdoption.service.ts","./src/app/services/cvdpermission.service.ts","./src/app/services/cvdquestion.service.ts","./src/app/services/cvdrole.service.ts","./src/app/services/cvdscreen.service.ts","./src/app/services/cvdstatu.service.ts","./src/app/services/cvdsubscription.service.ts","./src/app/services/cvdtableofcontent.service.ts","./src/app/services/cvdtrainingtype.service.ts","./src/app/services/cvduser.service.ts","./src/app/services/cvdusersubscription.service.ts","./src/app/user/forgot-password/forgot-password.component.ts","./src/app/user/forgot-password/forgot-password.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'etutor';\n}\n","\n<div style=\"margin:20px;background-color: aqua;background-image: linear-gradient(aqua, blue);height: 900px;\">\n  <div class=\"row\">\n      \n      <div class=\"col-md-12\">\n      <div >\n                  <router-outlet></router-outlet>\n              </div></div>\n          </div>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\nimport { CvdroleDetailComponent } from './cvdrole/cvdrole-detail/cvdrole-detail.component';\nimport { CvdroleEditComponent } from './cvdrole/cvdrole-edit/cvdrole-edit.component';\nimport { CvdroleListComponent } from './cvdrole/cvdrole-list/cvdrole-list.component';\nimport { CvdscreenEditComponent } from './cvdscreen/cvdscreen-edit/cvdscreen-edit.component';\nimport { CvdscreenDetailComponent } from './cvdscreen/cvdscreen-detail/cvdscreen-detail.component';\nimport { CvdscreenListComponent } from './cvdscreen/cvdscreen-list/cvdscreen-list.component';\nimport { CvdclasseEditComponent } from './cvdclasse/cvdclasse-edit/cvdclasse-edit.component';\nimport { CvdclasseDetailComponent } from './cvdclasse/cvdclasse-detail/cvdclasse-detail.component';\nimport { CvdclasseListComponent } from './cvdclasse/cvdclasse-list/cvdclasse-list.component';\nimport { CvdcourseEditComponent } from './cvdcourse/cvdcourse-edit/cvdcourse-edit.component';\nimport { CvdcourseListComponent } from './cvdcourse/cvdcourse-list/cvdcourse-list.component';\nimport { CvdcourseDetailComponent } from './cvdcourse/cvdcourse-detail/cvdcourse-detail.component';\nimport { CvddiscussionListComponent } from './cvddiscussion/cvddiscussion-list/cvddiscussion-list.component';\nimport { CvddiscussionDetailComponent } from './cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component';\nimport { CvddiscussionEditComponent } from './cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component';\nimport { CvdfaqListComponent } from './cvdfaq/cvdfaq-list/cvdfaq-list.component';\nimport { CvdfaqDetailComponent } from './cvdfaq/cvdfaq-detail/cvdfaq-detail.component';\nimport { CvdfaqEditComponent } from './cvdfaq/cvdfaq-edit/cvdfaq-edit.component';\nimport { CvdfeedbackListComponent } from './cvdfeedback/cvdfeedback-list/cvdfeedback-list.component';\nimport { CvdfeedbackDetailComponent } from './cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component';\nimport { CvdfeedbackEditComponent } from './cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component';\nimport { CvdlearncheckListComponent } from './cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component';\nimport { CvdlearncheckDetailComponent } from './cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component';\nimport { CvdlearncheckEditComponent } from './cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component';\nimport { CvdlevelListComponent } from './cvdlevel/cvdlevel-list/cvdlevel-list.component';\nimport { CvdlevelDetailComponent } from './cvdlevel/cvdlevel-detail/cvdlevel-detail.component';\nimport { CvdlevelEditComponent } from './cvdlevel/cvdlevel-edit/cvdlevel-edit.component';\nimport { CvdoptionListComponent } from './cvdoption/cvdoption-list/cvdoption-list.component';\nimport { CvdoptionDetailComponent } from './cvdoption/cvdoption-detail/cvdoption-detail.component';\nimport { CvdoptionEditComponent } from './cvdoption/cvdoption-edit/cvdoption-edit.component';\nimport { CvdpermissionListComponent } from './cvdpermission/cvdpermission-list/cvdpermission-list.component';\nimport { CvdpermissionDetailComponent } from './cvdpermission/cvdpermission-detail/cvdpermission-detail.component';\nimport { CvdpermissionEditComponent } from './cvdpermission/cvdpermission-edit/cvdpermission-edit.component';\nimport { CvdquestionListComponent } from './cvdquestion/cvdquestion-list/cvdquestion-list.component';\nimport { CvdquestionDetailComponent } from './cvdquestion/cvdquestion-detail/cvdquestion-detail.component';\nimport { CvdquestionEditComponent } from './cvdquestion/cvdquestion-edit/cvdquestion-edit.component';\nimport { CvdstatuListComponent } from './cvdstatu/cvdstatu-list/cvdstatu-list.component';\nimport { CvdstatuDetailComponent } from './cvdstatu/cvdstatu-detail/cvdstatu-detail.component';\nimport { CvdstatuEditComponent } from './cvdstatu/cvdstatu-edit/cvdstatu-edit.component';\nimport { CvdsubscriptionListComponent } from './cvdsubscription/cvdsubscription-list/cvdsubscription-list.component';\nimport { CvdsubscriptionDetailComponent } from './cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component';\nimport { CvdsubscriptionEditComponent } from './cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component';\nimport { CvdtableofcontentListComponent } from './cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component';\nimport { CvdtableofcontentDetailComponent } from './cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component';\nimport { CvdtableofcontentEditComponent } from './cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component';\nimport { CvdtrainingtypeListComponent } from './cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component';\nimport { CvdtrainingtypeDetailComponent } from './cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component';\nimport { CvdtrainingtypeEditComponent } from './cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component';\nimport { CvduserListComponent } from './cvduser/cvduser-list/cvduser-list.component';\nimport { CvduserDetailComponent } from './cvduser/cvduser-detail/cvduser-detail.component';\nimport { CvduserEditComponent } from './cvduser/cvduser-edit/cvduser-edit.component';\nimport { CvdusersubscriptionListComponent } from './cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component';\nimport { CvdusersubscriptionDetailComponent } from './cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component';\nimport { CvdusersubscriptionEditComponent } from './cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component';\nimport { CvdcoursestatuListComponent } from './cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component';\nimport { CvdcoursestatuDetailComponent } from './cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component';\nimport { CvdcoursestatuEditComponent } from './cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoginComponent,\n    ForgotPasswordComponent,\n    RegisterComponent,\n    HeaderComponent,\n    CvdroleDetailComponent,\n    CvdroleEditComponent,\n    CvdroleListComponent,\n    CvdclasseListComponent,\n    CvdclasseDetailComponent,\n    CvdclasseEditComponent,\n    CvdcourseListComponent,\n    CvdcourseDetailComponent,\n    CvdcourseEditComponent,\n    CvdscreenListComponent,\n    CvdscreenDetailComponent,\n    CvdscreenEditComponent,\n    CvddiscussionListComponent,\n    CvddiscussionDetailComponent,\n    CvddiscussionEditComponent,\n    CvdfaqListComponent,\n    CvdfaqDetailComponent,\n    CvdfaqEditComponent,\n    CvdfeedbackListComponent,\n    CvdfeedbackDetailComponent,\n    CvdfeedbackEditComponent,\n    CvdlearncheckListComponent,\n    CvdlearncheckDetailComponent,\n    CvdlearncheckEditComponent,\n    CvdlevelListComponent,\n    CvdlevelDetailComponent,\n    CvdlevelEditComponent,\n    CvdoptionListComponent,\n    CvdoptionDetailComponent,\n    CvdoptionEditComponent,\n    CvdpermissionListComponent,\n    CvdpermissionDetailComponent,\n    CvdpermissionEditComponent,\n    CvdquestionListComponent,\n    CvdquestionDetailComponent,\n    CvdquestionEditComponent,\n    CvdstatuListComponent,\n    CvdstatuDetailComponent,\n    CvdstatuEditComponent,\n    CvdsubscriptionListComponent,\n    CvdsubscriptionDetailComponent,\n    CvdsubscriptionEditComponent,\n    CvdtableofcontentListComponent,\n    CvdtableofcontentDetailComponent,\n    CvdtableofcontentEditComponent,\n    CvdtrainingtypeListComponent,\n    CvdtrainingtypeDetailComponent,\n    CvdtrainingtypeEditComponent,\n    CvduserListComponent,\n    CvduserDetailComponent,\n    CvduserEditComponent,\n    CvdusersubscriptionListComponent,\n    CvdusersubscriptionDetailComponent,\n    CvdusersubscriptionEditComponent,\n    CvdcoursestatuListComponent,\n    CvdcoursestatuDetailComponent,\n    CvdcoursestatuEditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule, \n    HttpClientModule,\n    RouterModule.forRoot([\n       { path: 'Cvdusersubscriptions', component: CvdusersubscriptionListComponent },\n       { path: 'Cvdusersubscriptions/:id', component: CvdusersubscriptionDetailComponent },\n       {\n       path: 'Cvdusersubscriptions/:id/edit',\n       //canDeactivate: [CvdusersubscriptionEditGuard],\n       component: CvdusersubscriptionEditComponent\n       },\n      { path: 'Cvdusers', component: CvduserListComponent },\n       { path: 'Cvdusers/:id', component: CvduserDetailComponent },\n       {\n       path: 'Cvdusers/:id/edit',\n       //canDeactivate: [CvduserEditGuard],\n       component: CvduserEditComponent\n       },\n      { path: 'Cvdtrainingtypes', component: CvdtrainingtypeListComponent },\n       { path: 'Cvdtrainingtypes/:id', component: CvdtrainingtypeDetailComponent },\n       {\n       path: 'Cvdtrainingtypes/:id/edit',\n       //canDeactivate: [CvdtrainingtypeEditGuard],\n       component: CvdtrainingtypeEditComponent\n       },\n      { path: 'Cvdtableofcontents', component: CvdtableofcontentListComponent },\n       { path: 'Cvdtableofcontents/:id', component: CvdtableofcontentDetailComponent },\n       {\n       path: 'Cvdtableofcontents/:id/edit',\n       //canDeactivate: [CvdtableofcontentEditGuard],\n       component: CvdtableofcontentEditComponent\n       },\n      { path: 'Cvdsubscriptions', component: CvdsubscriptionListComponent },\n       { path: 'Cvdsubscriptions/:id', component: CvdsubscriptionDetailComponent },\n       {\n       path: 'Cvdsubscriptions/:id/edit',\n       //canDeactivate: [CvdsubscriptionEditGuard],\n       component: CvdsubscriptionEditComponent\n       },\n      { path: 'Cvdstatus', component: CvdstatuListComponent },\n       { path: 'Cvdstatus/:id', component: CvdstatuDetailComponent },\n       {\n       path: 'Cvdstatus/:id/edit',\n       //canDeactivate: [CvdstatuEditGuard],\n       component: CvdstatuEditComponent\n       },\n      { path: 'Cvdquestions', component: CvdquestionListComponent },\n       { path: 'Cvdquestions/:id', component: CvdquestionDetailComponent },\n       {\n       path: 'Cvdquestions/:id/edit',\n       //canDeactivate: [CvdquestionEditGuard],\n       component: CvdquestionEditComponent\n       },\n      { path: 'Cvdpermissions', component: CvdpermissionListComponent },\n       { path: 'Cvdpermissions/:id', component: CvdpermissionDetailComponent },\n       {\n       path: 'Cvdpermissions/:id/edit',\n       //canDeactivate: [CvdpermissionEditGuard],\n       component: CvdpermissionEditComponent\n       },\n { path: 'Cvdoptions', component: CvdoptionListComponent },\n { path: 'Cvdoptions/:id', component: CvdoptionDetailComponent },\n {\n path: 'Cvdoptions/:id/edit',\n //canDeactivate: [CvdoptionEditGuard],\n component: CvdoptionEditComponent\n }, \n       { path: 'Cvdlevels', component: CvdlevelListComponent },\n       { path: 'Cvdlevels/:id', component: CvdlevelDetailComponent },\n       {\n       path: 'Cvdlevels/:id/edit',\n       //canDeactivate: [CvdlevelEditGuard],\n       component: CvdlevelEditComponent\n       },\n       { path: 'Cvdlearnchecks', component: CvdlearncheckListComponent },\n       { path: 'Cvdlearnchecks/:id', component: CvdlearncheckDetailComponent },\n       {\n       path: 'Cvdlearnchecks/:id/edit',\n       //canDeactivate: [CvdlearncheckEditGuard],\n       component: CvdlearncheckEditComponent\n       },\n       { path: 'Cvdfeedbacks', component: CvdfeedbackListComponent },\n       { path: 'Cvdfeedbacks/:id', component: CvdfeedbackDetailComponent },\n       {\n       path: 'Cvdfeedbacks/:id/edit',\n       //canDeactivate: [CvdfeedbackEditGuard],\n       component: CvdfeedbackEditComponent\n       },\n       { path: 'Cvdfaqs', component: CvdfaqListComponent },\n       { path: 'Cvdfaqs/:id', component: CvdfaqDetailComponent },\n       {\n       path: 'Cvdfaqs/:id/edit',\n       //canDeactivate: [CvdfaqEditGuard],\n       component: CvdfaqEditComponent\n       },\n       { path: 'Cvddiscussions', component: CvddiscussionListComponent },\n       { path: 'Cvddiscussions/:id', component: CvddiscussionDetailComponent },\n       {\n       path: 'Cvddiscussions/:id/edit',\n       //canDeactivate: [CvddiscussionEditGuard],\n       component: CvddiscussionEditComponent\n       },\n        { path: 'Cvdcoursestatus', component: CvdcoursestatuListComponent },\n        { path: 'Cvdcoursestatus/:id', component: CvdcoursestatuDetailComponent },\n        {\n        path: 'Cvdcoursestatus/:id/edit',\n        //canDeactivate: [CvdcoursestatuEditGuard],\n        component: CvdcoursestatuEditComponent\n        },\n       { path: 'Cvdcourses', component: CvdcourseListComponent },\n       { path: 'Cvdcourses/:id', component: CvdcourseDetailComponent },\n       {\n       path: 'Cvdcourses/:id/edit',\n       //canDeactivate: [CvdcourseEditGuard],\n       component: CvdcourseEditComponent\n       },\n       { path: 'Cvdclasses', component: CvdclasseListComponent },\n       { path: 'Cvdclasses/:id', component: CvdclasseDetailComponent },\n       {\n       path: 'Cvdclasses/:id/edit',\n       //canDeactivate: [CvdclasseEditGuard],\n       component: CvdclasseEditComponent\n       },      \n       { path: 'Cvdscreens', component: CvdscreenListComponent },\n       { path: 'Cvdscreens/:id', component: CvdscreenDetailComponent },\n       {\n       path: 'Cvdscreens/:id/edit',\n       //canDeactivate: [CvdscreenEditGuard],\n       component: CvdscreenEditComponent\n       },\n      { path: 'Cvdroles', component: CvdroleListComponent },\n      { path: 'Cvdroles/:id', component: CvdroleDetailComponent },\n      {\n        path: 'Cvdroles/:id/edit',\n        //canDeactivate: [ProjroleEditGuard],\n        component: CvdroleEditComponent\n      },\n      { path: 'logins', component: LoginComponent },\n      { path: 'registers', component: RegisterComponent },\n      { path: \"forgotpasswords\", component: ForgotPasswordComponent },\n      { path: 'homes', component: HomeComponent },\n      { path: '', redirectTo: 'homes', pathMatch: 'full' },\n      { path: '**', redirectTo: 'homes', pathMatch: 'full' }\n\n    ]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Cvduser } from '../models/cvduser';\n\nexport class appconstants {\n    public static url: string = \"http://localhost:53931/api/\";\n    public static gblisUserLoggedin: boolean = false;\n    public static gblLoggedinUserName: string;\n    public static gblLoggedinUserId: number;\n    public static gblLoggedinUserRole: number = 0;\n  static gblobjCvduser: Cvduser;\n    //public static gblobjCustomer: Cvduser;\n}\n\n\n","import { FormGroup } from '@angular/forms';\n\nexport class GenericValidator {\n\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n    }\n\n    processMessages(container: FormGroup): { [key: string]: string } {\n        const messages = {};\n        for (const controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                const c = container.controls[controlKey];\n                if (c instanceof FormGroup) {\n                    const childMessages = this.processMessages(c);\n                    Object.assign(messages, childMessages);\n                } else {\n                    if (this.validationMessages[controlKey]) {\n                        messages[controlKey] = '';\n                        if ((c.dirty || c.touched) && c.errors) {\n                            Object.keys(c.errors).map(messageKey => {\n                                if (this.validationMessages[controlKey][messageKey]) {\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return messages;\n    }\n\n    getErrorCount(container: FormGroup): number {\n        let errorCount = 0;\n        for (const controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                if (container.controls[controlKey].errors) {\n                    errorCount += Object.keys(container.controls[controlKey].errors).length;\n                    console.log(errorCount);\n                }\n            }\n        }\n        return errorCount;\n    }\n}","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\n\n@Component({\n  selector: 'app-classe-detail',\n  templateUrl: './cvdclasse-detail.component.html',\n  styleUrls: ['./cvdclasse-detail.component.css']\n})\nexport class CvdclasseDetailComponent implements OnDestroy, OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  pageTitle: string = 'Class Detail';\n  errorMessage = '';\n  objCvdclasse: Cvdclasse | undefined;\n\n  constructor(private objCvdlevelService: CvdlevelService, private route: ActivatedRoute,\n    private router: Router,\n    private objCvdclasseService: CvdclasseService) { }\n\n\n  getCvdclasse(id: number) {\n    this.objCvdclasseService.getCvdclasse(id).subscribe({\n      next: (data: Cvdclasse) => {\n        this.objCvdclasse = data;\n        this.getCvdlevel(this.objCvdclasse.FCvdlevelId);\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/Cvdclasses']);\n  }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n    this.GetQueryStringParams();\n  }\n\n\n  getCvdlevel(id: number): void {\n    this.objCvdlevelService.getCvdlevel(id)\n      .subscribe({\n        next: (data) => this.objCvdclasse.CvdlevelName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  private sub: Subscription;\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  GetQueryStringParams() {\n    this.sub = this.route.paramMap.subscribe(\n      params => {\n        const id = +params.get('id');\n        this.getCvdclasse(id);\n      }\n    );\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdclasse\">\n    {{pageTitle + \": \" + objCvdclasse.Name}}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdclasse\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdclasse.Name }}</div>\n        </div>\n        <div  class=\"row\">\n          <div class=\"col-md-3\">Level Name</div>\n          <div class=\"col-md-6\">{{ objCvdclasse.CvdlevelName }}</div>\n        </div>\n      </div>\n     \n    </div>\n    \n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdclasses', objCvdclasse.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\n\n@Component({\n selector: 'app-classe-edit', \n templateUrl: './cvdclasse-edit.component.html',\n styleUrls: ['./cvdclasse-edit.component.css']\n})\nexport class CvdclasseEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdclasseForm: FormGroup;\n objCvdclasse: Cvdclasse;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdclasseForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdclasseForm);\n });\n }\n\n constructor(\n  private objCvdlevelService: CvdlevelService,private route: ActivatedRoute, private router: Router, private objCvdclasseService: CvdclasseService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n  FCvdlevelId: {\n  min: 'This field is required'\n  },\n \n \n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdlevel(); \n  }\n  // ngoninit\n  \n  CvdlevelList: Cvdlevel[];\n  getAllCvdlevel() {\n    this.objCvdlevelService.getAllCvdlevel().subscribe({\n     next: data => {\n        this.CvdlevelList = data;\n        if(this.CvdclasseForm.controls.FCvdlevelId.value===undefined)\n           this.CvdclasseForm.controls.FCvdlevelId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdclasse(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdclasseForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdlevelId: [0, Validators.min(1)],\n \n\n   \n\n});\n}\n\n displayCvdclasse(objCvdclasse: Cvdclasse): void {\n if (this.CvdclasseForm) {\n this.CvdclasseForm.reset();\n }\n this.objCvdclasse = objCvdclasse;\n\n if (this.objCvdclasse.id === 0) {\n this.pageTitle = 'Add Class';\n } else {\n this.pageTitle = `Edit Class: ${this.objCvdclasse.Name  }`;\n }\n\n this.CvdclasseForm.patchValue({\n  Name: this.objCvdclasse.Name,\n  \n FCvdlevelId: this.objCvdclasse.FCvdlevelId\n\n\n });\n }\n\n saveCvdclasse(): void {\n if (this.CvdclasseForm.valid) {\n if (this.CvdclasseForm.dirty) {\n const p = { ...this.objCvdclasse, ...this.CvdclasseForm.value };\n\n if (p.id === 0) {\n this.createCvdclasse(p);\n } else {\n this.updateCvdclasse(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdclasse.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdclasse(this.objCvdclasse.id)\n }\n }\n }\n\n PerformOperation(data: Cvdclasse): void { \n this.displayCvdclasse(data);\n }\n getCvdclasse(id: number): void {\n this.objCvdclasseService.getCvdclasse(id)\n .subscribe({\n next: (data: Cvdclasse) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdclasse(p: Cvdclasse): void\n {\n this.objCvdclasseService.createCvdclasse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdclasse(p: Cvdclasse): void\n {\n this.objCvdclasseService.updateCvdclasse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdclasse(id: number): void {\n this.objCvdclasseService.deleteCvdclasse(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdclasseForm.reset();\n this.router.navigate(['/Cvdclasses']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdclasse()\"\n          [formGroup]=\"CvdclasseForm\">\n          \n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdlevelId\" >Select Level</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdlevelId\" formControlName=\"FCvdlevelId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdlevelId}\">\n      <option [value]='0' selected>Select Level...</option>\"\n      <option *ngFor=\"let lstCvdlevel of CvdlevelList\"\n      [value]=\"lstCvdlevel.id\">{{lstCvdlevel.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdlevelId}}\n      </span>\n      </div>\n      </div>\n\n            \n\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdclasseForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdclasseForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdclasses']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\n\n@Component({\n   selector: 'app-classe-list',\n   templateUrl: './cvdclasse-list.component.html',\n   styleUrls: ['./cvdclasse-list.component.css']\n})\nexport class CvdclasseListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdlevelService: CvdlevelService, private objCvdclasseService: CvdclasseService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdlevel();\n   }\n\n\n   CvdlevelList: Cvdlevel[];\n   getAllCvdlevel() {\n      this.objCvdlevelService.getAllCvdlevel().subscribe({\n         next: data => {\n            this.CvdlevelList = data;\n            this.getAllCvdclasse();\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n\n   getCvdlevelNameFromId(Id: Number): string {\n      return this.CvdlevelList.find(r => r.id === Id).Name;\n   }\n\n   errorMessage: any;\n   pageTitle: string = \"Class List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdclasses = this.listFilter ? this.performFilter(this.listFilter) : this.CvdclasseList;\n   }\n\n   filteredCvdclasses: Cvdclasse[] = [];\n   CvdclasseList: Cvdclasse[] = [];\n\n   performFilter(filterBy: string): Cvdclasse[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdclasseList.filter((data: Cvdclasse) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdclasse() {\n      this.objCvdclasseService.getAllCvdclasse().subscribe({\n         next: data => {\n            this.CvdclasseList = data;\n            this.CvdclasseList.forEach(r => r.CvdlevelName = this.getCvdlevelNameFromId(r.FCvdlevelId));\n            this.filteredCvdclasses = this.CvdclasseList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdclasses', 0, 'edit']\">\n        Add Class\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdclasseList && CvdclasseList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Level Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdclasse of filteredCvdclasses\">\n            <td>\n              <a [routerLink]=\"['/Cvdclasses', itrCvdclasse.id]\">\n                {{ itrCvdclasse.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdclasse.CvdlevelName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdclasses', itrCvdclasse.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\n\n@Component({\n  selector: 'app-cvdcourse-detail',\n  templateUrl: './cvdcourse-detail.component.html',\n  styleUrls: ['./cvdcourse-detail.component.css']\n})\nexport class CvdcourseDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Course Detail';\n errorMessage = '';\n objCvdcourse: Cvdcourse | undefined;\n\nconstructor( private objCvdclasseService: CvdclasseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdcourseService: CvdcourseService) { }\n\n   getCvdclasse(id: number): void {\n     this.objCvdclasseService.getCvdclasse(id)\n       .subscribe({\n         next: (data) => this.objCvdcourse.CvdclasseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n getCvdcourse(id: number) {\n this.objCvdcourseService.getCvdcourse(id).subscribe({\n  next: (data: Cvdcourse) => {\n    this.objCvdcourse = data;\n    this.getCvdclasse(this.objCvdcourse.FCvdclassId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdcourses']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdcourse(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdcourse\">\n    {{pageTitle + \": \" + objCvdcourse.Name}}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdcourse\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdcourse.Name }}</div>\n        </div>\n           \n      <div class=\"row\">\n        <div class=\"col-md-3\">Description</div>\n        <div class=\"col-md-6\">{{ objCvdcourse.Description }}</div>\n      </div>\n      <div class=\"row\"><div class=\"col-md-3\">Duration Hour</div><div class=\"col-md-6\">{{ objCvdcourse.DurationHr }}</div></div>\n      <div class=\"row\"><div class=\"col-md-3\">Duration Minute</div><div class=\"col-md-6\">{{ objCvdcourse.DurationMin }}</div></div>\n      <div class=\"row\"><div class=\"col-md-3\">CvdclasseName</div><div class=\"col-md-6\">{{ objCvdcourse.CvdclasseName }}</div></div>\n    </div>\n  </div>\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdcourses', objCvdcourse.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\n\n@Component({\n selector: 'app-cvdcourse-edit', \n templateUrl: './cvdcourse-edit.component.html',\n styleUrls: ['./cvdcourse-edit.component.css']\n})\nexport class CvdcourseEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdcourseForm: FormGroup;\n objCvdcourse: Cvdcourse;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdcourseForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdcourseForm);\n });\n }\n\n constructor(private objCvdclasseService: CvdclasseService, private route: ActivatedRoute, private router: Router, private objCvdcourseService: CvdcourseService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n  Description: {\n  required: 'This field is required'\n  },\n  DurationHr: {\n  required: 'This field is required'\n  },\n DurationMin: {\n required: 'This field is required'\n },\n\n \n\n FCvdclassId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdclasse();\n  }\n\n   \n  \n  CvdclasseList: Cvdclasse[];\n  getAllCvdclasse() {\n    this.objCvdclasseService.getAllCvdclasse().subscribe({\n     next: data => {\n        this.CvdclasseList = data;\n        if(this.CvdcourseForm.controls.FCvdclassId.value===undefined)\n           this.CvdcourseForm.controls.FCvdclassId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  } \n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdcourse(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdcourseForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Description: ['', Validators.required],\n    DurationHr: ['', Validators.required],\n    DurationMin: ['', Validators.required],\n    FCvdclassId: [0, Validators.min(1)],    \n\n  });\n}\n\n displayCvdcourse(objCvdcourse: Cvdcourse): void {\n if (this.CvdcourseForm) {\n this.CvdcourseForm.reset();\n }\n this.objCvdcourse = objCvdcourse;\n\n if (this.objCvdcourse.id === 0) {\n this.pageTitle = 'Add Course';\n } else {\n this.pageTitle = `Edit Course: ${this.objCvdcourse.Name  }`;\n }\n\n this.CvdcourseForm.patchValue({\n  Name: this.objCvdcourse.Name\n  ,Description: this.objCvdcourse.Description\n  ,DurationHr: this.objCvdcourse.DurationHr\n  ,DurationMin: this.objCvdcourse.DurationMin,\n  FCvdclassId: this.objCvdcourse.FCvdclassId\n \n\n});\n }\n\n saveCvdcourse(): void {\n if (this.CvdcourseForm.valid) {\n if (this.CvdcourseForm.dirty) {\n const p = { ...this.objCvdcourse, ...this.CvdcourseForm.value };\n\n if (p.id === 0) {\n this.createCvdcourse(p);\n } else {\n this.updateCvdcourse(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdcourse.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdcourse(this.objCvdcourse.id)\n }\n }\n }\n\n PerformOperation(data: Cvdcourse): void { \n this.displayCvdcourse(data);\n }\n getCvdcourse(id: number): void {\n this.objCvdcourseService.getCvdcourse(id)\n .subscribe({\n next: (data: Cvdcourse) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdcourse(p: Cvdcourse): void\n {\n this.objCvdcourseService.createCvdcourse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdcourse(p: Cvdcourse): void\n {\n this.objCvdcourseService.updateCvdcourse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdcourse(id: number): void {\n this.objCvdcourseService.deleteCvdcourse(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdcourseForm.reset();\n this.router.navigate(['/Cvdcourses']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdcourse()\"\n          [formGroup]=\"CvdcourseForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DescriptionId\">Description</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DescriptionId\"\n                             type=\"text\"\n                             placeholder=\"Description (required)\"\n                             formControlName=\"Description\"\n                             [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.Description}}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DurationHrId\">Hour</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DurationHrId\"\n                             type=\"text\"\n                             placeholder=\"Duration Hour (required)\"\n                             formControlName=\"DurationHr\"\n                             [ngClass]=\"{'is-invalid': displayMessage.DurationHr}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.DurationHr}}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DurationMinId\">Minute</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DurationMinId\"\n                             type=\"text\"\n                             placeholder=\"Duration Minute (required)\"\n                             formControlName=\"DurationMin\"\n                             [ngClass]=\"{'is-invalid': displayMessage.DurationMin}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.DurationMin}}\n                      </span>\n                    </div>\n                  </div>\n            \n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdclassId\" >Select Class</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdclassId\" formControlName=\"FCvdclassId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdclassId}\">\n      <option [value]='0' selected>Select Class...</option>\"\n      <option *ngFor=\"let lstCvdclasse of CvdclasseList\"\n      [value]=\"lstCvdclasse.id\">{{lstCvdclasse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdclassId}}\n      </span>\n      </div>\n      </div>  \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdcourseForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdcourseForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdcourses']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\n\n@Component({\n selector: 'app-cvdcourse-list',\n templateUrl: './cvdcourse-list.component.html',\n styleUrls: ['./cvdcourse-list.component.css']\n})\nexport class CvdcourseListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdclasseService: CvdclasseService,private objCvdcourseService: CvdcourseService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdclasse();\n}\n\n \n  CvdclasseList: Cvdclasse[];\n  getAllCvdclasse() {\n    this.objCvdclasseService.getAllCvdclasse().subscribe({\n      next: data => {\n        this.CvdclasseList = data;\n        this.getAllCvdcourse();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdclasseNameFromId(Id: Number): string {\n    return this.CvdclasseList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Course List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdcourses = this.listFilter ? this.performFilter(this.listFilter) : this.CvdcourseList;\n }\n\n filteredCvdcourses: Cvdcourse[] = [];\n CvdcourseList: Cvdcourse[] = [];\n\n performFilter(filterBy: string): Cvdcourse[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdcourseList.filter((data: Cvdcourse) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdcourse() {\n this.objCvdcourseService.getAllCvdcourse().subscribe({\n next: data => {\n this.CvdcourseList = data;\n this.CvdcourseList.forEach(r=>r.CvdclasseName = this.getCvdclasseNameFromId(r.FCvdclassId));\n this.filteredCvdcourses = this.CvdcourseList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdcourses', 0, 'edit']\">\n        Add Course\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdcourseList && CvdcourseList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Video Length</th> \n            <th>Class Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdcourse of filteredCvdcourses\">\n            <td>\n              <a [routerLink]=\"['/Cvdcourses', itrCvdcourse.id]\">\n                {{ itrCvdcourse.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdcourse.Description }}</td>\n            <td>{{ itrCvdcourse.DurationHr + \" : \" + itrCvdcourse.DurationMin }}</td>\n            <td>{{ itrCvdcourse.CvdclasseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdcourses', itrCvdcourse.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdcoursestatu-detail',\n  templateUrl: './cvdcoursestatu-detail.component.html',\n  styleUrls: ['./cvdcoursestatu-detail.component.css']\n})\nexport class CvdcoursestatuDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Course Status Detail';\n errorMessage = '';\n objCvdcoursestatu: Cvdcoursestatu | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private objCvdstatuService: CvdstatuService,\n  private objCvduserService: CvduserService,private route: ActivatedRoute,\n private router: Router,\n private objCvdcoursestatuService: CvdcoursestatuService) { }\n\n\n getCvdcoursestatu(id: number) {\n this.objCvdcoursestatuService.getCvdcoursestatu(id).subscribe({\n  next: (data: Cvdcoursestatu) => {\n    this.objCvdcoursestatu = data;\n    this.getCvduser(this.objCvdcoursestatu.FCvduserId);\n    this.getCvdstatu(this.objCvdcoursestatu.FCvdstatusId);\n    this.getCvdcourse(this.objCvdcoursestatu.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  getCvdstatu(id: number): void {\n    this.objCvdstatuService.getCvdstatu(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvdstatuName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n\n       \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n \n\n onBack(): void {\n this.router.navigate(['/Cvdcoursestatus']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdcoursestatu(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdcoursestatu\">\n    {{pageTitle + \": \" + objCvdcoursestatu.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdcoursestatu\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdcoursestatu.Name }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            CvduserName</div>\n            <div class=\"col-md-6\">{{ objCvdcoursestatu.CvduserName }}</div>\n          </div>\n          <div class=\"row\"><div class=\"col-md-3\">Status Name</div><div class=\"col-md-6\">{{ objCvdcoursestatu.CvdstatuName }}</div></div>\n          <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdcoursestatu.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdcoursestatus', objCvdcoursestatu.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n selector: 'app-cvdcoursestatu-edit', \n templateUrl: './cvdcoursestatu-edit.component.html',\n styleUrls: ['./cvdcoursestatu-edit.component.css']\n})\nexport class CvdcoursestatuEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdcoursestatuForm: FormGroup;\n objCvdcoursestatu: Cvdcoursestatu;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdcoursestatuForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdcoursestatuForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private objCvdstatuService: CvdstatuService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdcoursestatuService: CvdcoursestatuService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n FCvdstatusId: {\n min: 'This field is required'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdstatu(); \n    this.getAllCvdcourse(); \n  }\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdcoursestatuForm.controls.FCvdcourseId.value===undefined)\n           this.CvdcoursestatuForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n\nCvdstatuList: Cvdstatu[];\ngetAllCvdstatu() {\n  this.objCvdstatuService.getAllCvdstatu().subscribe({\n   next: data => {\n      this.CvdstatuList = data;\n      if(this.CvdcoursestatuForm.controls.FCvdstatusId.value===undefined)\n         this.CvdcoursestatuForm.controls.FCvdstatusId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n   \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdcoursestatuForm.controls.FCvduserId.value===undefined)\n           this.CvdcoursestatuForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdcoursestatu(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdcoursestatuForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvduserId: [0, Validators.min(1)],\n    FCvdstatusId: [0, Validators.min(1)],\n    FCvdcourseId: [0, Validators.min(1)],\n\n    \n    \n\n   \n\n});\n}\n\n displayCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): void {\n if (this.CvdcoursestatuForm) {\n this.CvdcoursestatuForm.reset();\n }\n this.objCvdcoursestatu = objCvdcoursestatu;\n\n if (this.objCvdcoursestatu.id === 0) {\n this.pageTitle = 'Add Course Status';\n } else {\n this.pageTitle = `Edit Course Status: ${this.objCvdcoursestatu.Name  }`;\n }\n\n this.CvdcoursestatuForm.patchValue({\n  Name: this.objCvdcoursestatu.Name,\n  FCvduserId: this.objCvdcoursestatu.FCvduserId,\n  FCvdstatusId: this.objCvdcoursestatu.FCvdstatusId,\n  FCvdcourseId: this.objCvdcoursestatu.FCvdcourseId\n\n\n\n\n\n });\n }\n\n saveCvdcoursestatu(): void {\n if (this.CvdcoursestatuForm.valid) {\n if (this.CvdcoursestatuForm.dirty) {\n const p = { ...this.objCvdcoursestatu, ...this.CvdcoursestatuForm.value };\n\n if (p.id === 0) {\n this.createCvdcoursestatu(p);\n } else {\n this.updateCvdcoursestatu(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdcoursestatu.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdcoursestatu(this.objCvdcoursestatu.id)\n }\n }\n }\n\n PerformOperation(data: Cvdcoursestatu): void { \n this.displayCvdcoursestatu(data);\n }\n getCvdcoursestatu(id: number): void {\n this.objCvdcoursestatuService.getCvdcoursestatu(id)\n .subscribe({\n next: (data: Cvdcoursestatu) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdcoursestatu(p: Cvdcoursestatu): void\n {\n this.objCvdcoursestatuService.createCvdcoursestatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdcoursestatu(p: Cvdcoursestatu): void\n {\n this.objCvdcoursestatuService.updateCvdcoursestatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdcoursestatu(id: number): void {\n this.objCvdcoursestatuService.deleteCvdcoursestatu(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdcoursestatuForm.reset();\n this.router.navigate(['/Cvdcoursestatus']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvdcoursestatu()\"\n      [formGroup]=\"CvdcoursestatuForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvduserId\">Select User</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\" [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdstatusId\">Select Statu</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdstatusId\" formControlName=\"FCvdstatusId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdstatusId}\">\n            <option [value]='0' selected>Select Statu...</option>\"\n            <option *ngFor=\"let lstCvdstatu of CvdstatuList\" [value]=\"lstCvdstatu.id\">{{lstCvdstatu.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdstatusId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdcourseId\">Select Course</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\" [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvdcoursestatuForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvdcoursestatuForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdcoursestatus']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdcoursestatu-list',\n   templateUrl: './cvdcoursestatu-list.component.html',\n   styleUrls: ['./cvdcoursestatu-list.component.css']\n})\nexport class CvdcoursestatuListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdstatuService: CvdstatuService, private objCvdcoursestatuService: CvdcoursestatuService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdstatu();\n   }\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdcoursestatu();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  } \n     \n     CvdstatuList: Cvdstatu[];\n     getAllCvdstatu() {\n       this.objCvdstatuService.getAllCvdstatu().subscribe({\n         next: data => {\n           this.CvdstatuList = data;\n           this.getAllCvdcourse();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdstatuNameFromId(Id: Number): string {\n       return this.CvdstatuList.find(r=>r.id===Id).Name;\n     }\n   errorMessage: any;\n   pageTitle: string = \"Course Status List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdcoursestatus = this.listFilter ? this.performFilter(this.listFilter) : this.CvdcoursestatuList;\n   }\n\n   filteredCvdcoursestatus: Cvdcoursestatu[] = [];\n   CvdcoursestatuList: Cvdcoursestatu[] = [];\n\n   performFilter(filterBy: string): Cvdcoursestatu[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdcoursestatuList.filter((data: Cvdcoursestatu) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdcoursestatu() {\n      this.objCvdcoursestatuService.getAllCvdcoursestatu().subscribe({\n         next: data => {\n            this.CvdcoursestatuList = data;\n            this.CvdcoursestatuList.forEach(r=>r.CvdstatuName = this.getCvdstatuNameFromId(r.FCvdstatusId));\n            this.CvdcoursestatuList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.filteredCvdcoursestatus = this.CvdcoursestatuList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdcoursestatus', 0, 'edit']\">\n        Add Course Status\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdcoursestatuList && CvdcoursestatuList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Status Name</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdcoursestatu of filteredCvdcoursestatus\">\n            <td>\n              <a [routerLink]=\"['/Cvdcoursestatus', itrCvdcoursestatu.id]\">\n                {{ itrCvdcoursestatu.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdcoursestatu.CvdstatuName }}</td>\n            <td>{{ itrCvdcoursestatu.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdcoursestatus', itrCvdcoursestatu.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvddiscussion-detail',\n  templateUrl: './cvddiscussion-detail.component.html',\n  styleUrls: ['./cvddiscussion-detail.component.css']\n})\nexport class CvddiscussionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Discussion Detail';\n errorMessage = '';\n objCvddiscussion: Cvddiscussion | undefined;\n\nconstructor(private objCvduserService: CvduserService,private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvddiscussionService: CvddiscussionService) { }\n\n\n getCvddiscussion(id: number) {\n this.objCvddiscussionService.getCvddiscussion(id).subscribe({\n  next: (data: Cvddiscussion) => {\n    this.objCvddiscussion = data;\n    this.getCvdcourse(this.objCvddiscussion.FCvdcourseId);\n    this.getCvduser(this.objCvddiscussion.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n\n       \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvddiscussion.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n \n        \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvddiscussion.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvddiscussions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvddiscussion(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvddiscussion\">\n    {{pageTitle + \": \" + objCvddiscussion.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvddiscussion\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvddiscussion.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvddiscussion.CvdcourseName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvddiscussion.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvddiscussions', objCvddiscussion.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvddiscussion-edit', \n templateUrl: './cvddiscussion-edit.component.html',\n styleUrls: ['./cvddiscussion-edit.component.css']\n})\nexport class CvddiscussionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvddiscussionForm: FormGroup;\n objCvddiscussion: Cvddiscussion;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvddiscussionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvddiscussionForm);\n });\n }\n\n constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvddiscussionService: CvddiscussionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n  FCvdcourseId: {\n  min: 'This field is required'\n  },\n\n   FCvduserId: {\n   min: 'This field is required'\n   },\n  \n \n \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n    this.getAllCvduser(); \n  }\n  \n   \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvddiscussionForm.controls.FCvduserId.value===undefined)\n           this.CvddiscussionForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvddiscussionForm.controls.FCvdcourseId.value===undefined)\n           this.CvddiscussionForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvddiscussion(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvddiscussionForm = this.fb.group({\n\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n    \n   FCvduserId: [0, Validators.min(1)],\n  \n \n    \n   \n    \n   \n   \n});\n}\n\n displayCvddiscussion(objCvddiscussion: Cvddiscussion): void {\n if (this.CvddiscussionForm) {\n this.CvddiscussionForm.reset();\n }\n this.objCvddiscussion = objCvddiscussion;\n\n if (this.objCvddiscussion.id === 0) {\n this.pageTitle = 'Add Discussion';\n } else {\n this.pageTitle = `Edit Discussion: ${this.objCvddiscussion.Name  }`;\n }\n\n this.CvddiscussionForm.patchValue({\n  Name: this.objCvddiscussion.Name,\n  FCvdcourseId: this.objCvddiscussion.FCvdcourseId,\n  \n  FCvduserId: this.objCvddiscussion.FCvduserId\n\n\n });\n }\n\n saveCvddiscussion(): void {\n if (this.CvddiscussionForm.valid) {\n if (this.CvddiscussionForm.dirty) {\n const p = { ...this.objCvddiscussion, ...this.CvddiscussionForm.value };\n\n if (p.id === 0) {\n this.createCvddiscussion(p);\n } else {\n this.updateCvddiscussion(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvddiscussion.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvddiscussion(this.objCvddiscussion.id)\n }\n }\n }\n\n PerformOperation(data: Cvddiscussion): void { \n this.displayCvddiscussion(data);\n }\n getCvddiscussion(id: number): void {\n this.objCvddiscussionService.getCvddiscussion(id)\n .subscribe({\n next: (data: Cvddiscussion) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvddiscussion(p: Cvddiscussion): void\n {\n this.objCvddiscussionService.createCvddiscussion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvddiscussion(p: Cvddiscussion): void\n {\n this.objCvddiscussionService.updateCvddiscussion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvddiscussion(id: number): void {\n this.objCvddiscussionService.deleteCvddiscussion(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvddiscussionForm.reset();\n this.router.navigate(['/Cvddiscussions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvddiscussion()\"\n          [formGroup]=\"CvddiscussionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>  \n      \n            \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvddiscussionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvddiscussionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvddiscussions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n  selector: 'app-cvddiscussion-list',\n  templateUrl: './cvddiscussion-list.component.html',\n  styleUrls: ['./cvddiscussion-list.component.css']\n})\nexport class CvddiscussionListComponent implements OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private objCvddiscussionService: CvddiscussionService, private router: Router) { }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.getAllCvdcourse();\n  }\n\n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvddiscussion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r => r.id === Id).Name;\n  }\n\n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r => r.id === Id).Name;\n  }\n  errorMessage: any;\n  pageTitle: string = \"Discussion List\";\n  _listFilter = '';\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredCvddiscussions = this.listFilter ? this.performFilter(this.listFilter) : this.CvddiscussionList;\n  }\n\n  filteredCvddiscussions: Cvddiscussion[] = [];\n  CvddiscussionList: Cvddiscussion[] = [];\n\n  performFilter(filterBy: string): Cvddiscussion[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.CvddiscussionList.filter((data: Cvddiscussion) =>\n      data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n  getAllCvddiscussion() {\n    this.objCvddiscussionService.getAllCvddiscussion().subscribe({\n      next: data => {\n        this.CvddiscussionList = data;\n        this.CvddiscussionList.forEach(r => r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n        this.CvddiscussionList.forEach(r => r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n        this.filteredCvddiscussions = this.CvddiscussionList;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvddiscussions', 0, 'edit']\">\n        Add Discussion\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvddiscussionList && CvddiscussionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvddiscussion of filteredCvddiscussions\">\n            <td>\n              <a [routerLink]=\"['/Cvddiscussions', itrCvddiscussion.id]\">\n                {{ itrCvddiscussion.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvddiscussion.CvdcourseName }}</td>\n            <td>{{ itrCvddiscussion.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvddiscussions', itrCvddiscussion.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdfaq-detail',\n  templateUrl: './cvdfaq-detail.component.html',\n  styleUrls: ['./cvdfaq-detail.component.css']\n})\nexport class CvdfaqDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'FAQ Detail';\n errorMessage = '';\n objCvdfaq: Cvdfaq | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdfaqService: CvdfaqService) { }\n\n\n getCvdfaq(id: number) {\n this.objCvdfaqService.getCvdfaq(id).subscribe({\n next: (data: Cvdfaq) => this.objCvdfaq = data,\n error: err => this.errorMessage = err\n });\n }\n\n \n onBack(): void {\n this.router.navigate(['/Cvdfaqs']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdfaq(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdfaq\">\n    {{pageTitle + \": \" + objCvdfaq.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdfaq\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdfaq.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdfaqs', objCvdfaq.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdfaq-edit', \n templateUrl: './cvdfaq-edit.component.html',\n styleUrls: ['./cvdfaq-edit.component.css']\n})\nexport class CvdfaqEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdfaqForm: FormGroup;\n objCvdfaq: Cvdfaq;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdfaqForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdfaqForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdfaqService: CvdfaqService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n  \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdfaq(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdfaqForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n \n\n});\n}\n\n displayCvdfaq(objCvdfaq: Cvdfaq): void {\n if (this.CvdfaqForm) {\n this.CvdfaqForm.reset();\n }\n this.objCvdfaq = objCvdfaq;\n\n if (this.objCvdfaq.id === 0) {\n this.pageTitle = 'Add FAQ';\n } else {\n this.pageTitle = `Edit FAQ: ${this.objCvdfaq.Name  }`;\n }\n\n this.CvdfaqForm.patchValue({\n  Name: this.objCvdfaq.Name\n\n\n });\n }\n\n saveCvdfaq(): void {\n if (this.CvdfaqForm.valid) {\n if (this.CvdfaqForm.dirty) {\n const p = { ...this.objCvdfaq, ...this.CvdfaqForm.value };\n\n if (p.id === 0) {\n this.createCvdfaq(p);\n } else {\n this.updateCvdfaq(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdfaq.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdfaq(this.objCvdfaq.id)\n }\n }\n }\n\n PerformOperation(data: Cvdfaq): void { \n this.displayCvdfaq(data);\n }\n getCvdfaq(id: number): void {\n this.objCvdfaqService.getCvdfaq(id)\n .subscribe({\n next: (data: Cvdfaq) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdfaq(p: Cvdfaq): void\n {\n this.objCvdfaqService.createCvdfaq(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdfaq(p: Cvdfaq): void\n {\n this.objCvdfaqService.updateCvdfaq(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdfaq(id: number): void {\n this.objCvdfaqService.deleteCvdfaq(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdfaqForm.reset();\n this.router.navigate(['/Cvdfaqs']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdfaq()\"\n          [formGroup]=\"CvdfaqForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdfaqForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdfaqForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdfaqs']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdfaq-list',\n templateUrl: './cvdfaq-list.component.html',\n styleUrls: ['./cvdfaq-list.component.css']\n})\nexport class CvdfaqListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdfaqService: CvdfaqService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdfaq(); \n}\nerrorMessage: any;\npageTitle: string = \"FAQ List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdfaqs = this.listFilter ? this.performFilter(this.listFilter) : this.CvdfaqList;\n }\n\n filteredCvdfaqs: Cvdfaq[] = [];\n CvdfaqList: Cvdfaq[] = [];\n\n performFilter(filterBy: string): Cvdfaq[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdfaqList.filter((data: Cvdfaq) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdfaq() {\n this.objCvdfaqService.getAllCvdfaq().subscribe({\n next: data => {\n this.CvdfaqList = data;\n this.filteredCvdfaqs = this.CvdfaqList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdfaqs', 0, 'edit']\">\n        Add FAQ\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdfaqList && CvdfaqList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdfaq of filteredCvdfaqs\">\n            <td>\n              <a [routerLink]=\"['/Cvdfaqs', itrCvdfaq.id]\">\n                {{ itrCvdfaq.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdfaqs', itrCvdfaq.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdfeedback-detail',\n  templateUrl: './cvdfeedback-detail.component.html',\n  styleUrls: ['./cvdfeedback-detail.component.css']\n})\nexport class CvdfeedbackDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Feedback Detail';\n errorMessage = '';\n objCvdfeedback: Cvdfeedback | undefined;\n\nconstructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdfeedbackService: CvdfeedbackService) { }\n\n\n getCvdfeedback(id: number) {\n this.objCvdfeedbackService.getCvdfeedback(id).subscribe({\n  next: (data: Cvdfeedback) => {\n    this.objCvdfeedback = data;\n    this.getCvdcourse(this.objCvdfeedback.FCvdcourseId);\n    this.getCvduser(this.objCvdfeedback.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdfeedback.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n        \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvdfeedback.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n\n\n\n onBack(): void {\n this.router.navigate(['/Cvdfeedbacks']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdfeedback(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdfeedback\">\n    {{pageTitle + \": \" + objCvdfeedback.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdfeedback\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdfeedback.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdfeedback.CvdcourseName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdfeedback.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdfeedbacks', objCvdfeedback.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdfeedback-edit', \n templateUrl: './cvdfeedback-edit.component.html',\n styleUrls: ['./cvdfeedback-edit.component.css']\n})\nexport class CvdfeedbackEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdfeedbackForm: FormGroup;\n objCvdfeedback: Cvdfeedback;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdfeedbackForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdfeedbackForm);\n });\n }\n\n constructor( private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdfeedbackService: CvdfeedbackService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n  \n    FCvdcourseId: {\n    min: 'This field is required'\n    },\n     FCvduserId: {\n     min: 'This field is required'\n     },\n    \n    \n   \n   \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n    this.getAllCvduser(); \n  }\n\n  // ngoninit \n  \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdfeedbackForm.controls.FCvduserId.value===undefined)\n           this.CvdfeedbackForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdfeedbackForm.controls.FCvdcourseId.value===undefined)\n           this.CvdfeedbackForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdfeedback(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdfeedbackForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n    FCvduserId: [0, Validators.min(1)],\n    \n \n\n});\n}\n\n displayCvdfeedback(objCvdfeedback: Cvdfeedback): void {\n if (this.CvdfeedbackForm) {\n this.CvdfeedbackForm.reset();\n }\n this.objCvdfeedback = objCvdfeedback;\n\n if (this.objCvdfeedback.id === 0) {\n this.pageTitle = 'Add Feedback';\n } else {\n this.pageTitle = `Edit Feedback: ${this.objCvdfeedback.Name  }`;\n }\n\n this.CvdfeedbackForm.patchValue({\n  Name: this.objCvdfeedback.Name,\n  FCvdcourseId: this.objCvdfeedback.FCvdcourseId,\n  FCvduserId: this.objCvdfeedback.FCvduserId\n\n });\n }\n\n saveCvdfeedback(): void {\n if (this.CvdfeedbackForm.valid) {\n if (this.CvdfeedbackForm.dirty) {\n const p = { ...this.objCvdfeedback, ...this.CvdfeedbackForm.value };\n\n if (p.id === 0) {\n this.createCvdfeedback(p);\n } else {\n this.updateCvdfeedback(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdfeedback.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdfeedback(this.objCvdfeedback.id)\n }\n }\n }\n\n PerformOperation(data: Cvdfeedback): void { \n this.displayCvdfeedback(data);\n }\n getCvdfeedback(id: number): void {\n this.objCvdfeedbackService.getCvdfeedback(id)\n .subscribe({\n next: (data: Cvdfeedback) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdfeedback(p: Cvdfeedback): void\n {\n this.objCvdfeedbackService.createCvdfeedback(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdfeedback(p: Cvdfeedback): void\n {\n this.objCvdfeedbackService.updateCvdfeedback(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdfeedback(id: number): void {\n this.objCvdfeedbackService.deleteCvdfeedback(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdfeedbackForm.reset();\n this.router.navigate(['/Cvdfeedbacks']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdfeedback()\"\n          [formGroup]=\"CvdfeedbackForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvdcourseId\" >Select Course</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n            [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n            </span>\n            </div>\n            </div>\n\n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvduserId\" >Select User</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\"\n            [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n            </span>\n            </div>\n            </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdfeedbackForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdfeedbackForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdfeedbacks']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdfeedback-list',\n templateUrl: './cvdfeedback-list.component.html',\n styleUrls: ['./cvdfeedback-list.component.css']\n})\nexport class CvdfeedbackListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private objCvdfeedbackService: CvdfeedbackService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdcourse();\n}\n\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdfeedback();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Feedback List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdfeedbacks = this.listFilter ? this.performFilter(this.listFilter) : this.CvdfeedbackList;\n }\n\n filteredCvdfeedbacks: Cvdfeedback[] = [];\n CvdfeedbackList: Cvdfeedback[] = [];\n\n performFilter(filterBy: string): Cvdfeedback[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdfeedbackList.filter((data: Cvdfeedback) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdfeedback() {\n this.objCvdfeedbackService.getAllCvdfeedback().subscribe({\n next: data => {\n this.CvdfeedbackList = data;\n this.CvdfeedbackList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n this.CvdfeedbackList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.filteredCvdfeedbacks = this.CvdfeedbackList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdfeedbacks', 0, 'edit']\">\n        Add Feedback\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdfeedbackList && CvdfeedbackList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdfeedback of filteredCvdfeedbacks\">\n            <td>\n              <a [routerLink]=\"['/Cvdfeedbacks', itrCvdfeedback.id]\">\n                {{ itrCvdfeedback.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdfeedback.CvdcourseName }}</td>\n            <td>{{ itrCvdfeedback.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdfeedbacks', itrCvdfeedback.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdlearncheck-detail',\n  templateUrl: './cvdlearncheck-detail.component.html',\n  styleUrls: ['./cvdlearncheck-detail.component.css']\n})\nexport class CvdlearncheckDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Learn Check Detail';\n errorMessage = '';\n objCvdlearncheck: Cvdlearncheck | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService,private objCvduserService: CvduserService,private route: ActivatedRoute,\n private router: Router,\n private objCvdlearncheckService: CvdlearncheckService) { }\n\n       \n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdlearncheck.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n \n        \n \n   getCvdquestion(id: number): void {\n     this.objCvdquestionService.getCvdquestion(id)\n       .subscribe({\n         next: (data) => this.objCvdlearncheck.CvdquestionName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n \n        \n \n   getCvduser(id: number): void {\n     this.objCvduserService.getCvduser(id)\n       .subscribe({\n         next: (data) => this.objCvdlearncheck.CvduserName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n getCvdlearncheck(id: number) {\n this.objCvdlearncheckService.getCvdlearncheck(id).subscribe({\n  next: (data: Cvdlearncheck) => {\n    this.objCvdlearncheck = data;\n    this.getCvduser(this.objCvdlearncheck.FCvduserId);\n    this.getCvdquestion(this.objCvdlearncheck.FCvdquestionId);\n    this.getCvdcourse(this.objCvdlearncheck.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdlearnchecks']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdlearncheck(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdlearncheck\">\n    {{pageTitle + \": \" + objCvdlearncheck.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdlearncheck\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdlearncheck.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Status</div><div class=\"col-md-6\">{{ objCvdlearncheck.Status }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Total Questions </div><div class=\"col-md-6\">{{ objCvdlearncheck.Totalques }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Correct Answer</div><div class=\"col-md-6\">{{ objCvdlearncheck.CorrectAns }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvduserName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Question</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvdquestionName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdlearnchecks', objCvdlearncheck.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdlearncheck-edit', \n templateUrl: './cvdlearncheck-edit.component.html',\n styleUrls: ['./cvdlearncheck-edit.component.css']\n})\nexport class CvdlearncheckEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdlearncheckForm: FormGroup;\n objCvdlearncheck: Cvdlearncheck;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdlearncheckForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdlearncheckForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdlearncheckService: CvdlearncheckService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Status: {\n required: 'This field is required'\n },\n Totalques: {\n required: 'This field is required'\n },\n CorrectAns: {\n required: 'This field is required'\n },\n\n\n\n\n  FCvduserId: {\n  min: 'This field is required'\n  },\n \n   FCvdquestionId: {\n   min: 'This field is required'\n   },\n\n    FCvdcourseId: {\n    min: 'This field is required'\n    },\n   \n   \n  \n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdquestion(); \n    this.getAllCvdcourse(); \n  }\n\n// ngoninit \n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdlearncheckForm.controls.FCvdcourseId.value===undefined)\n         this.CvdlearncheckForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n   \n   CvdquestionList: Cvdquestion[];\n   getAllCvdquestion() {\n     this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n         this.CvdquestionList = data;\n         if(this.CvdlearncheckForm.controls.FCvdquestionId.value===undefined)\n            this.CvdlearncheckForm.controls.FCvdquestionId.setValue(0);\n       },\n        error: err => this.errorMessage = err\n     });\n   }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdlearncheckForm.controls.FCvduserId.value===undefined)\n           this.CvdlearncheckForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdlearncheck(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdlearncheckForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Status: ['', Validators.required],\n    Totalques: ['', Validators.required],\n    CorrectAns: ['', Validators.required],\n\n    \n    \n      \n  FCvduserId: [0, Validators.min(1)],\n  FCvdquestionId: [0, Validators.min(1)],\n  FCvdcourseId: [0, Validators.min(1)],  \n});\n}\n\n displayCvdlearncheck(objCvdlearncheck: Cvdlearncheck): void {\n if (this.CvdlearncheckForm) {\n this.CvdlearncheckForm.reset();\n }\n this.objCvdlearncheck = objCvdlearncheck;\n\n if (this.objCvdlearncheck.id === 0) {\n this.pageTitle = 'Add Learn Check';\n } else {\n this.pageTitle = `Edit Learn Check: ${this.objCvdlearncheck.Name  }`;\n }\n\n this.CvdlearncheckForm.patchValue({\n  Name: this.objCvdlearncheck.Name,\n  FCvduserId: this.objCvdlearncheck.FCvduserId,\n  FCvdquestionId: this.objCvdlearncheck.FCvdquestionId,\n  FCvdcourseId: this.objCvdlearncheck.FCvdcourseId,\n  Status: this.objCvdlearncheck.Status,\n  Totalques: this.objCvdlearncheck.Totalques,\n  CorrectAns: this.objCvdlearncheck.CorrectAns\n\n});\n }\n\n saveCvdlearncheck(): void {\n if (this.CvdlearncheckForm.valid) {\n if (this.CvdlearncheckForm.dirty) {\n const p = { ...this.objCvdlearncheck, ...this.CvdlearncheckForm.value };\n\n if (p.id === 0) {\n this.createCvdlearncheck(p);\n } else {\n this.updateCvdlearncheck(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdlearncheck.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdlearncheck(this.objCvdlearncheck.id)\n }\n }\n }\n\n PerformOperation(data: Cvdlearncheck): void { \n this.displayCvdlearncheck(data);\n }\n getCvdlearncheck(id: number): void {\n this.objCvdlearncheckService.getCvdlearncheck(id)\n .subscribe({\n next: (data: Cvdlearncheck) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdlearncheck(p: Cvdlearncheck): void\n {\n this.objCvdlearncheckService.createCvdlearncheck(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdlearncheck(p: Cvdlearncheck): void\n {\n this.objCvdlearncheckService.updateCvdlearncheck(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdlearncheck(id: number): void {\n this.objCvdlearncheckService.deleteCvdlearncheck(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdlearncheckForm.reset();\n this.router.navigate(['/Cvdlearnchecks']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdlearncheck()\"\n          [formGroup]=\"CvdlearncheckForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"StatusId\">Status</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"StatusId\"\n                 type=\"text\"\n                 placeholder=\"Status (required)\"\n                 formControlName=\"Status\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Status}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Status}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"TotalquesId\">Questions</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"TotalquesId\"\n                 type=\"text\"\n                 placeholder=\"Total Questions (required)\"\n                 formControlName=\"Totalques\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Totalques}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Totalques}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"CorrectAnsId\">Answer</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"CorrectAnsId\"\n                 type=\"text\"\n                 placeholder=\"Correct Answer (required)\"\n                 formControlName=\"CorrectAns\"\n                 [ngClass]=\"{'is-invalid': displayMessage.CorrectAns}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.CorrectAns}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdquestionId\" >Select Question</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdquestionId\" formControlName=\"FCvdquestionId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdquestionId}\">\n      <option [value]='0' selected>Select Question...</option>\"\n      <option *ngFor=\"let lstCvdquestion of CvdquestionList\"\n      [value]=\"lstCvdquestion.id\">{{lstCvdquestion.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdquestionId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdlearncheckForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdlearncheckForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdlearnchecks']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdlearncheck-list',\n templateUrl: './cvdlearncheck-list.component.html',\n styleUrls: ['./cvdlearncheck-list.component.css']\n})\nexport class CvdlearncheckListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private objCvduserService: CvduserService, private objCvdlearncheckService: CvdlearncheckService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvduser();\n}\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdlearncheck();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\n\n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n        this.CvdquestionList = data;\n        this.getAllCvdcourse();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdquestionNameFromId(Id: Number): string {\n    return this.CvdquestionList.find(r=>r.id===Id).Name;\n  }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdquestion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Learn Check List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdlearnchecks = this.listFilter ? this.performFilter(this.listFilter) : this.CvdlearncheckList;\n }\n\n filteredCvdlearnchecks: Cvdlearncheck[] = [];\n CvdlearncheckList: Cvdlearncheck[] = [];\n\n performFilter(filterBy: string): Cvdlearncheck[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdlearncheckList.filter((data: Cvdlearncheck) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdlearncheck() {\n this.objCvdlearncheckService.getAllCvdlearncheck().subscribe({\n next: data => {\n this.CvdlearncheckList = data;\n this.CvdlearncheckList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.CvdlearncheckList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\nthis.CvdlearncheckList.forEach(r=>r.CvdquestionName = this.getCvdquestionNameFromId(r.FCvdquestionId));\n\n this.filteredCvdlearnchecks = this.CvdlearncheckList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdlearnchecks', 0, 'edit']\">\n        Add Learn Check\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdlearncheckList && CvdlearncheckList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Status</th>\n            <th>Total Questions</th>\n            <th>Correct Answer</th>\n            <th>User Name</th>\n            <th>Question</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdlearncheck of filteredCvdlearnchecks\">\n            <td>\n              <a [routerLink]=\"['/Cvdlearnchecks', itrCvdlearncheck.id]\">\n                {{ itrCvdlearncheck.Name }}\n              </a>\n            </td>\n            <td>itrCvdlearncheck.Status</td>\n            <td>itrCvdlearncheck.Totalques</td>\n            <td>itrCvdlearncheck.CorrectAns</td>\n            <td>{{ itrCvdlearncheck.CvduserName }}</td>\n            <td>{{ itrCvdlearncheck.CvdquestionName }}</td>\n            <td>{{ itrCvdlearncheck.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdlearnchecks', itrCvdlearncheck.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\n\n@Component({\n  selector: 'app-cvdlevel-detail',\n  templateUrl: './cvdlevel-detail.component.html',\n  styleUrls: ['./cvdlevel-detail.component.css']\n})\nexport class CvdlevelDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Level Detail';\n errorMessage = '';\n objCvdlevel: Cvdlevel | undefined;\n\nconstructor( private objCvdtrainingtypeService: CvdtrainingtypeService,private route: ActivatedRoute,\n private router: Router,\n private objCvdlevelService: CvdlevelService) { }\n\n\n getCvdlevel(id: number) {\n this.objCvdlevelService.getCvdlevel(id).subscribe({\n \n  next: (data: Cvdlevel) => {\n    this.objCvdlevel = data;\n    this.getCvdtrainingtype(this.objCvdlevel.FCvdtrainingtypeId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n \n \n   getCvdtrainingtype(id: number): void {\n     this.objCvdtrainingtypeService.getCvdtrainingtype(id)\n       .subscribe({\n         next: (data) => this.objCvdlevel.CvdtrainingtypeName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdlevels']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdlevel(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdlevel\">\n    {{pageTitle + \": \" + objCvdlevel.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdlevel\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdlevel.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Training Type</div><div class=\"col-md-6\">{{ objCvdlevel.CvdtrainingtypeName }}</div></div>\n        \n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdlevels', objCvdlevel.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\n\n@Component({\n selector: 'app-cvdlevel-edit', \n templateUrl: './cvdlevel-edit.component.html',\n styleUrls: ['./cvdlevel-edit.component.css']\n})\nexport class CvdlevelEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdlevelForm: FormGroup;\n objCvdlevel: Cvdlevel;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdlevelForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdlevelForm);\n });\n }\n\n constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private route: ActivatedRoute, private router: Router, private objCvdlevelService: CvdlevelService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n    FCvdtrainingtypeId: {\n    min: 'This field is required'\n    },\n   \n   \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdtrainingtype(); \n  }\n// ngoninit \n \n\nCvdtrainingtypeList: Cvdtrainingtype[];\ngetAllCvdtrainingtype() {\n  this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n   next: data => {\n      this.CvdtrainingtypeList = data;\n      if(this.CvdlevelForm.controls.FCvdtrainingtypeId.value===undefined)\n         this.CvdlevelForm.controls.FCvdtrainingtypeId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdlevel(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdlevelForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdtrainingtypeId: [0, Validators.min(1)],\n   \n   \n   \n \n\n});\n}\n\n displayCvdlevel(objCvdlevel: Cvdlevel): void {\n if (this.CvdlevelForm) {\n this.CvdlevelForm.reset();\n }\n this.objCvdlevel = objCvdlevel;\n\n if (this.objCvdlevel.id === 0) {\n this.pageTitle = 'Add Level';\n } else {\n this.pageTitle = `Edit Level: ${this.objCvdlevel.Name  }`;\n }\n\n this.CvdlevelForm.patchValue({\n  Name: this.objCvdlevel.Name,\n  FCvdtrainingtypeId: this.objCvdlevel.FCvdtrainingtypeId\n  \n\n\n });\n }\n\n saveCvdlevel(): void {\n if (this.CvdlevelForm.valid) {\n if (this.CvdlevelForm.dirty) {\n const p = { ...this.objCvdlevel, ...this.CvdlevelForm.value };\n\n if (p.id === 0) {\n this.createCvdlevel(p);\n } else {\n this.updateCvdlevel(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdlevel.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdlevel(this.objCvdlevel.id)\n }\n }\n }\n\n PerformOperation(data: Cvdlevel): void { \n this.displayCvdlevel(data);\n }\n getCvdlevel(id: number): void {\n this.objCvdlevelService.getCvdlevel(id)\n .subscribe({\n next: (data: Cvdlevel) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdlevel(p: Cvdlevel): void\n {\n this.objCvdlevelService.createCvdlevel(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdlevel(p: Cvdlevel): void\n {\n this.objCvdlevelService.updateCvdlevel(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdlevel(id: number): void {\n this.objCvdlevelService.deleteCvdlevel(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdlevelForm.reset();\n this.router.navigate(['/Cvdlevels']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdlevel()\"\n          [formGroup]=\"CvdlevelForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdtrainingtypeId\" >Select Training Type</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdtrainingtypeId\" formControlName=\"FCvdtrainingtypeId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdtrainingtypeId}\">\n      <option [value]='0' selected>Select Training Type...</option>\"\n      <option *ngFor=\"let lstCvdtrainingtype of CvdtrainingtypeList\"\n      [value]=\"lstCvdtrainingtype.id\">{{lstCvdtrainingtype.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdtrainingtypeId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdlevelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdlevelForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdlevels']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\n\n@Component({\n selector: 'app-cvdlevel-list',\n templateUrl: './cvdlevel-list.component.html',\n styleUrls: ['./cvdlevel-list.component.css']\n})\nexport class CvdlevelListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private objCvdlevelService: CvdlevelService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdtrainingtype();\n}\n  \n  CvdtrainingtypeList: Cvdtrainingtype[];\n  getAllCvdtrainingtype() {\n    this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n      next: data => {\n        this.CvdtrainingtypeList = data;\n        this.getAllCvdlevel();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdtrainingtypeNameFromId(Id: Number): string {\n    return this.CvdtrainingtypeList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Level List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdlevels = this.listFilter ? this.performFilter(this.listFilter) : this.CvdlevelList;\n }\n\n filteredCvdlevels: Cvdlevel[] = [];\n CvdlevelList: Cvdlevel[] = [];\n\n performFilter(filterBy: string): Cvdlevel[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdlevelList.filter((data: Cvdlevel) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdlevel() {\n this.objCvdlevelService.getAllCvdlevel().subscribe({\n next: data => {\n this.CvdlevelList = data;\n this.CvdlevelList.forEach(r=>r.CvdtrainingtypeName = this.getCvdtrainingtypeNameFromId(r.FCvdtrainingtypeId));\n this.filteredCvdlevels = this.CvdlevelList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdlevels', 0, 'edit']\">\n        Add Level\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdlevelList && CvdlevelList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Training Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdlevel of filteredCvdlevels\">\n            <td>\n              <a [routerLink]=\"['/Cvdlevels', itrCvdlevel.id]\">\n                {{ itrCvdlevel.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdlevel.CvdtrainingtypeName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdlevels', itrCvdlevel.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\n\n@Component({\n  selector: 'app-cvdoption-detail',\n  templateUrl: './cvdoption-detail.component.html',\n  styleUrls: ['./cvdoption-detail.component.css']\n})\nexport class CvdoptionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Option Detail';\n errorMessage = '';\n objCvdoption: Cvdoption | undefined;\n\nconstructor(private objCvdquestionService: CvdquestionService,private route: ActivatedRoute,\n private router: Router,\n private objCvdoptionService: CvdoptionService) { }\n\n\n getCvdoption(id: number) {\n this.objCvdoptionService.getCvdoption(id).subscribe({\n  next: (data: Cvdoption) => {\n    this.objCvdoption = data;\n    this.getCvdquestion(this.objCvdoption.FCvdquestionId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n \n   getCvdquestion(id: number): void {\n     this.objCvdquestionService.getCvdquestion(id)\n       .subscribe({\n         next: (data) => this.objCvdoption.CvdquestionName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdoptions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdoption(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdoption\">\n    {{pageTitle + \": \" + objCvdoption.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdoption\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdoption.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Answer</div><div class=\"col-md-6\">{{ objCvdoption.Answer }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Question</div><div class=\"col-md-6\">{{ objCvdoption.CvdquestionName }}</div></div>\n        \n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdoptions', objCvdoption.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","\nimport { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\n\n@Component({\n selector: 'app-cvdoption-edit', \n templateUrl: './cvdoption-edit.component.html',\n styleUrls: ['./cvdoption-edit.component.css']\n})\n\nexport class CvdoptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdoptionForm: FormGroup;\n objCvdoption: Cvdoption;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdoptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdoptionForm);\n });\n }\n\n constructor(private objCvdquestionService: CvdquestionService, private route: ActivatedRoute, private router: Router, private objCvdoptionService: CvdoptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Answer: {\n required: 'This field is required'\n },\n\n\n FCvdquestionId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdquestion(); \n  }\n  // ngoninit \n   \n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n     next: data => {\n        this.CvdquestionList = data;\n        if(this.CvdoptionForm.controls.FCvdquestionId.value===undefined)\n           this.CvdoptionForm.controls.FCvdquestionId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdoption(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdoptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Answer: ['', Validators.required],\n    FCvdquestionId: [0, Validators.min(1)],\n   \n\n    \n   \n   \n\n});\n}\n\n displayCvdoption(objCvdoption: Cvdoption): void {\n if (this.CvdoptionForm) {\n this.CvdoptionForm.reset();\n }\n this.objCvdoption = objCvdoption;\n\n if (this.objCvdoption.id === 0) {\n this.pageTitle = 'Add Option';\n } else {\n this.pageTitle = `Edit Option: ${this.objCvdoption.Name  }`;\n }\n\n this.CvdoptionForm.patchValue({\n  Name: this.objCvdoption.Name,\n  Answer: this.objCvdoption.Answer,\n  FCvdquestionId: this.objCvdoption.FCvdquestionId\n\n\n });\n }\n\n saveCvdoption(): void {\n if (this.CvdoptionForm.valid) {\n if (this.CvdoptionForm.dirty) {\n const p = { ...this.objCvdoption, ...this.CvdoptionForm.value };\n\n if (p.id === 0) {\n this.createCvdoption(p);\n } else {\n this.updateCvdoption(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdoption.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdoption(this.objCvdoption.id)\n }\n }\n }\n\n PerformOperation(data: Cvdoption): void { \n this.displayCvdoption(data);\n }\n getCvdoption(id: number): void {\n this.objCvdoptionService.getCvdoption(id)\n .subscribe({\n next: (data: Cvdoption) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdoption(p: Cvdoption): void\n {\n this.objCvdoptionService.createCvdoption(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdoption(p: Cvdoption): void\n {\n this.objCvdoptionService.updateCvdoption(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdoption(id: number): void {\n this.objCvdoptionService.deleteCvdoption(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdoptionForm.reset();\n this.router.navigate(['/Cvdoptions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdoption()\"\n          [formGroup]=\"CvdoptionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"AnswerId\">Answer</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"AnswerId\"\n                             type=\"text\"\n                             placeholder=\"Answer (required)\"\n                             formControlName=\"Answer\"\n                             [ngClass]=\"{'is-invalid': displayMessage.Answer}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.Answer}}\n                      </span>\n                    </div>\n                  </div>\n            \n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdquestionId\" >Select Question</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdquestionId\" formControlName=\"FCvdquestionId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdquestionId}\">\n      <option [value]='0' selected>Select Question...</option>\"\n      <option *ngFor=\"let lstCvdquestion of CvdquestionList\"\n      [value]=\"lstCvdquestion.id\">{{lstCvdquestion.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdquestionId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdoptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdoptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdoptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\n\n@Component({\n selector: 'app-cvdoption-list',\n templateUrl: './cvdoption-list.component.html',\n styleUrls: ['./cvdoption-list.component.css']\n})\nexport class CvdoptionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdquestionService: CvdquestionService, private objCvdoptionService: CvdoptionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdquestion();\n}\n\n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n        this.CvdquestionList = data;\n        this.getAllCvdoption();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdquestionNameFromId(Id: Number): string {\n    return this.CvdquestionList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Option List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdoptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdoptionList;\n }\n\n filteredCvdoptions: Cvdoption[] = [];\n CvdoptionList: Cvdoption[] = [];\n\n performFilter(filterBy: string): Cvdoption[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdoptionList.filter((data: Cvdoption) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdoption() {\n this.objCvdoptionService.getAllCvdoption().subscribe({\n next: data => {\n this.CvdoptionList = data;\n this.CvdoptionList.forEach(r=>r.CvdquestionName = this.getCvdquestionNameFromId(r.FCvdquestionId));\n this.filteredCvdoptions = this.CvdoptionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdoptions', 0, 'edit']\">\n        Add Option\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdoptionList && CvdoptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Answer</th>\n            <th>Question Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdoption of filteredCvdoptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdoptions', itrCvdoption.id]\">\n                {{ itrCvdoption.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdoption.Answer }}</td>\n            <td>{{ itrCvdoption.CvdquestionName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdoptions', itrCvdoption.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdpermission-detail',\n  templateUrl: './cvdpermission-detail.component.html',\n  styleUrls: ['./cvdpermission-detail.component.css']\n})\nexport class CvdpermissionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Permission Detail';\n errorMessage = '';\n objCvdpermission: Cvdpermission | undefined;\n\nconstructor(private objCvduserService: CvduserService,private objCvdroleService: CvdroleService,private route: ActivatedRoute,\n private router: Router,\n private objCvdpermissionService: CvdpermissionService) { }\n\n\n getCvdpermission(id: number) {\n this.objCvdpermissionService.getCvdpermission(id).subscribe({\n  next: (data: Cvdpermission) => {\n    this.objCvdpermission = data;\n    this.getCvdrole(this.objCvdpermission.FCvdroleId);\n    this.getCvduser(this.objCvdpermission.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n   \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdpermission.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n        \n \n   getCvdrole(id: number): void {\n     this.objCvdroleService.getCvdrole(id)\n       .subscribe({\n         next: (data) => this.objCvdpermission.CvdroleName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdpermissions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdpermission(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdpermission\">\n    {{pageTitle + \": \" + objCvdpermission.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdpermission\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdpermission.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Role Name</div><div class=\"col-md-6\">{{ objCvdpermission.CvdroleName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdpermission.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdpermissions', objCvdpermission.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdpermission-edit', \n templateUrl: './cvdpermission-edit.component.html',\n styleUrls: ['./cvdpermission-edit.component.css']\n})\nexport class CvdpermissionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdpermissionForm: FormGroup;\n objCvdpermission: Cvdpermission;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdpermissionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdpermissionForm);\n });\n }\n\n constructor(private objCvduserService: CvduserService, private objCvdroleService: CvdroleService, private route: ActivatedRoute, private router: Router, private objCvdpermissionService: CvdpermissionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvdroleId: {\n min: 'This field is required'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n\n\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdrole(); \n    this.getAllCvduser(); \n  }\n\n  // ngoninit \n   // ngoninit \n    \n   \n   CvduserList: Cvduser[];\n   getAllCvduser() {\n     this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n         this.CvduserList = data;\n         if(this.CvdpermissionForm.controls.FCvduserId.value===undefined)\n            this.CvdpermissionForm.controls.FCvduserId.setValue(0);\n       },\n        error: err => this.errorMessage = err\n     });\n   }  \n  \n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n     next: data => {\n        this.CvdroleList = data;\n        if(this.CvdpermissionForm.controls.FCvdroleId.value===undefined)\n           this.CvdpermissionForm.controls.FCvdroleId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdpermission(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdpermissionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdroleId: [0, Validators.min(1)],\n\n    FCvduserId: [0, Validators.min(1)],\n\n\n   \n\n});\n}\n\n displayCvdpermission(objCvdpermission: Cvdpermission): void {\n if (this.CvdpermissionForm) {\n this.CvdpermissionForm.reset();\n }\n this.objCvdpermission = objCvdpermission;\n\n if (this.objCvdpermission.id === 0) {\n this.pageTitle = 'Add Permission';\n } else {\n this.pageTitle = `Edit Permission: ${this.objCvdpermission.Name  }`;\n }\n\n this.CvdpermissionForm.patchValue({\n  Name: this.objCvdpermission.Name,\n  \nFCvdroleId: this.objCvdpermission.FCvdroleId,\n\nFCvduserId: this.objCvdpermission.FCvduserId\n\n\n });\n }\n\n saveCvdpermission(): void {\n if (this.CvdpermissionForm.valid) {\n if (this.CvdpermissionForm.dirty) {\n const p = { ...this.objCvdpermission, ...this.CvdpermissionForm.value };\n\n if (p.id === 0) {\n this.createCvdpermission(p);\n } else {\n this.updateCvdpermission(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdpermission.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdpermission(this.objCvdpermission.id)\n }\n }\n }\n\n PerformOperation(data: Cvdpermission): void { \n this.displayCvdpermission(data);\n }\n getCvdpermission(id: number): void {\n this.objCvdpermissionService.getCvdpermission(id)\n .subscribe({\n next: (data: Cvdpermission) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdpermission(p: Cvdpermission): void\n {\n this.objCvdpermissionService.createCvdpermission(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdpermission(p: Cvdpermission): void\n {\n this.objCvdpermissionService.updateCvdpermission(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdpermission(id: number): void {\n this.objCvdpermissionService.deleteCvdpermission(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdpermissionForm.reset();\n this.router.navigate(['/Cvdpermissions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdpermission()\"\n          [formGroup]=\"CvdpermissionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdroleId\" >Select Role</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdroleId\" formControlName=\"FCvdroleId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdroleId}\">\n      <option [value]='0' selected>Select Role...</option>\"\n      <option *ngFor=\"let lstCvdrole of CvdroleList\"\n      [value]=\"lstCvdrole.id\">{{lstCvdrole.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdroleId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>\n      \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdpermissionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdpermissionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdpermissions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdpermission-list',\n templateUrl: './cvdpermission-list.component.html',\n styleUrls: ['./cvdpermission-list.component.css']\n})\nexport class CvdpermissionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdroleService: CvdroleService, \n      private objCvdpermissionService: CvdpermissionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdrole();\n}\n//model\n\n\n//ctor\n\n\n//getallCvdpermission\n\n\n//oninit\n\n\n//html \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdpermission();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n  \n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n      next: data => {\n        this.CvdroleList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdroleNameFromId(Id: Number): string {\n    return this.CvdroleList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Permission List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdpermissions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdpermissionList;\n }\n\n filteredCvdpermissions: Cvdpermission[] = [];\n CvdpermissionList: Cvdpermission[] = [];\n\n performFilter(filterBy: string): Cvdpermission[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdpermissionList.filter((data: Cvdpermission) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdpermission() {\n this.objCvdpermissionService.getAllCvdpermission().subscribe({\n next: data => {\n this.CvdpermissionList = data;\n this.CvdpermissionList.forEach(r=>r.CvdroleName = this.getCvdroleNameFromId(r.FCvdroleId));\n this.CvdpermissionList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.filteredCvdpermissions = this.CvdpermissionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdpermissions', 0, 'edit']\">\n        Add Permission\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdpermissionList && CvdpermissionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Role Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdpermission of filteredCvdpermissions\">\n            <td>\n              <a [routerLink]=\"['/Cvdpermissions', itrCvdpermission.id]\">\n                {{ itrCvdpermission.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdpermission.CvdroleName }}</td>\n            <td>{{ itrCvdpermission.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdpermissions', itrCvdpermission.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdquestion-detail',\n  templateUrl: './cvdquestion-detail.component.html',\n  styleUrls: ['./cvdquestion-detail.component.css']\n})\nexport class CvdquestionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Question Detail';\n errorMessage = '';\n objCvdquestion: Cvdquestion | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdquestionService: CvdquestionService) { }\n\n\n getCvdquestion(id: number) {\n this.objCvdquestionService.getCvdquestion(id).subscribe({\n  next: (data: Cvdquestion) => {\n    this.objCvdquestion = data;\n    this.getCvdcourse(this.objCvdquestion.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n         \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvdquestion.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n onBack(): void {\n this.router.navigate(['/Cvdquestions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdquestion(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdquestion\">\n    {{pageTitle + \": \" + objCvdquestion.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdquestion\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdquestion.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdquestion.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdquestions', objCvdquestion.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdquestion-edit', \n templateUrl: './cvdquestion-edit.component.html',\n styleUrls: ['./cvdquestion-edit.component.css']\n})\nexport class CvdquestionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdquestionForm: FormGroup;\n objCvdquestion: Cvdquestion;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdquestionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdquestionForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdquestionService: CvdquestionService, private fb: FormBuilder) {\n this.validationMessages = {\n\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n  }\n  // ngoninit \n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdquestionForm.controls.FCvdcourseId.value===undefined)\n           this.CvdquestionForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdquestion(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdquestionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n\n   \n   \n\n});\n}\n\n displayCvdquestion(objCvdquestion: Cvdquestion): void {\n if (this.CvdquestionForm) {\n this.CvdquestionForm.reset();\n }\n this.objCvdquestion = objCvdquestion;\n\n if (this.objCvdquestion.id === 0) {\n this.pageTitle = 'Add Question';\n } else {\n this.pageTitle = `Edit Question: ${this.objCvdquestion.Name  }`;\n }\n\n this.CvdquestionForm.patchValue({\n  Name: this.objCvdquestion.Name,\n  \n  FCvdcourseId: this.objCvdquestion.FCvdcourseId\n\n\n });\n }\n\n saveCvdquestion(): void {\n if (this.CvdquestionForm.valid) {\n if (this.CvdquestionForm.dirty) {\n const p = { ...this.objCvdquestion, ...this.CvdquestionForm.value };\n\n if (p.id === 0) {\n this.createCvdquestion(p);\n } else {\n this.updateCvdquestion(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdquestion.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdquestion(this.objCvdquestion.id)\n }\n }\n }\n\n PerformOperation(data: Cvdquestion): void { \n this.displayCvdquestion(data);\n }\n getCvdquestion(id: number): void {\n this.objCvdquestionService.getCvdquestion(id)\n .subscribe({\n next: (data: Cvdquestion) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdquestion(p: Cvdquestion): void\n {\n this.objCvdquestionService.createCvdquestion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdquestion(p: Cvdquestion): void\n {\n this.objCvdquestionService.updateCvdquestion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdquestion(id: number): void {\n this.objCvdquestionService.deleteCvdquestion(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdquestionForm.reset();\n this.router.navigate(['/Cvdquestions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdquestion()\"\n          [formGroup]=\"CvdquestionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdquestionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdquestionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdquestions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdquestion-list',\n templateUrl: './cvdquestion-list.component.html',\n styleUrls: ['./cvdquestion-list.component.css']\n})\nexport class CvdquestionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdcourse();\n}\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdquestion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Question List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdquestions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdquestionList;\n }\n\n filteredCvdquestions: Cvdquestion[] = [];\n CvdquestionList: Cvdquestion[] = [];\n\n performFilter(filterBy: string): Cvdquestion[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdquestionList.filter((data: Cvdquestion) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdquestion() {\n this.objCvdquestionService.getAllCvdquestion().subscribe({\n next: data => {\n this.CvdquestionList = data;\n this.CvdquestionList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n this.filteredCvdquestions = this.CvdquestionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdquestions', 0, 'edit']\">\n        Add Question\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdquestionList && CvdquestionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdquestion of filteredCvdquestions\">\n            <td>\n              <a [routerLink]=\"['/Cvdquestions', itrCvdquestion.id]\">\n                {{ itrCvdquestion.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdquestion.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdquestions', itrCvdquestion.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdrole-detail',\n  templateUrl: './cvdrole-detail.component.html',\n  styleUrls: ['./cvdrole-detail.component.css']\n})\nexport class CvdroleDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Role Detail';\n errorMessage = '';\n objCvdrole: Cvdrole | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdroleService: CvdroleService) { }\n\n\n getCvdrole(id: number) {\n this.objCvdroleService.getCvdrole(id).subscribe({\n next: (data: Cvdrole) => this.objCvdrole = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdroles']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdrole(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdrole\">\n    {{pageTitle + \": \" + objCvdrole.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdrole\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdrole.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdroles', objCvdrole.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdrole-edit', \n templateUrl: './cvdrole-edit.component.html',\n styleUrls: ['./cvdrole-edit.component.css']\n})\nexport class CvdroleEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdroleForm: FormGroup;\n objCvdrole: Cvdrole;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdroleForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdroleForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdroleService: CvdroleService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdrole(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdroleForm = this.fb.group({\n    Name: ['', [Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50)]],\n       \n       \n\n});\n}\n\n displayCvdrole(objCvdrole: Cvdrole): void {\n if (this.CvdroleForm) {\n this.CvdroleForm.reset();\n }\n this.objCvdrole = objCvdrole;\n\n if (this.objCvdrole.id === 0) {\n this.pageTitle = 'Add Role';\n } else {\n this.pageTitle = `Edit Role: ${this.objCvdrole.Name  }`;\n }\n\n this.CvdroleForm.patchValue({\n    Name: this.objCvdrole.Name\n });\n }\n\n saveCvdrole(): void {\n if (this.CvdroleForm.valid) {\n if (this.CvdroleForm.dirty) {\n const p = { ...this.objCvdrole, ...this.CvdroleForm.value };\n\n if (p.id === 0) {\n this.createCvdrole(p);\n } else {\n this.updateCvdrole(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdrole.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdrole(this.objCvdrole.id)\n }\n }\n }\n\n PerformOperation(data: Cvdrole): void { \n this.displayCvdrole(data);\n }\n getCvdrole(id: number): void {\n this.objCvdroleService.getCvdrole(id)\n .subscribe({\n next: (data: Cvdrole) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdrole(p: Cvdrole): void\n {\n this.objCvdroleService.createCvdrole(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdrole(p: Cvdrole): void\n {\n this.objCvdroleService.updateCvdrole(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdrole(id: number): void {\n this.objCvdroleService.deleteCvdrole(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdroleForm.reset();\n this.router.navigate(['/Cvdroles']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdrole()\"\n          [formGroup]=\"CvdroleForm\">\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"NameId\"\n                 type=\"text\"\n                 placeholder=\"Name (required)\"\n                 formControlName=\"Name\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n             \n          \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdroleForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdroleForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdroles']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n\n@Component({\n selector: 'app-cvdrole-list',\n templateUrl: './cvdrole-list.component.html',\n styleUrls: ['./cvdrole-list.component.css']\n})\nexport class CvdroleListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdroleService: CvdroleService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdrole(); \n}\nerrorMessage: any;\npageTitle: string = \"Role List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdroles = this.listFilter ? this.performFilter(this.listFilter) : this.CvdroleList;\n }\n\n filteredCvdroles: Cvdrole[] = [];\n CvdroleList: Cvdrole[] = [];\n\n performFilter(filterBy: string): Cvdrole[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdroleList.filter((data: Cvdrole) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdrole() {\n this.objCvdroleService.getAllCvdrole().subscribe({\n next: data => {\n this.CvdroleList = data;\n this.filteredCvdroles = this.CvdroleList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n  <div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdroles', 0, 'edit']\">\n        Add Role\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdroleList && CvdroleList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdrole of filteredCvdroles\">\n            <td>\n              <a [routerLink]=\"['/Cvdroles', itrCvdrole.id]\">\n                {{ itrCvdrole.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdroles', itrCvdrole.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdscreen-detail',\n  templateUrl: './cvdscreen-detail.component.html',\n  styleUrls: ['./cvdscreen-detail.component.css']\n})\nexport class CvdscreenDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Screen Detail';\n errorMessage = '';\n objCvdscreen: Cvdscreen | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdscreenService: CvdscreenService) { }\n\n\n getCvdscreen(id: number) {\n this.objCvdscreenService.getCvdscreen(id).subscribe({\n next: (data: Cvdscreen) => this.objCvdscreen = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdscreens']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdscreen(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdscreen\">\n    {{pageTitle + \": \" + objCvdscreen.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdscreen\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdscreen.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdscreens', objCvdscreen.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdscreen-edit', \n templateUrl: './cvdscreen-edit.component.html',\n styleUrls: ['./cvdscreen-edit.component.css']\n})\nexport class CvdscreenEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdscreenForm: FormGroup;\n objCvdscreen: Cvdscreen;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdscreenForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdscreenForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdscreenService: CvdscreenService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdscreen(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdscreenForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n});\n}\n\n displayCvdscreen(objCvdscreen: Cvdscreen): void {\n if (this.CvdscreenForm) {\n this.CvdscreenForm.reset();\n }\n this.objCvdscreen = objCvdscreen;\n\n if (this.objCvdscreen.id === 0) {\n this.pageTitle = 'Add Screen';\n } else {\n this.pageTitle = `Edit Screen: ${this.objCvdscreen.Name  }`;\n }\n\n this.CvdscreenForm.patchValue({\n  Name: this.objCvdscreen.Name\n });\n }\n\n saveCvdscreen(): void {\n if (this.CvdscreenForm.valid) {\n if (this.CvdscreenForm.dirty) {\n const p = { ...this.objCvdscreen, ...this.CvdscreenForm.value };\n\n if (p.id === 0) {\n this.createCvdscreen(p);\n } else {\n this.updateCvdscreen(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdscreen.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdscreen(this.objCvdscreen.id)\n }\n }\n }\n\n PerformOperation(data: Cvdscreen): void { \n this.displayCvdscreen(data);\n }\n getCvdscreen(id: number): void {\n this.objCvdscreenService.getCvdscreen(id)\n .subscribe({\n next: (data: Cvdscreen) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdscreen(p: Cvdscreen): void\n {\n this.objCvdscreenService.createCvdscreen(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdscreen(p: Cvdscreen): void\n {\n this.objCvdscreenService.updateCvdscreen(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdscreen(id: number): void {\n this.objCvdscreenService.deleteCvdscreen(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdscreenForm.reset();\n this.router.navigate(['/Cvdscreens']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdscreen()\"\n          [formGroup]=\"CvdscreenForm\">\n          <div class=\"form-group row mb-2\">\n            <label class=\"col-md-2 col-form-label\"\n                   for=\"NameId\">Name</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n                     id=\"NameId\"\n                     type=\"text\"\n                     placeholder=\"Name (required)\"\n                     formControlName=\"Name\"\n                     [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n              <span class=\"invalid-feedback\">\n                {{displayMessage.Name}}\n              </span>\n            </div>\n          </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdscreenForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdscreenForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdscreens']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdscreen-list',\n templateUrl: './cvdscreen-list.component.html',\n styleUrls: ['./cvdscreen-list.component.css']\n})\nexport class CvdscreenListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdscreenService: CvdscreenService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdscreen(); \n}\nerrorMessage: any;\npageTitle: string = \"Screen List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdscreens = this.listFilter ? this.performFilter(this.listFilter) : this.CvdscreenList;\n }\n\n filteredCvdscreens: Cvdscreen[] = [];\n CvdscreenList: Cvdscreen[] = [];\n\n performFilter(filterBy: string): Cvdscreen[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdscreenList.filter((data: Cvdscreen) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdscreen() {\n this.objCvdscreenService.getAllCvdscreen().subscribe({\n next: data => {\n this.CvdscreenList = data;\n this.filteredCvdscreens = this.CvdscreenList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdscreens', 0, 'edit']\">\n        Add Screen\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdscreenList && CvdscreenList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdscreen of filteredCvdscreens\">\n            <td>\n              <a [routerLink]=\"['/Cvdscreens', itrCvdscreen.id]\">\n                {{ itrCvdscreen.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdscreens', itrCvdscreen.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdstatu-detail',\n  templateUrl: './cvdstatu-detail.component.html',\n  styleUrls: ['./cvdstatu-detail.component.css']\n})\nexport class CvdstatuDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Status Detail';\n errorMessage = '';\n objCvdstatu: Cvdstatu | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdstatuService: CvdstatuService) { }\n\n\n getCvdstatu(id: number) {\n this.objCvdstatuService.getCvdstatu(id).subscribe({\n next: (data: Cvdstatu) => this.objCvdstatu = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdstatus']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdstatu(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdstatu\">\n    {{pageTitle + \": \" + objCvdstatu.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdstatu\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdstatu.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdstatus', objCvdstatu.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdstatu-edit', \n templateUrl: './cvdstatu-edit.component.html',\n styleUrls: ['./cvdstatu-edit.component.css']\n})\nexport class CvdstatuEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdstatuForm: FormGroup;\n objCvdstatu: Cvdstatu;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdstatuForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdstatuForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdstatuService: CvdstatuService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdstatu(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdstatuForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n   \n\n});\n}\n\n displayCvdstatu(objCvdstatu: Cvdstatu): void {\n if (this.CvdstatuForm) {\n this.CvdstatuForm.reset();\n }\n this.objCvdstatu = objCvdstatu;\n\n if (this.objCvdstatu.id === 0) {\n this.pageTitle = 'Add Statu';\n } else {\n this.pageTitle = `Edit Statu: ${this.objCvdstatu.Name  }`;\n }\n\n this.CvdstatuForm.patchValue({\n  Name: this.objCvdstatu.Name\n\n\n });\n }\n\n saveCvdstatu(): void {\n if (this.CvdstatuForm.valid) {\n if (this.CvdstatuForm.dirty) {\n const p = { ...this.objCvdstatu, ...this.CvdstatuForm.value };\n\n if (p.id === 0) {\n this.createCvdstatu(p);\n } else {\n this.updateCvdstatu(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdstatu.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdstatu(this.objCvdstatu.id)\n }\n }\n }\n\n PerformOperation(data: Cvdstatu): void { \n this.displayCvdstatu(data);\n }\n getCvdstatu(id: number): void {\n this.objCvdstatuService.getCvdstatu(id)\n .subscribe({\n next: (data: Cvdstatu) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdstatu(p: Cvdstatu): void\n {\n this.objCvdstatuService.createCvdstatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdstatu(p: Cvdstatu): void\n {\n this.objCvdstatuService.updateCvdstatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdstatu(id: number): void {\n this.objCvdstatuService.deleteCvdstatu(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdstatuForm.reset();\n this.router.navigate(['/Cvdstatus']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdstatu()\"\n          [formGroup]=\"CvdstatuForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdstatuForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdstatuForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdstatus']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdstatu-list',\n templateUrl: './cvdstatu-list.component.html',\n styleUrls: ['./cvdstatu-list.component.css']\n})\nexport class CvdstatuListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdstatuService: CvdstatuService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdstatu(); \n}\nerrorMessage: any;\npageTitle: string = \"Status List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdstatus = this.listFilter ? this.performFilter(this.listFilter) : this.CvdstatuList;\n }\n\n filteredCvdstatus: Cvdstatu[] = [];\n CvdstatuList: Cvdstatu[] = [];\n\n performFilter(filterBy: string): Cvdstatu[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdstatuList.filter((data: Cvdstatu) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdstatu() {\n this.objCvdstatuService.getAllCvdstatu().subscribe({\n next: data => {\n this.CvdstatuList = data;\n this.filteredCvdstatus = this.CvdstatuList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdstatus', 0, 'edit']\">\n        Add Status\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdstatuList && CvdstatuList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdstatu of filteredCvdstatus\">\n            <td>\n              <a [routerLink]=\"['/Cvdstatus', itrCvdstatu.id]\">\n                {{ itrCvdstatu.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdstatus', itrCvdstatu.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdsubscription-detail',\n  templateUrl: './cvdsubscription-detail.component.html',\n  styleUrls: ['./cvdsubscription-detail.component.css']\n})\nexport class CvdsubscriptionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Subscription Detail';\n errorMessage = '';\n objCvdsubscription: Cvdsubscription | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdsubscriptionService: CvdsubscriptionService) { }\n\n\n getCvdsubscription(id: number) {\n this.objCvdsubscriptionService.getCvdsubscription(id).subscribe({\n next: (data: Cvdsubscription) => this.objCvdsubscription = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdsubscriptions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdsubscription(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdsubscription\">\n    {{pageTitle + \": \" + objCvdsubscription.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdsubscription\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Name }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Description</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Description }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Price</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Price }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdsubscriptions', objCvdsubscription.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdsubscription-edit', \n templateUrl: './cvdsubscription-edit.component.html',\n styleUrls: ['./cvdsubscription-edit.component.css']\n})\nexport class CvdsubscriptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdsubscriptionForm: FormGroup;\n objCvdsubscription: Cvdsubscription;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdsubscriptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdsubscriptionForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdsubscriptionService: CvdsubscriptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Description: {\n required: 'This field is required'\n },\n Price: {\n required: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdsubscription(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdsubscriptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Description: ['', Validators.required],\n    Price: ['', Validators.required],\n\n    \n\n   \n\n});\n}\n\n displayCvdsubscription(objCvdsubscription: Cvdsubscription): void {\n if (this.CvdsubscriptionForm) {\n this.CvdsubscriptionForm.reset();\n }\n this.objCvdsubscription = objCvdsubscription;\n\n if (this.objCvdsubscription.id === 0) {\n this.pageTitle = 'Add Subscription';\n } else {\n this.pageTitle = `Edit Subscription: ${this.objCvdsubscription.Name  }`;\n }\n\n this.CvdsubscriptionForm.patchValue({\n  Name: this.objCvdsubscription.Name,\n  Description: this.objCvdsubscription.Description,\n  Price: this.objCvdsubscription.Price\n\n\n\n });\n }\n\n saveCvdsubscription(): void {\n if (this.CvdsubscriptionForm.valid) {\n if (this.CvdsubscriptionForm.dirty) {\n const p = { ...this.objCvdsubscription, ...this.CvdsubscriptionForm.value };\n\n if (p.id === 0) {\n this.createCvdsubscription(p);\n } else {\n this.updateCvdsubscription(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdsubscription.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdsubscription(this.objCvdsubscription.id)\n }\n }\n }\n\n PerformOperation(data: Cvdsubscription): void { \n this.displayCvdsubscription(data);\n }\n getCvdsubscription(id: number): void {\n this.objCvdsubscriptionService.getCvdsubscription(id)\n .subscribe({\n next: (data: Cvdsubscription) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdsubscription(p: Cvdsubscription): void\n {\n this.objCvdsubscriptionService.createCvdsubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdsubscription(p: Cvdsubscription): void\n {\n this.objCvdsubscriptionService.updateCvdsubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdsubscription(id: number): void {\n this.objCvdsubscriptionService.deleteCvdsubscription(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdsubscriptionForm.reset();\n this.router.navigate(['/Cvdsubscriptions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdsubscription()\"\n          [formGroup]=\"CvdsubscriptionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"DescriptionId\">Description</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"DescriptionId\"\n                 type=\"text\"\n                 placeholder=\"Description (required)\"\n                 formControlName=\"Description\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Description}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"PriceId\">Price</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"PriceId\"\n                 type=\"text\"\n                 placeholder=\"Price (required)\"\n                 formControlName=\"Price\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Price}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Price}}\n          </span>\n        </div>\n      </div>\n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdsubscriptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdsubscriptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdsubscriptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdsubscription-list',\n templateUrl: './cvdsubscription-list.component.html',\n styleUrls: ['./cvdsubscription-list.component.css']\n})\nexport class CvdsubscriptionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdsubscriptionService: CvdsubscriptionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdsubscription(); \n}\nerrorMessage: any;\npageTitle: string = \"Subscription List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdsubscriptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdsubscriptionList;\n }\n\n filteredCvdsubscriptions: Cvdsubscription[] = [];\n CvdsubscriptionList: Cvdsubscription[] = [];\n\n performFilter(filterBy: string): Cvdsubscription[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdsubscriptionList.filter((data: Cvdsubscription) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdsubscription() {\n this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n next: data => {\n this.CvdsubscriptionList = data;\n this.filteredCvdsubscriptions = this.CvdsubscriptionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdsubscriptions', 0, 'edit']\">\n        Add Subscription\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdsubscriptionList && CvdsubscriptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdsubscription of filteredCvdsubscriptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdsubscriptions', itrCvdsubscription.id]\">\n                {{ itrCvdsubscription.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdsubscription.Description }}</td>\n            <td>{{ itrCvdsubscription.Price }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdsubscriptions', itrCvdsubscription.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdtableofcontent-detail',\n  templateUrl: './cvdtableofcontent-detail.component.html',\n  styleUrls: ['./cvdtableofcontent-detail.component.css']\n})\nexport class CvdtableofcontentDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Table of Content Detail';\n errorMessage = '';\n objCvdtableofcontent: Cvdtableofcontent | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdtableofcontentService: CvdtableofcontentService) { }\n\n\n getCvdtableofcontent(id: number) {\n this.objCvdtableofcontentService.getCvdtableofcontent(id).subscribe({\n next: (data: Cvdtableofcontent) => {\n  this.objCvdtableofcontent = data;\n  this.getCvdcourse(this.objCvdtableofcontent.FCvdcourseId);\n},\n error: err => this.errorMessage = err\n });\n }\n \n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdtableofcontent.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n onBack(): void {\n this.router.navigate(['/Cvdtableofcontents']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdtableofcontent(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdtableofcontent\">\n    {{pageTitle + \": \" + objCvdtableofcontent.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdtableofcontent\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdtableofcontent.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Description</div><div class=\"col-md-6\">{{ objCvdtableofcontent.Description }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Duration Hour</div><div class=\"col-md-6\">{{ objCvdtableofcontent.DurationHr }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Duration Minute</div><div class=\"col-md-6\">{{ objCvdtableofcontent.DurationMin }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">File Path</div><div class=\"col-md-6\">{{ objCvdtableofcontent.Filepath }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdtableofcontent.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdtableofcontents', objCvdtableofcontent.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdtableofcontent-edit', \n templateUrl: './cvdtableofcontent-edit.component.html',\n styleUrls: ['./cvdtableofcontent-edit.component.css']\n})\nexport class CvdtableofcontentEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdtableofcontentForm: FormGroup;\n objCvdtableofcontent: Cvdtableofcontent;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdtableofcontentForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdtableofcontentForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdtableofcontentService: CvdtableofcontentService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Description: {\n  required: 'This field is required'\n  },\n  DurationHr: {\n  required: 'This field is required'\n  },\n DurationMin: {\n required: 'This field is required'\n },\n Filepath: {\n required: 'This field is required'\n },\n\n\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n  }\n// ngoninit \n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdtableofcontentForm.controls.FCvdcourseId.value===undefined)\n         this.CvdtableofcontentForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdtableofcontent(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdtableofcontentForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    \n    Description: ['', Validators.required],\n    DurationHr: ['', Validators.required],\n    DurationMin: ['', Validators.required],\n    Filepath: ['', Validators.required],\n    FCvdcourseId: [0, Validators.min(1)],\n       \n\n});\n}\n\n displayCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): void {\n if (this.CvdtableofcontentForm) {\n this.CvdtableofcontentForm.reset();\n }\n this.objCvdtableofcontent = objCvdtableofcontent;\n\n if (this.objCvdtableofcontent.id === 0) {\n this.pageTitle = 'Add Table of Content';\n } else {\n this.pageTitle = `Edit Table of Content: ${this.objCvdtableofcontent.Name  }`;\n }\n\n this.CvdtableofcontentForm.patchValue({\n  Name: this.objCvdtableofcontent.Name\n  ,Description: this.objCvdtableofcontent.Description\n  ,DurationHr: this.objCvdtableofcontent.DurationHr\n  ,DurationMin: this.objCvdtableofcontent.DurationMin\n  ,FCvdcourseId: this.objCvdtableofcontent.FCvdcourseId\n\n\n  ,Filepath: this.objCvdtableofcontent.Filepath\n\n });\n }\n\n saveCvdtableofcontent(): void {\n if (this.CvdtableofcontentForm.valid) {\n if (this.CvdtableofcontentForm.dirty) {\n const p = { ...this.objCvdtableofcontent, ...this.CvdtableofcontentForm.value };\n\n if (p.id === 0) {\n this.createCvdtableofcontent(p);\n } else {\n this.updateCvdtableofcontent(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdtableofcontent.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdtableofcontent(this.objCvdtableofcontent.id)\n }\n }\n }\n\n PerformOperation(data: Cvdtableofcontent): void { \n this.displayCvdtableofcontent(data);\n }\n getCvdtableofcontent(id: number): void {\n this.objCvdtableofcontentService.getCvdtableofcontent(id)\n .subscribe({\n next: (data: Cvdtableofcontent) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdtableofcontent(p: Cvdtableofcontent): void\n {\n this.objCvdtableofcontentService.createCvdtableofcontent(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdtableofcontent(p: Cvdtableofcontent): void\n {\n this.objCvdtableofcontentService.updateCvdtableofcontent(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdtableofcontent(id: number): void {\n this.objCvdtableofcontentService.deleteCvdtableofcontent(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdtableofcontentForm.reset();\n this.router.navigate(['/Cvdtableofcontents']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdtableofcontent()\"\n          [formGroup]=\"CvdtableofcontentForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DescriptionId\">Description</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DescriptionId\"\n                       type=\"text\"\n                       placeholder=\"Description (required)\"\n                       formControlName=\"Description\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Description}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DurationHrId\">Hour</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DurationHrId\"\n                       type=\"text\"\n                       placeholder=\"Duration Hour (required)\"\n                       formControlName=\"DurationHr\"\n                       [ngClass]=\"{'is-invalid': displayMessage.DurationHr}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.DurationHr}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DurationMinId\">Minute</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DurationMinId\"\n                       type=\"text\"\n                       placeholder=\"Duration Minute (required)\"\n                       formControlName=\"DurationMin\"\n                       [ngClass]=\"{'is-invalid': displayMessage.DurationMin}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.DurationMin}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"FilepathId\">File path</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"FilepathId\"\n                 type=\"text\"\n                 placeholder=\"File path (required)\"\n                 formControlName=\"Filepath\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Filepath}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Filepath}}\n          </span>\n        </div>\n      </div>\n\n\n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvdcourseId\" >Select Course</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n            [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n            </span>\n            </div>\n            </div>  \n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdtableofcontentForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdtableofcontentForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdtableofcontents']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdtableofcontent-list',\n   templateUrl: './cvdtableofcontent-list.component.html',\n   styleUrls: ['./cvdtableofcontent-list.component.css']\n})\nexport class CvdtableofcontentListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdtableofcontentService: CvdtableofcontentService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdcourse();\n   }\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdtableofcontent();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\n   errorMessage: any;\n   pageTitle: string = \"Table of Content List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdtableofcontents = this.listFilter ? this.performFilter(this.listFilter) : this.CvdtableofcontentList;\n   }\n\n   filteredCvdtableofcontents: Cvdtableofcontent[] = [];\n   CvdtableofcontentList: Cvdtableofcontent[] = [];\n\n   performFilter(filterBy: string): Cvdtableofcontent[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdtableofcontentList.filter((data: Cvdtableofcontent) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdtableofcontent() {\n      this.objCvdtableofcontentService.getAllCvdtableofcontent().subscribe({\n         next: data => {\n            this.CvdtableofcontentList = data;\n            this.CvdtableofcontentList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.filteredCvdtableofcontents = this.CvdtableofcontentList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdtableofcontents', 0, 'edit']\">\n        Add Table of Content\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdtableofcontentList && CvdtableofcontentList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Video Length</th> \n            <th>File Path</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdtableofcontent of filteredCvdtableofcontents\">\n            <td>\n              <a [routerLink]=\"['/Cvdtableofcontents', itrCvdtableofcontent.id]\">\n                {{ itrCvdtableofcontent.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdtableofcontent.Description }}</td>\n            <td>{{ itrCvdtableofcontent.DurationHr + \" : \" + itrCvdtableofcontent.DurationMin }}</td>\n            <td>{{ itrCvdtableofcontent.Filepath }}</td>\n            <td>{{ itrCvdtableofcontent.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdtableofcontents', itrCvdtableofcontent.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdtrainingtype-detail',\n  templateUrl: './cvdtrainingtype-detail.component.html',\n  styleUrls: ['./cvdtrainingtype-detail.component.css']\n})\nexport class CvdtrainingtypeDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Training Type Detail';\n errorMessage = '';\n objCvdtrainingtype: Cvdtrainingtype | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdtrainingtypeService: CvdtrainingtypeService) { }\n\n\n getCvdtrainingtype(id: number) {\n this.objCvdtrainingtypeService.getCvdtrainingtype(id).subscribe({\n next: (data: Cvdtrainingtype) => this.objCvdtrainingtype = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdtrainingtypes']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdtrainingtype(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdtrainingtype\">\n    {{pageTitle + \": \" + objCvdtrainingtype.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdtrainingtype\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdtrainingtype.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdtrainingtypes', objCvdtrainingtype.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdtrainingtype-edit', \n templateUrl: './cvdtrainingtype-edit.component.html',\n styleUrls: ['./cvdtrainingtype-edit.component.css']\n})\nexport class CvdtrainingtypeEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdtrainingtypeForm: FormGroup;\n objCvdtrainingtype: Cvdtrainingtype;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdtrainingtypeForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdtrainingtypeForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdtrainingtypeService: CvdtrainingtypeService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdtrainingtype(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdtrainingtypeForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n   \n\n});\n}\n\n displayCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): void {\n if (this.CvdtrainingtypeForm) {\n this.CvdtrainingtypeForm.reset();\n }\n this.objCvdtrainingtype = objCvdtrainingtype;\n\n if (this.objCvdtrainingtype.id === 0) {\n this.pageTitle = 'Add Training Type';\n } else {\n this.pageTitle = `Edit Training Type: ${this.objCvdtrainingtype.Name  }`;\n }\n\n this.CvdtrainingtypeForm.patchValue({\n  Name: this.objCvdtrainingtype.Name\n\n\n });\n }\n\n saveCvdtrainingtype(): void {\n if (this.CvdtrainingtypeForm.valid) {\n if (this.CvdtrainingtypeForm.dirty) {\n const p = { ...this.objCvdtrainingtype, ...this.CvdtrainingtypeForm.value };\n\n if (p.id === 0) {\n this.createCvdtrainingtype(p);\n } else {\n this.updateCvdtrainingtype(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdtrainingtype.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdtrainingtype(this.objCvdtrainingtype.id)\n }\n }\n }\n\n PerformOperation(data: Cvdtrainingtype): void { \n this.displayCvdtrainingtype(data);\n }\n getCvdtrainingtype(id: number): void {\n this.objCvdtrainingtypeService.getCvdtrainingtype(id)\n .subscribe({\n next: (data: Cvdtrainingtype) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdtrainingtype(p: Cvdtrainingtype): void\n {\n this.objCvdtrainingtypeService.createCvdtrainingtype(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdtrainingtype(p: Cvdtrainingtype): void\n {\n this.objCvdtrainingtypeService.updateCvdtrainingtype(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdtrainingtype(id: number): void {\n this.objCvdtrainingtypeService.deleteCvdtrainingtype(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdtrainingtypeForm.reset();\n this.router.navigate(['/Cvdtrainingtypes']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdtrainingtype()\"\n          [formGroup]=\"CvdtrainingtypeForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdtrainingtypeForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdtrainingtypeForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdtrainingtypes']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdtrainingtype-list',\n templateUrl: './cvdtrainingtype-list.component.html',\n styleUrls: ['./cvdtrainingtype-list.component.css']\n})\nexport class CvdtrainingtypeListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdtrainingtype(); \n}\nerrorMessage: any;\npageTitle: string = \"Training Type List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdtrainingtypes = this.listFilter ? this.performFilter(this.listFilter) : this.CvdtrainingtypeList;\n }\n\n filteredCvdtrainingtypes: Cvdtrainingtype[] = [];\n CvdtrainingtypeList: Cvdtrainingtype[] = [];\n\n performFilter(filterBy: string): Cvdtrainingtype[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdtrainingtypeList.filter((data: Cvdtrainingtype) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdtrainingtype() {\n this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n next: data => {\n this.CvdtrainingtypeList = data;\n this.filteredCvdtrainingtypes = this.CvdtrainingtypeList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdtrainingtypes', 0, 'edit']\">\n        Add Training Type\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdtrainingtypeList && CvdtrainingtypeList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdtrainingtype of filteredCvdtrainingtypes\">\n            <td>\n              <a [routerLink]=\"['/Cvdtrainingtypes', itrCvdtrainingtype.id]\">\n                {{ itrCvdtrainingtype.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdtrainingtypes', itrCvdtrainingtype.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\n\n@Component({\n  selector: 'app-cvduser-detail',\n  templateUrl: './cvduser-detail.component.html',\n  styleUrls: ['./cvduser-detail.component.css']\n})\nexport class CvduserDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'User Detail';\n errorMessage = '';\n objCvduser: Cvduser | undefined;\n\nconstructor( private objCvdroleService: CvdroleService,private route: ActivatedRoute,\n private router: Router,\n private objCvduserService: CvduserService) { }\n\n\n getCvduser(id: number) {\n this.objCvduserService.getCvduser(id).subscribe({\n  next: (data: Cvduser) => {\n    this.objCvduser = data;\n    this.getCvdrole(this.objCvduser.FCvdroleId);\n  },\n\n error: err => this.errorMessage = err\n });\n }\n\n\n \n        \n   getCvdrole(id: number): void {\n     this.objCvdroleService.getCvdrole(id)\n       .subscribe({\n         next: (data) => this.objCvduser.CvdroleName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n\n onBack(): void {\n this.router.navigate(['/Cvdusers']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvduser(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvduser\">\n    {{pageTitle + \": \" + objCvduser.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvduser\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvduser.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Email Address</div><div class=\"col-md-6\">{{ objCvduser.EmailAddress }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Mobile Number</div><div class=\"col-md-6\">{{ objCvduser.MobileNo }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Password</div><div class=\"col-md-6\">{{ objCvduser.Password }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Role Name</div><div class=\"col-md-6\">{{ objCvduser.CvdroleName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdusers', objCvduser.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\n\n@Component({\n selector: 'app-cvduser-edit', \n templateUrl: './cvduser-edit.component.html',\n styleUrls: ['./cvduser-edit.component.css']\n})\nexport class CvduserEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvduserForm: FormGroup;\n objCvduser: Cvduser;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvduserForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvduserForm);\n });\n }\n\n constructor(private objCvdroleService: CvdroleService, private route: ActivatedRoute, private router: Router, private objCvduserService: CvduserService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n EmailAddress: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n MobileNo: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 12 characters.'\n },\n Password: {\n required: 'This field is required',\n minlength: 'This field requires atleast 6 characters.',\n maxlength: 'cannot exceed more than 20 characters.'\n },\n FCvdroleId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdrole(); \n  }\n\n// ngoninit \n \n\nCvdroleList: Cvdrole[];\ngetAllCvdrole() {\n  this.objCvdroleService.getAllCvdrole().subscribe({\n   next: data => {\n      this.CvdroleList = data;\n      if(this.CvduserForm.controls.FCvdroleId.value===undefined)\n         this.CvduserForm.controls.FCvdroleId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvduser(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvduserForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    EmailAddress: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      MobileNo: ['', [Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(12)]],\n        Password: ['', [Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(20)]],\n          FCvdroleId: [0, Validators.min(1)],\n\n                   \n                \n            \n        \n   \n\n});\n}\n\n displayCvduser(objCvduser: Cvduser): void {\n if (this.CvduserForm) {\n this.CvduserForm.reset();\n }\n this.objCvduser = objCvduser;\n\n if (this.objCvduser.id === 0) {\n this.pageTitle = 'Add User';\n } else {\n this.pageTitle = `Edit User: ${this.objCvduser.Name  }`;\n }\n\n this.CvduserForm.patchValue({\n  Name: this.objCvduser.Name,\n  EmailAddress: this.objCvduser.EmailAddress,\n  MobileNo: this.objCvduser.MobileNo,\n  Password: this.objCvduser.Password,\n  FCvdroleId: this.objCvduser.FCvdroleId\n\n\n\n });\n }\n\n saveCvduser(): void {\n if (this.CvduserForm.valid) {\n if (this.CvduserForm.dirty) {\n const p = { ...this.objCvduser, ...this.CvduserForm.value };\n\n if (p.id === 0) {\n this.createCvduser(p);\n } else {\n this.updateCvduser(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvduser.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvduser(this.objCvduser.id)\n }\n }\n }\n\n PerformOperation(data: Cvduser): void { \n this.displayCvduser(data);\n }\n getCvduser(id: number): void {\n this.objCvduserService.getCvduser(id)\n .subscribe({\n next: (data: Cvduser) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvduser(p: Cvduser): void\n {\n this.objCvduserService.createCvduser(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvduser(p: Cvduser): void\n {\n this.objCvduserService.updateCvduser(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvduser(id: number): void {\n this.objCvduserService.deleteCvduser(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvduserForm.reset();\n this.router.navigate(['/Cvdusers']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvduser()\"\n      [formGroup]=\"CvduserForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"EmailAddressId\">Email</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"EmailAddressId\" type=\"text\" placeholder=\"Email Address (required)\"\n            formControlName=\"EmailAddress\" [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.EmailAddress}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"MobileNoId\">Mobile</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"MobileNoId\" type=\"text\" placeholder=\"Mobile Number (required)\"\n            formControlName=\"MobileNo\" [ngClass]=\"{'is-invalid': displayMessage.MobileNo}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.MobileNo}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"PasswordId\">Password</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"PasswordId\" type=\"text\" placeholder=\"Password (required)\"\n            formControlName=\"Password\" [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Password}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdroleId\">Select Role</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdroleId\" formControlName=\"FCvdroleId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdroleId}\">\n            <option [value]='0' selected>Select Role...</option>\"\n            <option *ngFor=\"let lstCvdrole of CvdroleList\" [value]=\"lstCvdrole.id\">{{lstCvdrole.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdroleId}}\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvduserForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvduserForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdusers']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\n\n@Component({\n   selector: 'app-cvduser-list',\n   templateUrl: './cvduser-list.component.html',\n   styleUrls: ['./cvduser-list.component.css']\n})\nexport class CvduserListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdroleService: CvdroleService, private objCvduserService: CvduserService, private router: Router) { }\n   ngOnInit() {appconstants.gblisUserLoggedin =true;\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdrole();\n   }\n\n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n      next: data => {\n        this.CvdroleList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdroleNameFromId(Id: Number): string {\n    return this.CvdroleList.find(r=>r.id===Id).Name;\n  }\n\n   errorMessage: any;\n   pageTitle: string = \"User List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdusers = this.listFilter ? this.performFilter(this.listFilter) : this.CvduserList;\n   }\n\n   filteredCvdusers: Cvduser[] = [];\n   CvduserList: Cvduser[] = [];\n\n   performFilter(filterBy: string): Cvduser[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvduserList.filter((data: Cvduser) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvduser() {\n      this.objCvduserService.getAllCvduser().subscribe({\n         next: data => {\n            this.CvduserList = data;\n            this.CvduserList.forEach(r=>r.CvdroleName = this.getCvdroleNameFromId(r.FCvdroleId));\n            this.filteredCvdusers = this.CvduserList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdusers', 0, 'edit']\">\n        Add User\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvduserList && CvduserList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email Address</th>\n            <th>Mobile No</th>\n            <th>Password</th>\n            <th>Role Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvduser of filteredCvdusers\">\n            <td>\n              <a [routerLink]=\"['/Cvdusers', itrCvduser.id]\">\n                {{ itrCvduser.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvduser.EmailAddress }}</td>\n            <td>{{ itrCvduser.MobileNo }}</td>\n            <td>{{ itrCvduser.Password }}</td>\n            <td>{{ itrCvduser.CvdroleName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdusers', itrCvduser.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdusersubscription-detail',\n  templateUrl: './cvdusersubscription-detail.component.html',\n  styleUrls: ['./cvdusersubscription-detail.component.css']\n})\nexport class CvdusersubscriptionDetailComponent implements OnDestroy, OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  pageTitle: string = 'User Subscription Detail';\n  errorMessage = '';\n  objCvdusersubscription: Cvdusersubscription | undefined;\n\n  constructor(private objCvduserService: CvduserService,\n    private objCvdsubscriptionService: CvdsubscriptionService,\n    private objCvdcourseService: CvdcourseService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private objCvdusersubscriptionService: CvdusersubscriptionService) { }\n\n\n  getCvdusersubscription(id: number) {\n    this.objCvdusersubscriptionService.getCvdusersubscription(id).subscribe({\n      next: (data: Cvdusersubscription) => {\n        this.objCvdusersubscription = data;\n        this.getCvdcourse(this.objCvdusersubscription.FCvdcourseId);\n        this.getCvdsubscription(this.objCvdusersubscription.FCvdsubscriptionId);\n        this.getCvduser(this.objCvdusersubscription.FCvduserId);\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/Cvdusersubscriptions']);\n  }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.GetQueryStringParams();\n  }\n\n  \n    getCvduser(id: number): void {\n      this.objCvduserService.getCvduser(id)\n        .subscribe({\n          next: (data) => this.objCvdusersubscription.CvduserName = data.Name,\n          error: err => this.errorMessage = err\n        });\n    }\n\n  getCvdsubscription(id: number): void {\n    this.objCvdsubscriptionService.getCvdsubscription(id)\n      .subscribe({\n        next: (data) => this.objCvdusersubscription.CvdsubscriptionName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdusersubscription.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n  private sub: Subscription;\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  GetQueryStringParams() {\n    this.sub = this.route.paramMap.subscribe(\n      params => {\n        const id = +params.get('id');\n        this.getCvdusersubscription(id);\n      }\n    );\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdusersubscription\">\n    {{pageTitle + \": \" + objCvdusersubscription.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdusersubscription\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdusersubscription.Name }}</div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-3\">Course Name</div>\n          <div class=\"col-md-6\">{{ objCvdusersubscription.CvdcourseName }}</div>\n        </div>\n     \n\n      <div class=\"row\">\n        <div class=\"col-md-3\">Subscription</div>\n        <div class=\"col-md-6\">{{ objCvdusersubscription.CvdsubscriptionName }}</div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\">User</div>\n        <div class=\"col-md-6\">{{ objCvdusersubscription.CvduserName }}</div>\n      </div>\n    </div>\n  </div>\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdusersubscriptions', objCvdusersubscription.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\n\n@Component({\n selector: 'app-cvdusersubscription-edit', \n templateUrl: './cvdusersubscription-edit.component.html',\n styleUrls: ['./cvdusersubscription-edit.component.css']\n})\nexport class CvdusersubscriptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdusersubscriptionForm: FormGroup;\n objCvdusersubscription: Cvdusersubscription;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdusersubscriptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdusersubscriptionForm);\n });\n }\n\n constructor(private objCvdsubscriptionService: CvdsubscriptionService, private objCvdcourseService: CvdcourseService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdusersubscriptionService: CvdusersubscriptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n FCvdsubscriptionId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdcourse(); \n    this.getAllCvdsubscription(); \n  }\n\n// ngoninit \n \n\nCvdsubscriptionList: Cvdsubscription[];\ngetAllCvdsubscription() {\n  this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n   next: data => {\n      this.CvdsubscriptionList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvdsubscriptionId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvdsubscriptionId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvdcourseId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n} \n\nCvduserList: Cvduser[];\ngetAllCvduser() {\n  this.objCvduserService.getAllCvduser().subscribe({\n   next: data => {\n      this.CvduserList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvduserId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvduserId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdusersubscription(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdusersubscriptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvduserId: [0, Validators.min(1)],\n    FCvdcourseId: [0, Validators.min(1)],\n    FCvdsubscriptionId: [0, Validators.min(1)],\n\n    \n    \n   \n   \n\n});\n}\n\n displayCvdusersubscription(objCvdusersubscription: Cvdusersubscription): void {\n if (this.CvdusersubscriptionForm) {\n this.CvdusersubscriptionForm.reset();\n }\n this.objCvdusersubscription = objCvdusersubscription;\n\n if (this.objCvdusersubscription.id === 0) {\n this.pageTitle = 'Add User Subscription';\n } else {\n this.pageTitle = `Edit User Subscription: ${this.objCvdusersubscription.Name  }`;\n }\n\n this.CvdusersubscriptionForm.patchValue({\n  Name: this.objCvdusersubscription.Name,\n  FCvduserId: this.objCvdusersubscription.FCvduserId,\n  FCvdcourseId: this.objCvdusersubscription.FCvdcourseId,\n  FCvdsubscriptionId: this.objCvdusersubscription.FCvdsubscriptionId\n\n\n });\n }\n\n saveCvdusersubscription(): void {\n if (this.CvdusersubscriptionForm.valid) {\n if (this.CvdusersubscriptionForm.dirty) {\n const p = { ...this.objCvdusersubscription, ...this.CvdusersubscriptionForm.value };\n\n if (p.id === 0) {\n this.createCvdusersubscription(p);\n } else {\n this.updateCvdusersubscription(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdusersubscription.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdusersubscription(this.objCvdusersubscription.id)\n }\n }\n }\n\n PerformOperation(data: Cvdusersubscription): void { \n this.displayCvdusersubscription(data);\n }\n getCvdusersubscription(id: number): void {\n this.objCvdusersubscriptionService.getCvdusersubscription(id)\n .subscribe({\n next: (data: Cvdusersubscription) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdusersubscription(p: Cvdusersubscription): void\n {\n this.objCvdusersubscriptionService.createCvdusersubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdusersubscription(p: Cvdusersubscription): void\n {\n this.objCvdusersubscriptionService.updateCvdusersubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdusersubscription(id: number): void {\n this.objCvdusersubscriptionService.deleteCvdusersubscription(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdusersubscriptionForm.reset();\n this.router.navigate(['/Cvdusersubscriptions']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvdusersubscription()\"\n      [formGroup]=\"CvdusersubscriptionForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdcourseId\">Select Course</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\" [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdsubscriptionId\">Select Subscription</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdsubscriptionId\" formControlName=\"FCvdsubscriptionId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdsubscriptionId}\">\n            <option [value]='0' selected>Select Subscription...</option>\"\n            <option *ngFor=\"let lstCvdsubscription of CvdsubscriptionList\" [value]=\"lstCvdsubscription.id\">\n              {{lstCvdsubscription.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdsubscriptionId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvduserId\">Select User</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\" [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvdusersubscriptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvdusersubscriptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdusersubscriptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdusersubscription-list',\n   templateUrl: './cvdusersubscription-list.component.html',\n   styleUrls: ['./cvdusersubscription-list.component.css']\n})\nexport class CvdusersubscriptionListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdsubscriptionService: CvdsubscriptionService, private objCvdcourseService: CvdcourseService, private objCvdusersubscriptionService: CvdusersubscriptionService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdcourse();\n   }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdusersubscription();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n\n     CvdsubscriptionList: Cvdsubscription[];\n     getAllCvdsubscription() {\n       this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n         next: data => {\n           this.CvdsubscriptionList = data;\n           this.getAllCvduser();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdsubscriptionNameFromId(Id: Number): string {\n       return this.CvdsubscriptionList.find(r=>r.id===Id).Name;\n     }\n     \n     CvdcourseList: Cvdcourse[];\n     getAllCvdcourse() {\n       this.objCvdcourseService.getAllCvdcourse().subscribe({\n         next: data => {\n           this.CvdcourseList = data;\n           this.getAllCvdsubscription();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdcourseNameFromId(Id: Number): string {\n       return this.CvdcourseList.find(r=>r.id===Id).Name;\n     }\n   errorMessage: any;\n   pageTitle: string = \"User Subscription List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdusersubscriptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdusersubscriptionList;\n   }\n\n   filteredCvdusersubscriptions: Cvdusersubscription[] = [];\n   CvdusersubscriptionList: Cvdusersubscription[] = [];\n\n   performFilter(filterBy: string): Cvdusersubscription[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdusersubscriptionList.filter((data: Cvdusersubscription) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdusersubscription() {\n      this.objCvdusersubscriptionService.getAllCvdusersubscription().subscribe({\n         next: data => {\n            this.CvdusersubscriptionList = data;\n            this.CvdusersubscriptionList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.CvdusersubscriptionList.forEach(r=>r.CvdsubscriptionName = this.getCvdsubscriptionNameFromId(r.FCvdsubscriptionId));\n            this.CvdusersubscriptionList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n         \n            this.filteredCvdusersubscriptions = this.CvdusersubscriptionList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdusersubscriptions', 0, 'edit']\">\n        Add User Subscription\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdusersubscriptionList && CvdusersubscriptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>Subscription Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdusersubscription of filteredCvdusersubscriptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdusersubscriptions', itrCvdusersubscription.id]\">\n                {{ itrCvdusersubscription.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdusersubscription.CvdcourseName }}</td>\n            <td>{{ itrCvdusersubscription.CvdsubscriptionName }}</td>\n            <td>{{ itrCvdusersubscription.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdusersubscriptions', itrCvdusersubscription.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { appconstants } from '../common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() public isUserLoggedin: boolean;\n  @Input() public LoggedinUserName: string;\n\n  lclFProjroleId: number;\n  constructor(private router:Router) { }\n  \n  ngOnInit() {\n    if(this.isUserLoggedin==true)\n    {\n      this.lclFProjroleId = appconstants.gblLoggedinUserRole;\n     // this.lclFProjroleId = appconstants.gblobjCustomer.FProjroleId;\n    }\n  }\n\n  Logout()\n  {\n    appconstants.gblisUserLoggedin=false;\n    this.isUserLoggedin= false;\n    this.router.navigate([\"/homes\"]);\n  }\n\n  GoToLoginPage()\n  {\n    this.router.navigate([\"/logins\"]);\n  }\n\n\n}\n","<div id=\"main\" *ngIf=\"!isUserLoggedin\">\n    <nav>\n          <ul>\n                <li><a routerLinkActive='active' [routerLink]=\"['/homes']\">Home</a>\n                </li>\n                <li><a routerLinkActive='active' [routerLink]=\"['/Contactus']\">Contact us</a>\n                </li>\n                <button href=\"#\" (click)=\"GoToLoginPage()\" class=\"btn btn-primary\">\n                      <span class=\"glyphicon glyphicon-log-out\"></span> Log in\n                </button>\n          </ul>\n    </nav>\n    <br><br><br>\n</div>\n\n<div id=\"main\" *ngIf=\"isUserLoggedin\">\n    <nav>\n          <ul>\n                <li><a routerLinkActive='active' [routerLink]=\"['/home']\">Home</a>\n                </li>\n           \n                \n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 1\">Super Admin</a>\n                      <ul class=\"nav-dropdown\"  *ngIf=\"lclFProjroleId <= 1\">\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdroles']\">role</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdscreens']\">screen</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdpermissions']\">permission</a>\n                              </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdstatus']\">status</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdtrainingtypes']\">Trainingtype</a>\n                                </li>\n                        \n\n                      </ul>\n                </li>\n\n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 2\">Admin</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 2\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdfaqs']\">faq</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdclasses']\">class</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdlevels']\">level</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdsubscriptions']\">subscription</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdusers']\">user</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdusersubscriptions']\">usersubscription</a>\n                              </li>\n\n                      </ul>\n                </li>\n\n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 3\">Teacher</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 3\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdcourses']\">course</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdcoursestatus']\">coursestatus</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdlearnchecks']\">learncheck</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdoptions']\">option</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdquestions']\">question</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdtableofcontents']\">tableofcontent</a>\n                              </li>\n\n                      </ul>\n                </li>\n\n                  <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 4\">Student</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 4\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvddiscussions']\">discussion</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdfeedbacks']\">feedback</a>\n                              </li>\n\n                      </ul>\n                </li>\n                <li><a routerLinkActive='active' [routerLink]=\"['/Contactus']\">Contact us</a>\n                </li>\n                <button href=\"#\" (click)=\"Logout()\" class=\"btn btn-info\">\n                      <span class=\"glyphicon glyphicon-log-out\"></span> Log out\n                </button>\n                <label>Welcome: {{ LoggedinUserName }} </label>\n          </ul>\n\n    </nav>\n\n</div>\n<br><br>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { appconstants } from '../common/appconstants';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n\n  ngOnInit() {\n    this.isUserLoggedin= appconstants.gblisUserLoggedin;\n    this.LoggedinUserName = appconstants.gblLoggedinUserName;\n  }\n\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n    <div class=\"row\">\n\n      <div class=\"col-md-10\">\n        \n      </div>\n      <div class=\"col-md-1\"></div>\n    </div>\n\n    <div *ngIf=\"!isUserLoggedin\">\n    </div>","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdclasse } from '../models/cvdclasse';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdclasseService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdclasse(): Observable<Cvdclasse[]> {\n return this.http.get<Cvdclasse[]>(appconstants.url + \"Cvdclasses\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdclasse(id: number): Observable<Cvdclasse> {\n if (id === 0) {\n return of(this.initializeCvdclasse());\n }\n const url = appconstants.url + \"Cvdclasses/\" + id;\n return this.http.get<Cvdclasse>(url)\n .pipe(\n tap(data => console.log('getCvdclasse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdclasse(objCvdclasse: Cvdclasse): Observable<Cvdclasse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdclasse>(appconstants.url + \"Cvdclasses/\", objCvdclasse, { headers })\n .pipe(\n tap(data => console.log('createCvdclasse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdclasse(objCvdclasse: Cvdclasse): Observable<Cvdclasse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdclasses/\" + objCvdclasse.id;\n return this.http.put<Cvdclasse>(url, objCvdclasse, { headers })\n .pipe(\n tap(() => console.log('updateCvdclasse: ' + objCvdclasse.id)),\n map(() => objCvdclasse),\n catchError(this.handleError)\n );\n }\n\n deleteCvdclasse(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdclasses/\" + id;\n return this.http.delete<Cvdclasse>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdclasse: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdclasse(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdcourse } from '../models/cvdcourse';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdcourseService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdcourse(): Observable<Cvdcourse[]> {\n return this.http.get<Cvdcourse[]>(appconstants.url + \"Cvdcourses\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdcourse(id: number): Observable<Cvdcourse> {\n if (id === 0) {\n return of(this.initializeCvdcourse());\n }\n const url = appconstants.url + \"Cvdcourses/\" + id;\n return this.http.get<Cvdcourse>(url)\n .pipe(\n tap(data => console.log('getCvdcourse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdcourse(objCvdcourse: Cvdcourse): Observable<Cvdcourse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdcourse>(appconstants.url + \"Cvdcourses/\", objCvdcourse, { headers })\n .pipe(\n tap(data => console.log('createCvdcourse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdcourse(objCvdcourse: Cvdcourse): Observable<Cvdcourse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcourses/\" + objCvdcourse.id;\n return this.http.put<Cvdcourse>(url, objCvdcourse, { headers })\n .pipe(\n tap(() => console.log('updateCvdcourse: ' + objCvdcourse.id)),\n map(() => objCvdcourse),\n catchError(this.handleError)\n );\n }\n\n deleteCvdcourse(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcourses/\" + id;\n return this.http.delete<Cvdcourse>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdcourse: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdcourse(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdcoursestatu } from '../models/cvdcoursestatu';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdcoursestatuService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdcoursestatu(): Observable<Cvdcoursestatu[]> {\n return this.http.get<Cvdcoursestatu[]>(appconstants.url + \"Cvdcoursestatus\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdcoursestatu(id: number): Observable<Cvdcoursestatu> {\n if (id === 0) {\n return of(this.initializeCvdcoursestatu());\n }\n const url = appconstants.url + \"Cvdcoursestatus/\" + id;\n return this.http.get<Cvdcoursestatu>(url)\n .pipe(\n tap(data => console.log('getCvdcoursestatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): Observable<Cvdcoursestatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdcoursestatu>(appconstants.url + \"Cvdcoursestatus/\", objCvdcoursestatu, { headers })\n .pipe(\n tap(data => console.log('createCvdcoursestatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): Observable<Cvdcoursestatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcoursestatus/\" + objCvdcoursestatu.id;\n return this.http.put<Cvdcoursestatu>(url, objCvdcoursestatu, { headers })\n .pipe(\n tap(() => console.log('updateCvdcoursestatu: ' + objCvdcoursestatu.id)),\n map(() => objCvdcoursestatu),\n catchError(this.handleError)\n );\n }\n\n deleteCvdcoursestatu(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcoursestatus/\" + id;\n return this.http.delete<Cvdcoursestatu>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdcoursestatu: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdcoursestatu(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvddiscussion } from '../models/cvddiscussion';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvddiscussionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvddiscussion(): Observable<Cvddiscussion[]> {\n return this.http.get<Cvddiscussion[]>(appconstants.url + \"Cvddiscussions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvddiscussion(id: number): Observable<Cvddiscussion> {\n if (id === 0) {\n return of(this.initializeCvddiscussion());\n }\n const url = appconstants.url + \"Cvddiscussions/\" + id;\n return this.http.get<Cvddiscussion>(url)\n .pipe(\n tap(data => console.log('getCvddiscussion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvddiscussion(objCvddiscussion: Cvddiscussion): Observable<Cvddiscussion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvddiscussion>(appconstants.url + \"Cvddiscussions/\", objCvddiscussion, { headers })\n .pipe(\n tap(data => console.log('createCvddiscussion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvddiscussion(objCvddiscussion: Cvddiscussion): Observable<Cvddiscussion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvddiscussions/\" + objCvddiscussion.id;\n return this.http.put<Cvddiscussion>(url, objCvddiscussion, { headers })\n .pipe(\n tap(() => console.log('updateCvddiscussion: ' + objCvddiscussion.id)),\n map(() => objCvddiscussion),\n catchError(this.handleError)\n );\n }\n\n deleteCvddiscussion(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvddiscussions/\" + id;\n return this.http.delete<Cvddiscussion>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvddiscussion: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvddiscussion(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdfaq } from '../models/cvdfaq';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdfaqService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdfaq(): Observable<Cvdfaq[]> {\n return this.http.get<Cvdfaq[]>(appconstants.url + \"Cvdfaqs\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdfaq(id: number): Observable<Cvdfaq> {\n if (id === 0) {\n return of(this.initializeCvdfaq());\n }\n const url = appconstants.url + \"Cvdfaqs/\" + id;\n return this.http.get<Cvdfaq>(url)\n .pipe(\n tap(data => console.log('getCvdfaq: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdfaq(objCvdfaq: Cvdfaq): Observable<Cvdfaq> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdfaq>(appconstants.url + \"Cvdfaqs/\", objCvdfaq, { headers })\n .pipe(\n tap(data => console.log('createCvdfaq: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdfaq(objCvdfaq: Cvdfaq): Observable<Cvdfaq> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfaqs/\" + objCvdfaq.id;\n return this.http.put<Cvdfaq>(url, objCvdfaq, { headers })\n .pipe(\n tap(() => console.log('updateCvdfaq: ' + objCvdfaq.id)),\n map(() => objCvdfaq),\n catchError(this.handleError)\n );\n }\n\n deleteCvdfaq(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfaqs/\" + id;\n return this.http.delete<Cvdfaq>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdfaq: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdfaq(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdfeedback } from '../models/cvdfeedback';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdfeedbackService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdfeedback(): Observable<Cvdfeedback[]> {\n return this.http.get<Cvdfeedback[]>(appconstants.url + \"Cvdfeedbacks\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdfeedback(id: number): Observable<Cvdfeedback> {\n if (id === 0) {\n return of(this.initializeCvdfeedback());\n }\n const url = appconstants.url + \"Cvdfeedbacks/\" + id;\n return this.http.get<Cvdfeedback>(url)\n .pipe(\n tap(data => console.log('getCvdfeedback: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdfeedback(objCvdfeedback: Cvdfeedback): Observable<Cvdfeedback> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdfeedback>(appconstants.url + \"Cvdfeedbacks/\", objCvdfeedback, { headers })\n .pipe(\n tap(data => console.log('createCvdfeedback: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdfeedback(objCvdfeedback: Cvdfeedback): Observable<Cvdfeedback> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfeedbacks/\" + objCvdfeedback.id;\n return this.http.put<Cvdfeedback>(url, objCvdfeedback, { headers })\n .pipe(\n tap(() => console.log('updateCvdfeedback: ' + objCvdfeedback.id)),\n map(() => objCvdfeedback),\n catchError(this.handleError)\n );\n }\n\n deleteCvdfeedback(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfeedbacks/\" + id;\n return this.http.delete<Cvdfeedback>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdfeedback: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdfeedback(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdlearncheck } from '../models/cvdlearncheck';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdlearncheckService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdlearncheck(): Observable<Cvdlearncheck[]> {\n return this.http.get<Cvdlearncheck[]>(appconstants.url + \"Cvdlearnchecks\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdlearncheck(id: number): Observable<Cvdlearncheck> {\n if (id === 0) {\n return of(this.initializeCvdlearncheck());\n }\n const url = appconstants.url + \"Cvdlearnchecks/\" + id;\n return this.http.get<Cvdlearncheck>(url)\n .pipe(\n tap(data => console.log('getCvdlearncheck: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdlearncheck(objCvdlearncheck: Cvdlearncheck): Observable<Cvdlearncheck> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdlearncheck>(appconstants.url + \"Cvdlearnchecks/\", objCvdlearncheck, { headers })\n .pipe(\n tap(data => console.log('createCvdlearncheck: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdlearncheck(objCvdlearncheck: Cvdlearncheck): Observable<Cvdlearncheck> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlearnchecks/\" + objCvdlearncheck.id;\n return this.http.put<Cvdlearncheck>(url, objCvdlearncheck, { headers })\n .pipe(\n tap(() => console.log('updateCvdlearncheck: ' + objCvdlearncheck.id)),\n map(() => objCvdlearncheck),\n catchError(this.handleError)\n );\n }\n\n deleteCvdlearncheck(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlearnchecks/\" + id;\n return this.http.delete<Cvdlearncheck>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdlearncheck: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdlearncheck(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdlevel } from '../models/cvdlevel';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdlevelService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdlevel(): Observable<Cvdlevel[]> {\n return this.http.get<Cvdlevel[]>(appconstants.url + \"Cvdlevels\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdlevel(id: number): Observable<Cvdlevel> {\n if (id === 0) {\n return of(this.initializeCvdlevel());\n }\n const url = appconstants.url + \"Cvdlevels/\" + id;\n return this.http.get<Cvdlevel>(url)\n .pipe(\n tap(data => console.log('getCvdlevel: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdlevel(objCvdlevel: Cvdlevel): Observable<Cvdlevel> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdlevel>(appconstants.url + \"Cvdlevels/\", objCvdlevel, { headers })\n .pipe(\n tap(data => console.log('createCvdlevel: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdlevel(objCvdlevel: Cvdlevel): Observable<Cvdlevel> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlevels/\" + objCvdlevel.id;\n return this.http.put<Cvdlevel>(url, objCvdlevel, { headers })\n .pipe(\n tap(() => console.log('updateCvdlevel: ' + objCvdlevel.id)),\n map(() => objCvdlevel),\n catchError(this.handleError)\n );\n }\n\n deleteCvdlevel(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlevels/\" + id;\n return this.http.delete<Cvdlevel>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdlevel: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdlevel(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdoption } from '../models/cvdoption';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdoptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdoption(): Observable<Cvdoption[]> {\n return this.http.get<Cvdoption[]>(appconstants.url + \"Cvdoptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdoption(id: number): Observable<Cvdoption> {\n if (id === 0) {\n return of(this.initializeCvdoption());\n }\n const url = appconstants.url + \"Cvdoptions/\" + id;\n return this.http.get<Cvdoption>(url)\n .pipe(\n tap(data => console.log('getCvdoption: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdoption(objCvdoption: Cvdoption): Observable<Cvdoption> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdoption>(appconstants.url + \"Cvdoptions/\", objCvdoption, { headers })\n .pipe(\n tap(data => console.log('createCvdoption: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdoption(objCvdoption: Cvdoption): Observable<Cvdoption> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdoptions/\" + objCvdoption.id;\n return this.http.put<Cvdoption>(url, objCvdoption, { headers })\n .pipe(\n tap(() => console.log('updateCvdoption: ' + objCvdoption.id)),\n map(() => objCvdoption),\n catchError(this.handleError)\n );\n }\n\n deleteCvdoption(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdoptions/\" + id;\n return this.http.delete<Cvdoption>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdoption: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdoption(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdpermission } from '../models/cvdpermission';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdpermissionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdpermission(): Observable<Cvdpermission[]> {\n return this.http.get<Cvdpermission[]>(appconstants.url + \"Cvdpermissions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdpermission(id: number): Observable<Cvdpermission> {\n if (id === 0) {\n return of(this.initializeCvdpermission());\n }\n const url = appconstants.url + \"Cvdpermissions/\" + id;\n return this.http.get<Cvdpermission>(url)\n .pipe(\n tap(data => console.log('getCvdpermission: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdpermission(objCvdpermission: Cvdpermission): Observable<Cvdpermission> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdpermission>(appconstants.url + \"Cvdpermissions/\", objCvdpermission, { headers })\n .pipe(\n tap(data => console.log('createCvdpermission: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdpermission(objCvdpermission: Cvdpermission): Observable<Cvdpermission> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdpermissions/\" + objCvdpermission.id;\n return this.http.put<Cvdpermission>(url, objCvdpermission, { headers })\n .pipe(\n tap(() => console.log('updateCvdpermission: ' + objCvdpermission.id)),\n map(() => objCvdpermission),\n catchError(this.handleError)\n );\n }\n\n deleteCvdpermission(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdpermissions/\" + id;\n return this.http.delete<Cvdpermission>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdpermission: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdpermission(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdquestion } from '../models/cvdquestion';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdquestionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdquestion(): Observable<Cvdquestion[]> {\n return this.http.get<Cvdquestion[]>(appconstants.url + \"Cvdquestions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdquestion(id: number): Observable<Cvdquestion> {\n if (id === 0) {\n return of(this.initializeCvdquestion());\n }\n const url = appconstants.url + \"Cvdquestions/\" + id;\n return this.http.get<Cvdquestion>(url)\n .pipe(\n tap(data => console.log('getCvdquestion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdquestion(objCvdquestion: Cvdquestion): Observable<Cvdquestion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdquestion>(appconstants.url + \"Cvdquestions/\", objCvdquestion, { headers })\n .pipe(\n tap(data => console.log('createCvdquestion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdquestion(objCvdquestion: Cvdquestion): Observable<Cvdquestion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdquestions/\" + objCvdquestion.id;\n return this.http.put<Cvdquestion>(url, objCvdquestion, { headers })\n .pipe(\n tap(() => console.log('updateCvdquestion: ' + objCvdquestion.id)),\n map(() => objCvdquestion),\n catchError(this.handleError)\n );\n }\n\n deleteCvdquestion(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdquestions/\" + id;\n return this.http.delete<Cvdquestion>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdquestion: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdquestion(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdrole } from '../models/cvdrole';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdroleService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdrole(): Observable<Cvdrole[]> {\n return this.http.get<Cvdrole[]>(appconstants.url + \"Cvdroles\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdrole(id: number): Observable<Cvdrole> {\n if (id === 0) {\n return of(this.initializeCvdrole());\n }\n const url = appconstants.url + \"Cvdroles/\" + id;\n return this.http.get<Cvdrole>(url)\n .pipe(\n tap(data => console.log('getCvdrole: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdrole(objCvdrole: Cvdrole): Observable<Cvdrole> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdrole>(appconstants.url + \"Cvdroles/\", objCvdrole, { headers })\n .pipe(\n tap(data => console.log('createCvdrole: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdrole(objCvdrole: Cvdrole): Observable<Cvdrole> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdroles/\" + objCvdrole.id;\n return this.http.put<Cvdrole>(url, objCvdrole, { headers })\n .pipe(\n tap(() => console.log('updateCvdrole: ' + objCvdrole.id)),\n map(() => objCvdrole),\n catchError(this.handleError)\n );\n }\n\n deleteCvdrole(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdroles/\" + id;\n return this.http.delete<Cvdrole>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdrole: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdrole(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdscreen } from '../models/cvdscreen';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdscreenService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdscreen(): Observable<Cvdscreen[]> {\n return this.http.get<Cvdscreen[]>(appconstants.url + \"Cvdscreens\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdscreen(id: number): Observable<Cvdscreen> {\n if (id === 0) {\n return of(this.initializeCvdscreen());\n }\n const url = appconstants.url + \"Cvdscreens/\" + id;\n return this.http.get<Cvdscreen>(url)\n .pipe(\n tap(data => console.log('getCvdscreen: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdscreen(objCvdscreen: Cvdscreen): Observable<Cvdscreen> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdscreen>(appconstants.url + \"Cvdscreens/\", objCvdscreen, { headers })\n .pipe(\n tap(data => console.log('createCvdscreen: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdscreen(objCvdscreen: Cvdscreen): Observable<Cvdscreen> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdscreens/\" + objCvdscreen.id;\n return this.http.put<Cvdscreen>(url, objCvdscreen, { headers })\n .pipe(\n tap(() => console.log('updateCvdscreen: ' + objCvdscreen.id)),\n map(() => objCvdscreen),\n catchError(this.handleError)\n );\n }\n\n deleteCvdscreen(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdscreens/\" + id;\n return this.http.delete<Cvdscreen>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdscreen: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdscreen(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdstatu } from '../models/cvdstatu';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdstatuService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdstatu(): Observable<Cvdstatu[]> {\n return this.http.get<Cvdstatu[]>(appconstants.url + \"Cvdstatus\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdstatu(id: number): Observable<Cvdstatu> {\n if (id === 0) {\n return of(this.initializeCvdstatu());\n }\n const url = appconstants.url + \"Cvdstatus/\" + id;\n return this.http.get<Cvdstatu>(url)\n .pipe(\n tap(data => console.log('getCvdstatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdstatu(objCvdstatu: Cvdstatu): Observable<Cvdstatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdstatu>(appconstants.url + \"Cvdstatus/\", objCvdstatu, { headers })\n .pipe(\n tap(data => console.log('createCvdstatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdstatu(objCvdstatu: Cvdstatu): Observable<Cvdstatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdstatus/\" + objCvdstatu.id;\n return this.http.put<Cvdstatu>(url, objCvdstatu, { headers })\n .pipe(\n tap(() => console.log('updateCvdstatu: ' + objCvdstatu.id)),\n map(() => objCvdstatu),\n catchError(this.handleError)\n );\n }\n\n deleteCvdstatu(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdstatus/\" + id;\n return this.http.delete<Cvdstatu>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdstatu: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdstatu(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdsubscription } from '../models/cvdsubscription';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdsubscriptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdsubscription(): Observable<Cvdsubscription[]> {\n return this.http.get<Cvdsubscription[]>(appconstants.url + \"Cvdsubscriptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdsubscription(id: number): Observable<Cvdsubscription> {\n if (id === 0) {\n return of(this.initializeCvdsubscription());\n }\n const url = appconstants.url + \"Cvdsubscriptions/\" + id;\n return this.http.get<Cvdsubscription>(url)\n .pipe(\n tap(data => console.log('getCvdsubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdsubscription(objCvdsubscription: Cvdsubscription): Observable<Cvdsubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdsubscription>(appconstants.url + \"Cvdsubscriptions/\", objCvdsubscription, { headers })\n .pipe(\n tap(data => console.log('createCvdsubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdsubscription(objCvdsubscription: Cvdsubscription): Observable<Cvdsubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdsubscriptions/\" + objCvdsubscription.id;\n return this.http.put<Cvdsubscription>(url, objCvdsubscription, { headers })\n .pipe(\n tap(() => console.log('updateCvdsubscription: ' + objCvdsubscription.id)),\n map(() => objCvdsubscription),\n catchError(this.handleError)\n );\n }\n\n deleteCvdsubscription(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdsubscriptions/\" + id;\n return this.http.delete<Cvdsubscription>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdsubscription: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdsubscription(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdtableofcontent } from '../models/cvdtableofcontent';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdtableofcontentService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdtableofcontent(): Observable<Cvdtableofcontent[]> {\n return this.http.get<Cvdtableofcontent[]>(appconstants.url + \"Cvdtableofcontents\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdtableofcontent(id: number): Observable<Cvdtableofcontent> {\n if (id === 0) {\n return of(this.initializeCvdtableofcontent());\n }\n const url = appconstants.url + \"Cvdtableofcontents/\" + id;\n return this.http.get<Cvdtableofcontent>(url)\n .pipe(\n tap(data => console.log('getCvdtableofcontent: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): Observable<Cvdtableofcontent> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdtableofcontent>(appconstants.url + \"Cvdtableofcontents/\", objCvdtableofcontent, { headers })\n .pipe(\n tap(data => console.log('createCvdtableofcontent: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): Observable<Cvdtableofcontent> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtableofcontents/\" + objCvdtableofcontent.id;\n return this.http.put<Cvdtableofcontent>(url, objCvdtableofcontent, { headers })\n .pipe(\n tap(() => console.log('updateCvdtableofcontent: ' + objCvdtableofcontent.id)),\n map(() => objCvdtableofcontent),\n catchError(this.handleError)\n );\n }\n\n deleteCvdtableofcontent(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtableofcontents/\" + id;\n return this.http.delete<Cvdtableofcontent>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdtableofcontent: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdtableofcontent(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdtrainingtype } from '../models/cvdtrainingtype';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdtrainingtypeService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdtrainingtype(): Observable<Cvdtrainingtype[]> {\n return this.http.get<Cvdtrainingtype[]>(appconstants.url + \"Cvdtrainingtypes\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdtrainingtype(id: number): Observable<Cvdtrainingtype> {\n if (id === 0) {\n return of(this.initializeCvdtrainingtype());\n }\n const url = appconstants.url + \"Cvdtrainingtypes/\" + id;\n return this.http.get<Cvdtrainingtype>(url)\n .pipe(\n tap(data => console.log('getCvdtrainingtype: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): Observable<Cvdtrainingtype> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdtrainingtype>(appconstants.url + \"Cvdtrainingtypes/\", objCvdtrainingtype, { headers })\n .pipe(\n tap(data => console.log('createCvdtrainingtype: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): Observable<Cvdtrainingtype> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtrainingtypes/\" + objCvdtrainingtype.id;\n return this.http.put<Cvdtrainingtype>(url, objCvdtrainingtype, { headers })\n .pipe(\n tap(() => console.log('updateCvdtrainingtype: ' + objCvdtrainingtype.id)),\n map(() => objCvdtrainingtype),\n catchError(this.handleError)\n );\n }\n\n deleteCvdtrainingtype(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtrainingtypes/\" + id;\n return this.http.delete<Cvdtrainingtype>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdtrainingtype: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdtrainingtype(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvduser } from '../models/cvduser';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvduserService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  getAllCvduser(): Observable<Cvduser[]> {\n    return this.http.get<Cvduser[]>(appconstants.url + \"Cvdusers\")\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getCvduser(id: number): Observable<Cvduser> {\n    if (id === 0) {\n      return of(this.initializeCvduser());\n    }\n    const url = appconstants.url + \"Cvdusers/\" + id;\n    return this.http.get<Cvduser>(url)\n      .pipe(\n        tap(data => console.log('getCvduser: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  createCvduser(objCvduser: Cvduser): Observable<Cvduser> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<Cvduser>(appconstants.url + \"Cvdusers/\", objCvduser, { headers })\n      .pipe(\n        tap(data => console.log('createCvduser: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  updateCvduser(objCvduser: Cvduser): Observable<Cvduser> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = appconstants.url + \"Cvdusers/\" + objCvduser.id;\n    return this.http.put<Cvduser>(url, objCvduser, { headers })\n      .pipe(\n        tap(() => console.log('updateCvduser: ' + objCvduser.id)),\n        map(() => objCvduser),\n        catchError(this.handleError)\n      );\n  }\n\n  deleteCvduser(id: number): Observable<{}> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = appconstants.url + \"Cvdusers/\" + id;\n    return this.http.delete<Cvduser>(url, { headers })\n      .pipe(\n        tap(data => console.log('deleteCvduser: ' + id)),\n        catchError(this.handleError)\n      );\n  }\n\n  initializeCvduser(): any {\n    return {\n      id: 0,\n      Name: null,\n      EmailAddress: null,\n      MobileNo: null,\n      Password: null,\n      FCvdroleId: 0\n    };\n  }\n\n  private handleError(err) {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = \"An error occurred:\" + err.error.message;\n    } else {\n      errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdusersubscription } from '../models/cvdusersubscription';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdusersubscriptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdusersubscription(): Observable<Cvdusersubscription[]> {\n return this.http.get<Cvdusersubscription[]>(appconstants.url + \"Cvdusersubscriptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdusersubscription(id: number): Observable<Cvdusersubscription> {\n if (id === 0) {\n return of(this.initializeCvdusersubscription());\n }\n const url = appconstants.url + \"Cvdusersubscriptions/\" + id;\n return this.http.get<Cvdusersubscription>(url)\n .pipe(\n tap(data => console.log('getCvdusersubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdusersubscription(objCvdusersubscription: Cvdusersubscription): Observable<Cvdusersubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdusersubscription>(appconstants.url + \"Cvdusersubscriptions/\", objCvdusersubscription, { headers })\n .pipe(\n tap(data => console.log('createCvdusersubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdusersubscription(objCvdusersubscription: Cvdusersubscription): Observable<Cvdusersubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdusersubscriptions/\" + objCvdusersubscription.id;\n return this.http.put<Cvdusersubscription>(url, objCvdusersubscription, { headers })\n .pipe(\n tap(() => console.log('updateCvdusersubscription: ' + objCvdusersubscription.id)),\n map(() => objCvdusersubscription),\n catchError(this.handleError)\n );\n }\n\n deleteCvdusersubscription(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdusersubscriptions/\" + id;\n return this.http.delete<Cvdusersubscription>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdusersubscription: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdusersubscription(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n  showForm: boolean;\n  objForgotPassword: Cvduser;\n\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.ForgotPasswordForm.valueChanges, ...controlBlurs).pipe(\n      debounceTime(800)\n    ).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.ForgotPasswordForm);\n    });\n  }\n\n  constructor(private router: Router, private fb: FormBuilder, private objCvduserService: CvduserService) {\n    this.validationMessages = {\n      EmailAddress: {\n        required: 'This field is required. ',\n        minlength: 'This field requires atleast 3 characters. ',\n        maxlength: 'cannot exceed more than 50 characters. ',\n        email: ' Valid Email Address is required. '\n      },\n      Code: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 6 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n      cnfPassword: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n\n\n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n  errorMessage: string;\n\n  ForgotPasswordForm: FormGroup;\n\n  private InitializeForm() {\n    this.ForgotPasswordForm = this.fb.group({\n      EmailAddress: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50),\n      Validators.email]],\n      Code: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(6)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n      cnfPassword: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n\n    });\n  }\n\n\n  saveChangePassword(): void {\n    if (this.ForgotPasswordForm.controls.Password.value == this.ForgotPasswordForm.controls.cnfPassword.value) {\n      if (this.code == this.ForgotPasswordForm.controls.Code.value) {\n\n        if (this.ForgotPasswordForm.valid) {\n          if (this.ForgotPasswordForm.dirty) {\n            this.objForgotPassword.Password = this.ForgotPasswordForm.controls.Password.value;\n            this.updateCvduser(this.objForgotPassword);\n          } else {\n            //this.onSaveComplete();\n          }\n        } else {\n          this.errorMessage = 'Please correct the validation errors.';\n        }\n      }\n      else {\n        alert(\"Entered code doesnot match.\");\n      }\n    }\n    else {\n      alert(\"Password and confirm password must be same.\");\n    }\n  }\n\n  updateCvduser(p: Cvduser): void {\n    this.objCvduserService.updateCvduser(p)\n      .subscribe({\n        next: () => { alert('Password updated successfully.'); this.router.navigate([\"/logins\"]); },\n        error: err => this.errorMessage = err\n      });\n\n  }\n\n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  ngOnInit() {\n    this.InitializeForm();\n    this.getAllCvduser();\n  }\n  code: string;\n  VerifyEmail() {\n    const EmailAddress = this.ForgotPasswordForm.controls.EmailAddress.value.toLocaleLowerCase();\n    let countEmailAddress = this.CvduserList.filter(r => r.EmailAddress.toLocaleLowerCase() == EmailAddress).length;\n    if (countEmailAddress == 1) {\n      this.objForgotPassword = this.CvduserList.filter(r => r.EmailAddress.toLocaleLowerCase() == EmailAddress)[0];\n      this.showForm = true;\n      this.code = this.CreateCode();\n      this.sendEmail();\n    } else {\n      alert(\"This email Address doesnot exist. Check your email address and try again.\");\n      this.showForm = false;\n    }\n\n  }\n  sendEmail(): any {\n    console.log('code: ' + this.code);\n  }\n\n  CreateCode(): string {\n   // var randomize = require('randomatic');\n   // return randomize('0', 6);\n   return \"123456\";\n  }\n\n  NavigateToLanding() {\n    this.router.navigate(['/homes']);\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n\n  savePassword(){}\n}\n\n\n","<app-header [isUserLoggedin]=\"false\"></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n\n       <br>\n<br>\n<br>\n<div class=\"row\">\n       <div class=\"col-md-3\"></div>\n       <div class=\"col-md-6\">\n              <div class=\"jumbotron\">\n                     <div>\n\n                            <h4>Forgot Password</h4>\n                            <hr><br>\n                            <div class=\"form-group\">\n                                       \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"savePassword()\" [formGroup]=\"ForgotPasswordForm\">\n                                          <div class=\"form-group row mb-2\">\n                                                 <label class=\"col-md-2 col-form-label\"\n                                                        for=\"EmailAddressId\">Email</label>\n                                                 <div class=\"col-md-7\">\n                                                        <input class=\"form-control\" id=\"EmailAddressId\" type=\"email\"\n                                                               placeholder=\"Email Address (required)\"\n                                                               formControlName=\"EmailAddress\"\n                                                               [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n                                                        <span class=\"invalid-feedback\">\n                                                               {{displayMessage.EmailAddress}}\n                                                        </span>\n                                                 </div>\n                                                 \n                                                 <div class=\"col-md-3\" *ngIf=\"ForgotPasswordForm.controls.EmailAddress\">\n                                                        <button type=\"button\" class=\"btn btn-primary btn-block\"\n                                                        [disabled]=\"!ForgotPasswordForm.controls.EmailAddress.valid\" (click)=\"VerifyEmail()\">Verify\n                                                        </button>\n                                                 </div>\n                                          </div>\n                                          <br>\n\n                                          <hr>\n                                          <div *ngIf=\"showForm\">\n                                                 <div class=\"form-group row mb-2\">\n\n                                                        <div class=\"col-md-4\">\n                                                               <input class=\"form-control\" id=\"CodeId\" type=\"text\"\n                                                                      placeholder=\"Code (required)\"\n                                                                      formControlName=\"Code\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.Code}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.Code}}\n                                                               </span>\n                                                        </div>\n                                                        <div class=\"col-md-8\">\n                                                               <p>We have sent code to your Email Id. Please enter code\n                                                                      to change your password.</p>\n                                                        </div>\n                                                 </div>\n                                                 <hr>\n                                                 <br>\n                                                 <div class=\"form-group row mb-2\">\n                                                        <label class=\"col-md-4 col-form-label\"\n                                                               for=\"PasswordId\">Password</label>\n                                                        <div class=\"col-md-8\">\n                                                               <input class=\"form-control\" id=\"PasswordId\"\n                                                                      type=\"password\" placeholder=\"Password (required)\"\n                                                                      formControlName=\"Password\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.Password}}\n                                                               </span>\n                                                        </div>\n                                                 </div>\n\n                                                 <div class=\"form-group row mb-2\">\n                                                        <label class=\"col-md-4 col-form-label\"\n                                                               for=\"cnfPasswordId\">Confirm Password</label>\n                                                        <div class=\"col-md-8\">\n                                                               <input class=\"form-control\" id=\"cnfPasswordId\"\n                                                                      type=\"password\"\n                                                                      placeholder=\"Confirm Password (required)\"\n                                                                      formControlName=\"cnfPassword\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.cnfPassword}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.cnfPassword}}\n                                                               </span>\n                                                        </div>\n                                                 </div>\n                                                 <hr>\n                                          </div>\n                                   </form>\n\n                                  \n\n\n                                   <div class=\"row\" *ngIf=\"showForm\">\n                                          <div class=\"col-md-5\">\n                                                 <button type=\"submit\" class=\"btn btn-primary btn-block\"\n                                                 [disabled]=\"!ForgotPasswordForm.valid\" (click)=\"saveChangePassword()\">Change Password</button>\n                                          </div>\n                                          <div class=\"col-md-4\">\n                                                 <button type=\"button\" class=\"btn btn-primary btn-block\"\n                                                        (click)=\"Cancel()\">Cancel</button>\n                                          </div>\n                                   </div>\n                            </div>\n                     </div>\n              </div>\n       </div>\n\n     \n\n\n       <div class=\"col-md-6\"></div>\n</div>  <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n</div>","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\n\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.LoginForm.valueChanges, ...controlBlurs).pipe(\n      debounceTime(800)\n    ).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.LoginForm);\n    });\n  }\n\n  constructor(private router: Router, private objCvduserService: CvduserService, private fb: FormBuilder) {\n    this.validationMessages = {\n      UserName: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 100 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  errorMessage: any;\n\n  ngOnInit() {\n    this.InitializeForm();\n    this.getAllCvduser();\n  }\n\n  LoginForm: FormGroup;\n  pageTitle: string;\n  private InitializeForm() {\n\n    this.LoginForm = this.fb.group({\n      UserName: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(100)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n    });\n  }\n\n  CvduserList: Cvduser[] = [];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        //this.saveLogin();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n  retainCvduser: Cvduser[];\n\n  saveLogin() {\n    appconstants.gblisUserLoggedin = true;\n    let Count=0;\n  //  const UserId = \"yash@gmail.com\";//this.LoginForm.controls.UserName.value;\n  //  const Password = \"123456\";//this.LoginForm.controls.Password.value;\n  const UserId = this.LoginForm.controls.UserName.value;\n  const Password = this.LoginForm.controls.Password.value;\n    this.retainCvduser =   this.CvduserList.filter((data: Cvduser) =>\n    (data.EmailAddress == UserId || data.MobileNo == UserId) &&\n    data.Password == Password);\n    \n    console.log('CL: ' + JSON.stringify(this.CvduserList));\n    console.log('RC: ' + JSON.stringify(this.retainCvduser));\n    Count = this.retainCvduser.length;\n\n    if (Count === 1) {\n      appconstants.gblisUserLoggedin = true;\n      appconstants.gblobjCvduser = this.retainCvduser[0];\n      appconstants.gblLoggedinUserName = this.retainCvduser[0].Name;\n      appconstants.gblLoggedinUserId = this.retainCvduser[0].id;\n      appconstants.gblLoggedinUserRole = this.retainCvduser[0].FCvdroleId;\n      this.router.navigate(['/homes']);\n    }\n    else {\n      alert(\"UserId or password not match.\");\n    }\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n\n}\n","<app-header [isUserLoggedin]=\"false\"></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<br><br><br>\n\n<div class=\"row\">\n       <div class=\"col-md-2\"></div>\n       <div class=\"col-md-8\" style=\"background-color: lightgray\">\n              <br>\n              <hr><br>\n                 \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveLogin()\" [formGroup]=\"LoginForm\">\n                     <div class=\"form-group row mb-2\">\n                            <label class=\"col-md-2 col-form-label\" for=\"UserNameId\">User Name</label>\n                            <div class=\"col-md-8\">\n                                   <input class=\"form-control\" id=\"UserNameId\" type=\"text\"\n                                          placeholder=\"User Name (required)\" formControlName=\"UserName\"\n                                          [ngClass]=\"{'is-invalid': displayMessage.UserName}\" />\n                                   <span class=\"invalid-feedback\">\n                                          {{displayMessage.UserName}}\n                                   </span>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2\">\n                            <label class=\"col-md-2 col-form-label\" for=\"PasswordId\">Password</label>\n                            <div class=\"col-md-8\">\n                                   <input class=\"form-control\" id=\"PasswordId\" type=\"password\"\n                                          placeholder=\"Password (required)\" formControlName=\"Password\"\n                                          [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                                   <span class=\"invalid-feedback\">\n                                          {{displayMessage.Password}}\n                                   </span>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2 offset-md-8 col-md-4\">\n                            <div class=\"help-block text-right\"><a href=\"/forgotpasswords\">Forget the password ?</a>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2\">\n                            <div class=\"offset-md-2 col-md-4\">\n                                   <hr><button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type =\"submit\"\n                                          [title]=\"LoginForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                                          [disabled]=\"!LoginForm.valid\">\n                                          Sign in\n                                   </button>\n                                   <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\"\n                                          title=\"Cancel your edits\" (click)=\"Cancel()\">\n                                          Cancel\n                                   </button>\n                            </div>\n                     </div>\n\n                     <div class=\"checkbox  row mb-2 offset-md-2 col-md-4\"><label><input type=\"checkbox\"> keep me\n                                   logged-in</label>\n                     </div>\n                     <div class=\"bottom text-center\">New here ?<a href=\"/registers\"><b>Join Us</b></a></div>\n\n\n              </form>\n\n       </div>\n</div>\n\n","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.CvduserForm.valueChanges, ...controlBlurs)\n      .pipe(debounceTime(800)).subscribe(value => {\n        this.displayMessage = this.genericValidator.processMessages(this.CvduserForm);\n      });\n  }\n\n  constructor( private objCvduserService: CvduserService, private route: ActivatedRoute,\n    private router: Router, private fb: FormBuilder) {\n    this.validationMessages = {\n      Name: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },\n      EmailAddress: {\n        required: 'This field is required',\n        email: 'Email Address is invalid.',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n      MobileNo: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 1 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },        \n      userrole: {\n        required: 'This field is required'\n      } \n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  CvduserForm: FormGroup;\n  objCvduser: Cvduser;\n  pageTitle: string;\n  errorMessage: any;\n  \n  ngOnInit() {\n    this.InitializeForm();\n \n  }\n  private InitializeForm() {\n    this.CvduserForm = this.fb.group({\n      Name: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      EmailAddress: ['', [Validators.required,\n      Validators.email,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n      MobileNo: ['', [Validators.required,\n      Validators.minLength(1),\n      Validators.maxLength(50)]],\n      userrole: ['', Validators.required]\n    });\n  }\n\n  saveCvduser(): void {\n    if (this.CvduserForm.valid) {\n      if (this.CvduserForm.dirty) {\n        const p = { ...this.objCvduser, ...this.CvduserForm.value };\nconsole.log('role: ' + this.CvduserForm.controls.userrole.value);\nif(this.CvduserForm.controls.userrole.value==\"teacher\")\n        p.FCvdroleId = 3;\n        else\n        p.FCvdroleId = 4;\n        this.createCvduser(p);\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      this.errorMessage = 'Please correct the validation errors.';\n    }\n  }\n\n  createCvduser(p: Cvduser): void {\n    this.objCvduserService.createCvduser(p)\n      .subscribe({\n        next: () => this.onSaveComplete(),\n        error: err => this.errorMessage = err\n      });\n  }\n\n  onSaveComplete(): void {\n    this.CvduserForm.reset();\n    this.router.navigate(['/homes']);\n  }\n\n  NavigateToLanding() {\n    this.saveCvduser();\n    this.router.navigate(['/homes']);\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n}\n\n","<app-header [isUserLoggedin]=\"false\"></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n    <br><br><br>\n\n    <div class=\"row\">\n      <div class=\"col-md-2\"></div>\n      <div class=\"col-md-8\">\n\n        <div class=\"jumbotron\">\n          <h4>Registration Page</h4>\n          <hr>\n          <br>\n          <div class=\"form-group\">\n                \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvduser()\"\n              [formGroup]=\"CvduserForm\">\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"NameId\">Name</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\"\n                    formControlName=\"Name\" [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.Name}}\n                  </span>\n                </div>\n              </div>\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"EmailAddressId\">Email Address</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"EmailAddressId\" type=\"email\" placeholder=\"Email Address (required)\"\n                    formControlName=\"EmailAddress\" [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.EmailAddress}}\n                  </span>\n                </div>\n              </div>\n\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"PasswordId\">Password</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"PasswordId\" type=\"password\" placeholder=\"Password (required)\"\n                    formControlName=\"Password\" [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.Password}}\n                  </span>\n                </div>\n              </div>\n\n\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"MobileNoId\">Mobile</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"MobileNoId\" type=\"text\" placeholder=\"Mobile Number (required)\"\n                    formControlName=\"MobileNo\" [ngClass]=\"{'is-invalid': displayMessage.MobileNo}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.MobileNo}}\n                  </span>\n                </div>\n              </div>\n\n              <input type=\"radio\" value=\"teacher\" name=\"userrole\" formControlName=\"userrole\" > Teacher\n              <input type=\"radio\" value=\"student\" name=\"userrole\" formControlName=\"userrole\"> Student\n            </form>\n            <br>\n            <hr>\n        \n\n\n\n\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"NavigateToLanding()\">register</button>\n              </div>\n              <div class=\"col-md-3\">\n                <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"Cancel()\">Cancel</button>\n              </div>\n            </div>\n            <hr>\n          </div>\n        </div>\n\n      </div>\n    </div>    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}