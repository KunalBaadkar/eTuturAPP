{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/appconstants.ts","webpack:///src/app/common/generic-validator.ts","webpack:///src/app/cvdclasse/cvdclasse-detail/cvdclasse-detail.component.ts","webpack:///src/app/cvdclasse/cvdclasse-detail/cvdclasse-detail.component.html","webpack:///src/app/cvdclasse/cvdclasse-edit/cvdclasse-edit.component.ts","webpack:///src/app/cvdclasse/cvdclasse-edit/cvdclasse-edit.component.html","webpack:///src/app/cvdclasse/cvdclasse-list/cvdclasse-list.component.ts","webpack:///src/app/cvdclasse/cvdclasse-list/cvdclasse-list.component.html","webpack:///src/app/cvdcourse/cvdcourse-detail/cvdcourse-detail.component.ts","webpack:///src/app/cvdcourse/cvdcourse-detail/cvdcourse-detail.component.html","webpack:///src/app/cvdcourse/cvdcourse-edit/cvdcourse-edit.component.ts","webpack:///src/app/cvdcourse/cvdcourse-edit/cvdcourse-edit.component.html","webpack:///src/app/cvdcourse/cvdcourse-list/cvdcourse-list.component.ts","webpack:///src/app/cvdcourse/cvdcourse-list/cvdcourse-list.component.html","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component.ts","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component.html","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component.ts","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component.html","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component.ts","webpack:///src/app/cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component.html","webpack:///src/app/cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component.ts","webpack:///src/app/cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component.html","webpack:///src/app/cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component.ts","webpack:///src/app/cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component.html","webpack:///src/app/cvddiscussion/cvddiscussion-list/cvddiscussion-list.component.ts","webpack:///src/app/cvddiscussion/cvddiscussion-list/cvddiscussion-list.component.html","webpack:///src/app/cvdfaq/cvdfaq-detail/cvdfaq-detail.component.ts","webpack:///src/app/cvdfaq/cvdfaq-detail/cvdfaq-detail.component.html","webpack:///src/app/cvdfaq/cvdfaq-edit/cvdfaq-edit.component.ts","webpack:///src/app/cvdfaq/cvdfaq-edit/cvdfaq-edit.component.html","webpack:///src/app/cvdfaq/cvdfaq-list/cvdfaq-list.component.ts","webpack:///src/app/cvdfaq/cvdfaq-list/cvdfaq-list.component.html","webpack:///src/app/cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component.ts","webpack:///src/app/cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component.html","webpack:///src/app/cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component.ts","webpack:///src/app/cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component.html","webpack:///src/app/cvdfeedback/cvdfeedback-list/cvdfeedback-list.component.ts","webpack:///src/app/cvdfeedback/cvdfeedback-list/cvdfeedback-list.component.html","webpack:///src/app/cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component.ts","webpack:///src/app/cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component.html","webpack:///src/app/cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component.ts","webpack:///src/app/cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component.html","webpack:///src/app/cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component.ts","webpack:///src/app/cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component.html","webpack:///src/app/cvdlevel/cvdlevel-detail/cvdlevel-detail.component.ts","webpack:///src/app/cvdlevel/cvdlevel-detail/cvdlevel-detail.component.html","webpack:///src/app/cvdlevel/cvdlevel-edit/cvdlevel-edit.component.ts","webpack:///src/app/cvdlevel/cvdlevel-edit/cvdlevel-edit.component.html","webpack:///src/app/cvdlevel/cvdlevel-list/cvdlevel-list.component.ts","webpack:///src/app/cvdlevel/cvdlevel-list/cvdlevel-list.component.html","webpack:///src/app/cvdoption/cvdoption-detail/cvdoption-detail.component.ts","webpack:///src/app/cvdoption/cvdoption-detail/cvdoption-detail.component.html","webpack:///src/app/cvdoption/cvdoption-edit/cvdoption-edit.component.ts","webpack:///src/app/cvdoption/cvdoption-edit/cvdoption-edit.component.html","webpack:///src/app/cvdoption/cvdoption-list/cvdoption-list.component.ts","webpack:///src/app/cvdoption/cvdoption-list/cvdoption-list.component.html","webpack:///src/app/cvdpermission/cvdpermission-detail/cvdpermission-detail.component.ts","webpack:///src/app/cvdpermission/cvdpermission-detail/cvdpermission-detail.component.html","webpack:///src/app/cvdpermission/cvdpermission-edit/cvdpermission-edit.component.ts","webpack:///src/app/cvdpermission/cvdpermission-edit/cvdpermission-edit.component.html","webpack:///src/app/cvdpermission/cvdpermission-list/cvdpermission-list.component.ts","webpack:///src/app/cvdpermission/cvdpermission-list/cvdpermission-list.component.html","webpack:///src/app/cvdquestion/cvdquestion-detail/cvdquestion-detail.component.ts","webpack:///src/app/cvdquestion/cvdquestion-detail/cvdquestion-detail.component.html","webpack:///src/app/cvdquestion/cvdquestion-edit/cvdquestion-edit.component.ts","webpack:///src/app/cvdquestion/cvdquestion-edit/cvdquestion-edit.component.html","webpack:///src/app/cvdquestion/cvdquestion-list/cvdquestion-list.component.ts","webpack:///src/app/cvdquestion/cvdquestion-list/cvdquestion-list.component.html","webpack:///src/app/cvdrole/cvdrole-detail/cvdrole-detail.component.ts","webpack:///src/app/cvdrole/cvdrole-detail/cvdrole-detail.component.html","webpack:///src/app/cvdrole/cvdrole-edit/cvdrole-edit.component.ts","webpack:///src/app/cvdrole/cvdrole-edit/cvdrole-edit.component.html","webpack:///src/app/cvdrole/cvdrole-list/cvdrole-list.component.ts","webpack:///src/app/cvdrole/cvdrole-list/cvdrole-list.component.html","webpack:///src/app/cvdscreen/cvdscreen-detail/cvdscreen-detail.component.ts","webpack:///src/app/cvdscreen/cvdscreen-detail/cvdscreen-detail.component.html","webpack:///src/app/cvdscreen/cvdscreen-edit/cvdscreen-edit.component.ts","webpack:///src/app/cvdscreen/cvdscreen-edit/cvdscreen-edit.component.html","webpack:///src/app/cvdscreen/cvdscreen-list/cvdscreen-list.component.ts","webpack:///src/app/cvdscreen/cvdscreen-list/cvdscreen-list.component.html","webpack:///src/app/cvdstatu/cvdstatu-detail/cvdstatu-detail.component.ts","webpack:///src/app/cvdstatu/cvdstatu-detail/cvdstatu-detail.component.html","webpack:///src/app/cvdstatu/cvdstatu-edit/cvdstatu-edit.component.ts","webpack:///src/app/cvdstatu/cvdstatu-edit/cvdstatu-edit.component.html","webpack:///src/app/cvdstatu/cvdstatu-list/cvdstatu-list.component.ts","webpack:///src/app/cvdstatu/cvdstatu-list/cvdstatu-list.component.html","webpack:///src/app/cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component.ts","webpack:///src/app/cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component.html","webpack:///src/app/cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component.ts","webpack:///src/app/cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component.html","webpack:///src/app/cvdsubscription/cvdsubscription-list/cvdsubscription-list.component.ts","webpack:///src/app/cvdsubscription/cvdsubscription-list/cvdsubscription-list.component.html","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component.ts","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component.html","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component.ts","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component.html","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component.ts","webpack:///src/app/cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component.html","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component.ts","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component.html","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component.ts","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component.html","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component.ts","webpack:///src/app/cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component.html","webpack:///src/app/cvduser/cvduser-detail/cvduser-detail.component.ts","webpack:///src/app/cvduser/cvduser-detail/cvduser-detail.component.html","webpack:///src/app/cvduser/cvduser-edit/cvduser-edit.component.ts","webpack:///src/app/cvduser/cvduser-edit/cvduser-edit.component.html","webpack:///src/app/cvduser/cvduser-list/cvduser-list.component.ts","webpack:///src/app/cvduser/cvduser-list/cvduser-list.component.html","webpack:///src/app/cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component.ts","webpack:///src/app/cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component.html","webpack:///src/app/cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component.ts","webpack:///src/app/cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component.html","webpack:///src/app/cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component.ts","webpack:///src/app/cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/cvdclasse.service.ts","webpack:///src/app/services/cvdcourse.service.ts","webpack:///src/app/services/cvdcoursestatu.service.ts","webpack:///src/app/services/cvddiscussion.service.ts","webpack:///src/app/services/cvdfaq.service.ts","webpack:///src/app/services/cvdfeedback.service.ts","webpack:///src/app/services/cvdlearncheck.service.ts","webpack:///src/app/services/cvdlevel.service.ts","webpack:///src/app/services/cvdoption.service.ts","webpack:///src/app/services/cvdpermission.service.ts","webpack:///src/app/services/cvdquestion.service.ts","webpack:///src/app/services/cvdrole.service.ts","webpack:///src/app/services/cvdscreen.service.ts","webpack:///src/app/services/cvdstatu.service.ts","webpack:///src/app/services/cvdsubscription.service.ts","webpack:///src/app/services/cvdtableofcontent.service.ts","webpack:///src/app/services/cvdtrainingtype.service.ts","webpack:///src/app/services/cvduser.service.ts","webpack:///src/app/services/cvdusersubscription.service.ts","webpack:///src/app/user/forgot-password/forgot-password.component.ts","webpack:///src/app/user/forgot-password/forgot-password.component.html","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/register/register.component.ts","webpack:///src/app/user/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","path","component","redirectTo","pathMatch","declarations","providers","bootstrap","appconstants","url","gblisUserLoggedin","gblLoggedinUserRole","GenericValidator","validationMessages","container","messages","controlKey","controls","hasOwnProperty","c","childMessages","processMessages","Object","assign","dirty","touched","errors","map","messageKey","errorCount","length","console","log","CvdclasseDetailComponent","objCvdlevelService","route","router","objCvdclasseService","pageTitle","errorMessage","getCvdclasse","subscribe","next","data","objCvdclasse","getCvdlevel","FCvdlevelId","error","err","navigate","isUserLoggedin","LoggedinUserName","gblLoggedinUserName","GetQueryStringParams","CvdlevelName","Name","sub","unsubscribe","paramMap","params","get","CvdclasseEditComponent","fb","displayMessage","required","minlength","maxlength","min","genericValidator","controlBlurs","formInputElements","formControl","nativeElement","CvdclasseForm","valueChanges","pipe","value","InitializeForm","getAllCvdlevel","CvdlevelList","undefined","setValue","group","minLength","maxLength","reset","patchValue","valid","p","createCvdclasse","updateCvdclasse","onSaveComplete","confirm","deleteCvdclasse","displayCvdclasse","PerformOperation","saveCvdclasse","DeleteConfirmation","read","CvdclasseListComponent","_listFilter","filteredCvdclasses","CvdclasseList","getAllCvdclasse","Id","find","r","filterBy","toLocaleLowerCase","filter","indexOf","forEach","getCvdlevelNameFromId","listFilter","performFilter","CvdcourseDetailComponent","objCvdcourseService","objCvdcourse","CvdclasseName","getCvdcourse","FCvdclassId","CvdcourseEditComponent","Description","DurationHr","DurationMin","CvdcourseForm","createCvdcourse","updateCvdcourse","deleteCvdcourse","displayCvdcourse","saveCvdcourse","CvdcourseListComponent","filteredCvdcourses","CvdcourseList","getAllCvdcourse","getCvdclasseNameFromId","CvdcoursestatuDetailComponent","objCvdstatuService","objCvduserService","objCvdcoursestatuService","getCvdcoursestatu","objCvdcoursestatu","getCvduser","FCvduserId","getCvdstatu","FCvdstatusId","FCvdcourseId","CvdcourseName","CvdstatuName","CvduserName","CvdcoursestatuEditComponent","CvdcoursestatuForm","getAllCvduser","getAllCvdstatu","CvdstatuList","CvduserList","createCvdcoursestatu","updateCvdcoursestatu","deleteCvdcoursestatu","displayCvdcoursestatu","saveCvdcoursestatu","CvdcoursestatuListComponent","filteredCvdcoursestatus","CvdcoursestatuList","getAllCvdcoursestatu","getCvdstatuNameFromId","getCvdcourseNameFromId","CvddiscussionDetailComponent","objCvddiscussionService","getCvddiscussion","objCvddiscussion","CvddiscussionEditComponent","CvddiscussionForm","createCvddiscussion","updateCvddiscussion","deleteCvddiscussion","displayCvddiscussion","saveCvddiscussion","CvddiscussionListComponent","filteredCvddiscussions","CvddiscussionList","getAllCvddiscussion","getCvduserNameFromId","CvdfaqDetailComponent","objCvdfaqService","getCvdfaq","objCvdfaq","CvdfaqEditComponent","CvdfaqForm","createCvdfaq","updateCvdfaq","deleteCvdfaq","displayCvdfaq","saveCvdfaq","CvdfaqListComponent","filteredCvdfaqs","CvdfaqList","getAllCvdfaq","CvdfeedbackDetailComponent","objCvdfeedbackService","getCvdfeedback","objCvdfeedback","CvdfeedbackEditComponent","CvdfeedbackForm","createCvdfeedback","updateCvdfeedback","deleteCvdfeedback","displayCvdfeedback","saveCvdfeedback","CvdfeedbackListComponent","filteredCvdfeedbacks","CvdfeedbackList","getAllCvdfeedback","CvdlearncheckDetailComponent","objCvdquestionService","objCvdlearncheckService","objCvdlearncheck","getCvdquestion","CvdquestionName","getCvdlearncheck","FCvdquestionId","CvdlearncheckEditComponent","Status","Totalques","CorrectAns","CvdlearncheckForm","getAllCvdquestion","CvdquestionList","createCvdlearncheck","updateCvdlearncheck","deleteCvdlearncheck","displayCvdlearncheck","saveCvdlearncheck","CvdlearncheckListComponent","filteredCvdlearnchecks","CvdlearncheckList","getAllCvdlearncheck","getCvdquestionNameFromId","CvdlevelDetailComponent","objCvdtrainingtypeService","objCvdlevel","getCvdtrainingtype","FCvdtrainingtypeId","CvdtrainingtypeName","CvdlevelEditComponent","CvdlevelForm","getAllCvdtrainingtype","CvdtrainingtypeList","createCvdlevel","updateCvdlevel","deleteCvdlevel","displayCvdlevel","saveCvdlevel","CvdlevelListComponent","filteredCvdlevels","getCvdtrainingtypeNameFromId","CvdoptionDetailComponent","objCvdoptionService","getCvdoption","objCvdoption","CvdoptionEditComponent","Answer","CvdoptionForm","createCvdoption","updateCvdoption","deleteCvdoption","displayCvdoption","saveCvdoption","CvdoptionListComponent","filteredCvdoptions","CvdoptionList","getAllCvdoption","CvdpermissionDetailComponent","objCvdroleService","objCvdpermissionService","getCvdpermission","objCvdpermission","getCvdrole","FCvdroleId","CvdroleName","CvdpermissionEditComponent","CvdpermissionForm","getAllCvdrole","CvdroleList","createCvdpermission","updateCvdpermission","deleteCvdpermission","displayCvdpermission","saveCvdpermission","CvdpermissionListComponent","filteredCvdpermissions","CvdpermissionList","getAllCvdpermission","getCvdroleNameFromId","CvdquestionDetailComponent","objCvdquestion","CvdquestionEditComponent","CvdquestionForm","createCvdquestion","updateCvdquestion","deleteCvdquestion","displayCvdquestion","saveCvdquestion","CvdquestionListComponent","filteredCvdquestions","CvdroleDetailComponent","objCvdrole","CvdroleEditComponent","CvdroleForm","createCvdrole","updateCvdrole","deleteCvdrole","displayCvdrole","saveCvdrole","CvdroleListComponent","filteredCvdroles","CvdscreenDetailComponent","objCvdscreenService","getCvdscreen","objCvdscreen","CvdscreenEditComponent","CvdscreenForm","createCvdscreen","updateCvdscreen","deleteCvdscreen","displayCvdscreen","saveCvdscreen","CvdscreenListComponent","filteredCvdscreens","CvdscreenList","getAllCvdscreen","CvdstatuDetailComponent","objCvdstatu","CvdstatuEditComponent","CvdstatuForm","createCvdstatu","updateCvdstatu","deleteCvdstatu","displayCvdstatu","saveCvdstatu","CvdstatuListComponent","filteredCvdstatus","CvdsubscriptionDetailComponent","objCvdsubscriptionService","getCvdsubscription","objCvdsubscription","CvdsubscriptionEditComponent","Price","CvdsubscriptionForm","createCvdsubscription","updateCvdsubscription","deleteCvdsubscription","displayCvdsubscription","saveCvdsubscription","CvdsubscriptionListComponent","filteredCvdsubscriptions","CvdsubscriptionList","getAllCvdsubscription","CvdtableofcontentDetailComponent","objCvdtableofcontentService","getCvdtableofcontent","objCvdtableofcontent","CvdtableofcontentEditComponent","Filepath","CvdtableofcontentForm","createCvdtableofcontent","updateCvdtableofcontent","deleteCvdtableofcontent","displayCvdtableofcontent","saveCvdtableofcontent","CvdtableofcontentListComponent","filteredCvdtableofcontents","CvdtableofcontentList","getAllCvdtableofcontent","CvdtrainingtypeDetailComponent","objCvdtrainingtype","CvdtrainingtypeEditComponent","CvdtrainingtypeForm","createCvdtrainingtype","updateCvdtrainingtype","deleteCvdtrainingtype","displayCvdtrainingtype","saveCvdtrainingtype","CvdtrainingtypeListComponent","filteredCvdtrainingtypes","CvduserDetailComponent","objCvduser","CvduserEditComponent","EmailAddress","MobileNo","Password","CvduserForm","createCvduser","updateCvduser","deleteCvduser","displayCvduser","saveCvduser","CvduserListComponent","filteredCvdusers","CvdusersubscriptionDetailComponent","objCvdusersubscriptionService","getCvdusersubscription","objCvdusersubscription","FCvdsubscriptionId","CvdsubscriptionName","CvdusersubscriptionEditComponent","CvdusersubscriptionForm","createCvdusersubscription","updateCvdusersubscription","deleteCvdusersubscription","displayCvdusersubscription","saveCvdusersubscription","CvdusersubscriptionListComponent","filteredCvdusersubscriptions","CvdusersubscriptionList","getAllCvdusersubscription","getCvdsubscriptionNameFromId","HeaderComponent","lclFProjroleId","HomeComponent","CvdclasseService","http","JSON","stringify","handleError","initializeCvdclasse","headers","post","put","ErrorEvent","message","status","body","providedIn","CvdcourseService","initializeCvdcourse","CvdcoursestatuService","initializeCvdcoursestatu","CvddiscussionService","initializeCvddiscussion","CvdfaqService","initializeCvdfaq","CvdfeedbackService","initializeCvdfeedback","CvdlearncheckService","initializeCvdlearncheck","CvdlevelService","initializeCvdlevel","CvdoptionService","initializeCvdoption","CvdpermissionService","initializeCvdpermission","CvdquestionService","initializeCvdquestion","CvdroleService","initializeCvdrole","CvdscreenService","initializeCvdscreen","CvdstatuService","initializeCvdstatu","CvdsubscriptionService","initializeCvdsubscription","CvdtableofcontentService","initializeCvdtableofcontent","CvdtrainingtypeService","initializeCvdtrainingtype","CvduserService","initializeCvduser","CvdusersubscriptionService","initializeCvdusersubscription","ForgotPasswordComponent","email","Code","cnfPassword","ForgotPasswordForm","objForgotPassword","alert","countEmailAddress","showForm","CreateCode","sendEmail","savePassword","LoginComponent","UserName","LoginForm","Count","UserId","retainCvduser","gblobjCvduser","gblLoggedinUserId","saveLogin","Cancel","RegisterComponent","userrole","NavigateToLanding","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'etutor';\n}\n","\n<div style=\"margin:20px;background-color: aqua;background-image: linear-gradient(aqua, blue);height: 900px;\">\n  <div class=\"row\">\n      \n      <div class=\"col-md-12\">\n      <div >\n                  <router-outlet></router-outlet>\n              </div></div>\n          </div>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\nimport { CvdroleDetailComponent } from './cvdrole/cvdrole-detail/cvdrole-detail.component';\nimport { CvdroleEditComponent } from './cvdrole/cvdrole-edit/cvdrole-edit.component';\nimport { CvdroleListComponent } from './cvdrole/cvdrole-list/cvdrole-list.component';\nimport { CvdscreenEditComponent } from './cvdscreen/cvdscreen-edit/cvdscreen-edit.component';\nimport { CvdscreenDetailComponent } from './cvdscreen/cvdscreen-detail/cvdscreen-detail.component';\nimport { CvdscreenListComponent } from './cvdscreen/cvdscreen-list/cvdscreen-list.component';\nimport { CvdclasseEditComponent } from './cvdclasse/cvdclasse-edit/cvdclasse-edit.component';\nimport { CvdclasseDetailComponent } from './cvdclasse/cvdclasse-detail/cvdclasse-detail.component';\nimport { CvdclasseListComponent } from './cvdclasse/cvdclasse-list/cvdclasse-list.component';\nimport { CvdcourseEditComponent } from './cvdcourse/cvdcourse-edit/cvdcourse-edit.component';\nimport { CvdcourseListComponent } from './cvdcourse/cvdcourse-list/cvdcourse-list.component';\nimport { CvdcourseDetailComponent } from './cvdcourse/cvdcourse-detail/cvdcourse-detail.component';\nimport { CvddiscussionListComponent } from './cvddiscussion/cvddiscussion-list/cvddiscussion-list.component';\nimport { CvddiscussionDetailComponent } from './cvddiscussion/cvddiscussion-detail/cvddiscussion-detail.component';\nimport { CvddiscussionEditComponent } from './cvddiscussion/cvddiscussion-edit/cvddiscussion-edit.component';\nimport { CvdfaqListComponent } from './cvdfaq/cvdfaq-list/cvdfaq-list.component';\nimport { CvdfaqDetailComponent } from './cvdfaq/cvdfaq-detail/cvdfaq-detail.component';\nimport { CvdfaqEditComponent } from './cvdfaq/cvdfaq-edit/cvdfaq-edit.component';\nimport { CvdfeedbackListComponent } from './cvdfeedback/cvdfeedback-list/cvdfeedback-list.component';\nimport { CvdfeedbackDetailComponent } from './cvdfeedback/cvdfeedback-detail/cvdfeedback-detail.component';\nimport { CvdfeedbackEditComponent } from './cvdfeedback/cvdfeedback-edit/cvdfeedback-edit.component';\nimport { CvdlearncheckListComponent } from './cvdlearncheck/cvdlearncheck-list/cvdlearncheck-list.component';\nimport { CvdlearncheckDetailComponent } from './cvdlearncheck/cvdlearncheck-detail/cvdlearncheck-detail.component';\nimport { CvdlearncheckEditComponent } from './cvdlearncheck/cvdlearncheck-edit/cvdlearncheck-edit.component';\nimport { CvdlevelListComponent } from './cvdlevel/cvdlevel-list/cvdlevel-list.component';\nimport { CvdlevelDetailComponent } from './cvdlevel/cvdlevel-detail/cvdlevel-detail.component';\nimport { CvdlevelEditComponent } from './cvdlevel/cvdlevel-edit/cvdlevel-edit.component';\nimport { CvdoptionListComponent } from './cvdoption/cvdoption-list/cvdoption-list.component';\nimport { CvdoptionDetailComponent } from './cvdoption/cvdoption-detail/cvdoption-detail.component';\nimport { CvdoptionEditComponent } from './cvdoption/cvdoption-edit/cvdoption-edit.component';\nimport { CvdpermissionListComponent } from './cvdpermission/cvdpermission-list/cvdpermission-list.component';\nimport { CvdpermissionDetailComponent } from './cvdpermission/cvdpermission-detail/cvdpermission-detail.component';\nimport { CvdpermissionEditComponent } from './cvdpermission/cvdpermission-edit/cvdpermission-edit.component';\nimport { CvdquestionListComponent } from './cvdquestion/cvdquestion-list/cvdquestion-list.component';\nimport { CvdquestionDetailComponent } from './cvdquestion/cvdquestion-detail/cvdquestion-detail.component';\nimport { CvdquestionEditComponent } from './cvdquestion/cvdquestion-edit/cvdquestion-edit.component';\nimport { CvdstatuListComponent } from './cvdstatu/cvdstatu-list/cvdstatu-list.component';\nimport { CvdstatuDetailComponent } from './cvdstatu/cvdstatu-detail/cvdstatu-detail.component';\nimport { CvdstatuEditComponent } from './cvdstatu/cvdstatu-edit/cvdstatu-edit.component';\nimport { CvdsubscriptionListComponent } from './cvdsubscription/cvdsubscription-list/cvdsubscription-list.component';\nimport { CvdsubscriptionDetailComponent } from './cvdsubscription/cvdsubscription-detail/cvdsubscription-detail.component';\nimport { CvdsubscriptionEditComponent } from './cvdsubscription/cvdsubscription-edit/cvdsubscription-edit.component';\nimport { CvdtableofcontentListComponent } from './cvdtableofcontent/cvdtableofcontent-list/cvdtableofcontent-list.component';\nimport { CvdtableofcontentDetailComponent } from './cvdtableofcontent/cvdtableofcontent-detail/cvdtableofcontent-detail.component';\nimport { CvdtableofcontentEditComponent } from './cvdtableofcontent/cvdtableofcontent-edit/cvdtableofcontent-edit.component';\nimport { CvdtrainingtypeListComponent } from './cvdtrainingtype/cvdtrainingtype-list/cvdtrainingtype-list.component';\nimport { CvdtrainingtypeDetailComponent } from './cvdtrainingtype/cvdtrainingtype-detail/cvdtrainingtype-detail.component';\nimport { CvdtrainingtypeEditComponent } from './cvdtrainingtype/cvdtrainingtype-edit/cvdtrainingtype-edit.component';\nimport { CvduserListComponent } from './cvduser/cvduser-list/cvduser-list.component';\nimport { CvduserDetailComponent } from './cvduser/cvduser-detail/cvduser-detail.component';\nimport { CvduserEditComponent } from './cvduser/cvduser-edit/cvduser-edit.component';\nimport { CvdusersubscriptionListComponent } from './cvdusersubscription/cvdusersubscription-list/cvdusersubscription-list.component';\nimport { CvdusersubscriptionDetailComponent } from './cvdusersubscription/cvdusersubscription-detail/cvdusersubscription-detail.component';\nimport { CvdusersubscriptionEditComponent } from './cvdusersubscription/cvdusersubscription-edit/cvdusersubscription-edit.component';\nimport { CvdcoursestatuListComponent } from './cvdcoursestatu/cvdcoursestatu-list/cvdcoursestatu-list.component';\nimport { CvdcoursestatuDetailComponent } from './cvdcoursestatu/cvdcoursestatu-detail/cvdcoursestatu-detail.component';\nimport { CvdcoursestatuEditComponent } from './cvdcoursestatu/cvdcoursestatu-edit/cvdcoursestatu-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoginComponent,\n    ForgotPasswordComponent,\n    RegisterComponent,\n    HeaderComponent,\n    CvdroleDetailComponent,\n    CvdroleEditComponent,\n    CvdroleListComponent,\n    CvdclasseListComponent,\n    CvdclasseDetailComponent,\n    CvdclasseEditComponent,\n    CvdcourseListComponent,\n    CvdcourseDetailComponent,\n    CvdcourseEditComponent,\n    CvdscreenListComponent,\n    CvdscreenDetailComponent,\n    CvdscreenEditComponent,\n    CvddiscussionListComponent,\n    CvddiscussionDetailComponent,\n    CvddiscussionEditComponent,\n    CvdfaqListComponent,\n    CvdfaqDetailComponent,\n    CvdfaqEditComponent,\n    CvdfeedbackListComponent,\n    CvdfeedbackDetailComponent,\n    CvdfeedbackEditComponent,\n    CvdlearncheckListComponent,\n    CvdlearncheckDetailComponent,\n    CvdlearncheckEditComponent,\n    CvdlevelListComponent,\n    CvdlevelDetailComponent,\n    CvdlevelEditComponent,\n    CvdoptionListComponent,\n    CvdoptionDetailComponent,\n    CvdoptionEditComponent,\n    CvdpermissionListComponent,\n    CvdpermissionDetailComponent,\n    CvdpermissionEditComponent,\n    CvdquestionListComponent,\n    CvdquestionDetailComponent,\n    CvdquestionEditComponent,\n    CvdstatuListComponent,\n    CvdstatuDetailComponent,\n    CvdstatuEditComponent,\n    CvdsubscriptionListComponent,\n    CvdsubscriptionDetailComponent,\n    CvdsubscriptionEditComponent,\n    CvdtableofcontentListComponent,\n    CvdtableofcontentDetailComponent,\n    CvdtableofcontentEditComponent,\n    CvdtrainingtypeListComponent,\n    CvdtrainingtypeDetailComponent,\n    CvdtrainingtypeEditComponent,\n    CvduserListComponent,\n    CvduserDetailComponent,\n    CvduserEditComponent,\n    CvdusersubscriptionListComponent,\n    CvdusersubscriptionDetailComponent,\n    CvdusersubscriptionEditComponent,\n    CvdcoursestatuListComponent,\n    CvdcoursestatuDetailComponent,\n    CvdcoursestatuEditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule, \n    HttpClientModule,\n    RouterModule.forRoot([\n       { path: 'Cvdusersubscriptions', component: CvdusersubscriptionListComponent },\n       { path: 'Cvdusersubscriptions/:id', component: CvdusersubscriptionDetailComponent },\n       {\n       path: 'Cvdusersubscriptions/:id/edit',\n       //canDeactivate: [CvdusersubscriptionEditGuard],\n       component: CvdusersubscriptionEditComponent\n       },\n      { path: 'Cvdusers', component: CvduserListComponent },\n       { path: 'Cvdusers/:id', component: CvduserDetailComponent },\n       {\n       path: 'Cvdusers/:id/edit',\n       //canDeactivate: [CvduserEditGuard],\n       component: CvduserEditComponent\n       },\n      { path: 'Cvdtrainingtypes', component: CvdtrainingtypeListComponent },\n       { path: 'Cvdtrainingtypes/:id', component: CvdtrainingtypeDetailComponent },\n       {\n       path: 'Cvdtrainingtypes/:id/edit',\n       //canDeactivate: [CvdtrainingtypeEditGuard],\n       component: CvdtrainingtypeEditComponent\n       },\n      { path: 'Cvdtableofcontents', component: CvdtableofcontentListComponent },\n       { path: 'Cvdtableofcontents/:id', component: CvdtableofcontentDetailComponent },\n       {\n       path: 'Cvdtableofcontents/:id/edit',\n       //canDeactivate: [CvdtableofcontentEditGuard],\n       component: CvdtableofcontentEditComponent\n       },\n      { path: 'Cvdsubscriptions', component: CvdsubscriptionListComponent },\n       { path: 'Cvdsubscriptions/:id', component: CvdsubscriptionDetailComponent },\n       {\n       path: 'Cvdsubscriptions/:id/edit',\n       //canDeactivate: [CvdsubscriptionEditGuard],\n       component: CvdsubscriptionEditComponent\n       },\n      { path: 'Cvdstatus', component: CvdstatuListComponent },\n       { path: 'Cvdstatus/:id', component: CvdstatuDetailComponent },\n       {\n       path: 'Cvdstatus/:id/edit',\n       //canDeactivate: [CvdstatuEditGuard],\n       component: CvdstatuEditComponent\n       },\n      { path: 'Cvdquestions', component: CvdquestionListComponent },\n       { path: 'Cvdquestions/:id', component: CvdquestionDetailComponent },\n       {\n       path: 'Cvdquestions/:id/edit',\n       //canDeactivate: [CvdquestionEditGuard],\n       component: CvdquestionEditComponent\n       },\n      { path: 'Cvdpermissions', component: CvdpermissionListComponent },\n       { path: 'Cvdpermissions/:id', component: CvdpermissionDetailComponent },\n       {\n       path: 'Cvdpermissions/:id/edit',\n       //canDeactivate: [CvdpermissionEditGuard],\n       component: CvdpermissionEditComponent\n       },\n { path: 'Cvdoptions', component: CvdoptionListComponent },\n { path: 'Cvdoptions/:id', component: CvdoptionDetailComponent },\n {\n path: 'Cvdoptions/:id/edit',\n //canDeactivate: [CvdoptionEditGuard],\n component: CvdoptionEditComponent\n }, \n       { path: 'Cvdlevels', component: CvdlevelListComponent },\n       { path: 'Cvdlevels/:id', component: CvdlevelDetailComponent },\n       {\n       path: 'Cvdlevels/:id/edit',\n       //canDeactivate: [CvdlevelEditGuard],\n       component: CvdlevelEditComponent\n       },\n       { path: 'Cvdlearnchecks', component: CvdlearncheckListComponent },\n       { path: 'Cvdlearnchecks/:id', component: CvdlearncheckDetailComponent },\n       {\n       path: 'Cvdlearnchecks/:id/edit',\n       //canDeactivate: [CvdlearncheckEditGuard],\n       component: CvdlearncheckEditComponent\n       },\n       { path: 'Cvdfeedbacks', component: CvdfeedbackListComponent },\n       { path: 'Cvdfeedbacks/:id', component: CvdfeedbackDetailComponent },\n       {\n       path: 'Cvdfeedbacks/:id/edit',\n       //canDeactivate: [CvdfeedbackEditGuard],\n       component: CvdfeedbackEditComponent\n       },\n       { path: 'Cvdfaqs', component: CvdfaqListComponent },\n       { path: 'Cvdfaqs/:id', component: CvdfaqDetailComponent },\n       {\n       path: 'Cvdfaqs/:id/edit',\n       //canDeactivate: [CvdfaqEditGuard],\n       component: CvdfaqEditComponent\n       },\n       { path: 'Cvddiscussions', component: CvddiscussionListComponent },\n       { path: 'Cvddiscussions/:id', component: CvddiscussionDetailComponent },\n       {\n       path: 'Cvddiscussions/:id/edit',\n       //canDeactivate: [CvddiscussionEditGuard],\n       component: CvddiscussionEditComponent\n       },\n        { path: 'Cvdcoursestatus', component: CvdcoursestatuListComponent },\n        { path: 'Cvdcoursestatus/:id', component: CvdcoursestatuDetailComponent },\n        {\n        path: 'Cvdcoursestatus/:id/edit',\n        //canDeactivate: [CvdcoursestatuEditGuard],\n        component: CvdcoursestatuEditComponent\n        },\n       { path: 'Cvdcourses', component: CvdcourseListComponent },\n       { path: 'Cvdcourses/:id', component: CvdcourseDetailComponent },\n       {\n       path: 'Cvdcourses/:id/edit',\n       //canDeactivate: [CvdcourseEditGuard],\n       component: CvdcourseEditComponent\n       },\n       { path: 'Cvdclasses', component: CvdclasseListComponent },\n       { path: 'Cvdclasses/:id', component: CvdclasseDetailComponent },\n       {\n       path: 'Cvdclasses/:id/edit',\n       //canDeactivate: [CvdclasseEditGuard],\n       component: CvdclasseEditComponent\n       },      \n       { path: 'Cvdscreens', component: CvdscreenListComponent },\n       { path: 'Cvdscreens/:id', component: CvdscreenDetailComponent },\n       {\n       path: 'Cvdscreens/:id/edit',\n       //canDeactivate: [CvdscreenEditGuard],\n       component: CvdscreenEditComponent\n       },\n      { path: 'Cvdroles', component: CvdroleListComponent },\n      { path: 'Cvdroles/:id', component: CvdroleDetailComponent },\n      {\n        path: 'Cvdroles/:id/edit',\n        //canDeactivate: [ProjroleEditGuard],\n        component: CvdroleEditComponent\n      },\n      { path: 'logins', component: LoginComponent },\n      { path: 'registers', component: RegisterComponent },\n      { path: \"forgotpasswords\", component: ForgotPasswordComponent },\n      { path: 'homes', component: HomeComponent },\n      { path: '', redirectTo: 'homes', pathMatch: 'full' },\n      { path: '**', redirectTo: 'homes', pathMatch: 'full' }\n\n    ]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Cvduser } from '../models/cvduser';\n\nexport class appconstants {\n    public static url: string = \"http://localhost:53931/api/\";\n    public static gblisUserLoggedin: boolean = false;\n    public static gblLoggedinUserName: string;\n    public static gblLoggedinUserId: number;\n    public static gblLoggedinUserRole: number = 0;\n  static gblobjCvduser: Cvduser;\n    //public static gblobjCustomer: Cvduser;\n}\n\n\n","import { FormGroup } from '@angular/forms';\n\nexport class GenericValidator {\n\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n    }\n\n    processMessages(container: FormGroup): { [key: string]: string } {\n        const messages = {};\n        for (const controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                const c = container.controls[controlKey];\n                if (c instanceof FormGroup) {\n                    const childMessages = this.processMessages(c);\n                    Object.assign(messages, childMessages);\n                } else {\n                    if (this.validationMessages[controlKey]) {\n                        messages[controlKey] = '';\n                        if ((c.dirty || c.touched) && c.errors) {\n                            Object.keys(c.errors).map(messageKey => {\n                                if (this.validationMessages[controlKey][messageKey]) {\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return messages;\n    }\n\n    getErrorCount(container: FormGroup): number {\n        let errorCount = 0;\n        for (const controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                if (container.controls[controlKey].errors) {\n                    errorCount += Object.keys(container.controls[controlKey].errors).length;\n                    console.log(errorCount);\n                }\n            }\n        }\n        return errorCount;\n    }\n}","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\n\n@Component({\n  selector: 'app-classe-detail',\n  templateUrl: './cvdclasse-detail.component.html',\n  styleUrls: ['./cvdclasse-detail.component.css']\n})\nexport class CvdclasseDetailComponent implements OnDestroy, OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  pageTitle: string = 'Class Detail';\n  errorMessage = '';\n  objCvdclasse: Cvdclasse | undefined;\n\n  constructor(private objCvdlevelService: CvdlevelService, private route: ActivatedRoute,\n    private router: Router,\n    private objCvdclasseService: CvdclasseService) { }\n\n\n  getCvdclasse(id: number) {\n    this.objCvdclasseService.getCvdclasse(id).subscribe({\n      next: (data: Cvdclasse) => {\n        this.objCvdclasse = data;\n        this.getCvdlevel(this.objCvdclasse.FCvdlevelId);\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/Cvdclasses']);\n  }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n    this.GetQueryStringParams();\n  }\n\n\n  getCvdlevel(id: number): void {\n    this.objCvdlevelService.getCvdlevel(id)\n      .subscribe({\n        next: (data) => this.objCvdclasse.CvdlevelName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  private sub: Subscription;\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  GetQueryStringParams() {\n    this.sub = this.route.paramMap.subscribe(\n      params => {\n        const id = +params.get('id');\n        this.getCvdclasse(id);\n      }\n    );\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdclasse\">\n    {{pageTitle + \": \" + objCvdclasse.Name}}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdclasse\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdclasse.Name }}</div>\n        </div>\n        <div  class=\"row\">\n          <div class=\"col-md-3\">Level Name</div>\n          <div class=\"col-md-6\">{{ objCvdclasse.CvdlevelName }}</div>\n        </div>\n      </div>\n     \n    </div>\n    \n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdclasses', objCvdclasse.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\n\n@Component({\n selector: 'app-classe-edit', \n templateUrl: './cvdclasse-edit.component.html',\n styleUrls: ['./cvdclasse-edit.component.css']\n})\nexport class CvdclasseEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdclasseForm: FormGroup;\n objCvdclasse: Cvdclasse;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdclasseForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdclasseForm);\n });\n }\n\n constructor(\n  private objCvdlevelService: CvdlevelService,private route: ActivatedRoute, private router: Router, private objCvdclasseService: CvdclasseService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n  FCvdlevelId: {\n  min: 'This field is required'\n  },\n \n \n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdlevel(); \n  }\n  // ngoninit\n  \n  CvdlevelList: Cvdlevel[];\n  getAllCvdlevel() {\n    this.objCvdlevelService.getAllCvdlevel().subscribe({\n     next: data => {\n        this.CvdlevelList = data;\n        if(this.CvdclasseForm.controls.FCvdlevelId.value===undefined)\n           this.CvdclasseForm.controls.FCvdlevelId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdclasse(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdclasseForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdlevelId: [0, Validators.min(1)],\n \n\n   \n\n});\n}\n\n displayCvdclasse(objCvdclasse: Cvdclasse): void {\n if (this.CvdclasseForm) {\n this.CvdclasseForm.reset();\n }\n this.objCvdclasse = objCvdclasse;\n\n if (this.objCvdclasse.id === 0) {\n this.pageTitle = 'Add Class';\n } else {\n this.pageTitle = `Edit Class: ${this.objCvdclasse.Name  }`;\n }\n\n this.CvdclasseForm.patchValue({\n  Name: this.objCvdclasse.Name,\n  \n FCvdlevelId: this.objCvdclasse.FCvdlevelId\n\n\n });\n }\n\n saveCvdclasse(): void {\n if (this.CvdclasseForm.valid) {\n if (this.CvdclasseForm.dirty) {\n const p = { ...this.objCvdclasse, ...this.CvdclasseForm.value };\n\n if (p.id === 0) {\n this.createCvdclasse(p);\n } else {\n this.updateCvdclasse(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdclasse.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdclasse(this.objCvdclasse.id)\n }\n }\n }\n\n PerformOperation(data: Cvdclasse): void { \n this.displayCvdclasse(data);\n }\n getCvdclasse(id: number): void {\n this.objCvdclasseService.getCvdclasse(id)\n .subscribe({\n next: (data: Cvdclasse) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdclasse(p: Cvdclasse): void\n {\n this.objCvdclasseService.createCvdclasse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdclasse(p: Cvdclasse): void\n {\n this.objCvdclasseService.updateCvdclasse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdclasse(id: number): void {\n this.objCvdclasseService.deleteCvdclasse(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdclasseForm.reset();\n this.router.navigate(['/Cvdclasses']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdclasse()\"\n          [formGroup]=\"CvdclasseForm\">\n          \n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdlevelId\" >Select Level</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdlevelId\" formControlName=\"FCvdlevelId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdlevelId}\">\n      <option [value]='0' selected>Select Level...</option>\"\n      <option *ngFor=\"let lstCvdlevel of CvdlevelList\"\n      [value]=\"lstCvdlevel.id\">{{lstCvdlevel.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdlevelId}}\n      </span>\n      </div>\n      </div>\n\n            \n\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdclasseForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdclasseForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdclasses']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\n\n@Component({\n   selector: 'app-classe-list',\n   templateUrl: './cvdclasse-list.component.html',\n   styleUrls: ['./cvdclasse-list.component.css']\n})\nexport class CvdclasseListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdlevelService: CvdlevelService, private objCvdclasseService: CvdclasseService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdlevel();\n   }\n\n\n   CvdlevelList: Cvdlevel[];\n   getAllCvdlevel() {\n      this.objCvdlevelService.getAllCvdlevel().subscribe({\n         next: data => {\n            this.CvdlevelList = data;\n            this.getAllCvdclasse();\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n\n   getCvdlevelNameFromId(Id: Number): string {\n      return this.CvdlevelList.find(r => r.id === Id).Name;\n   }\n\n   errorMessage: any;\n   pageTitle: string = \"Class List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdclasses = this.listFilter ? this.performFilter(this.listFilter) : this.CvdclasseList;\n   }\n\n   filteredCvdclasses: Cvdclasse[] = [];\n   CvdclasseList: Cvdclasse[] = [];\n\n   performFilter(filterBy: string): Cvdclasse[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdclasseList.filter((data: Cvdclasse) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdclasse() {\n      this.objCvdclasseService.getAllCvdclasse().subscribe({\n         next: data => {\n            this.CvdclasseList = data;\n            this.CvdclasseList.forEach(r => r.CvdlevelName = this.getCvdlevelNameFromId(r.FCvdlevelId));\n            this.filteredCvdclasses = this.CvdclasseList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdclasses', 0, 'edit']\">\n        Add Class\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdclasseList && CvdclasseList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Level Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdclasse of filteredCvdclasses\">\n            <td>\n              <a [routerLink]=\"['/Cvdclasses', itrCvdclasse.id]\">\n                {{ itrCvdclasse.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdclasse.CvdlevelName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdclasses', itrCvdclasse.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\n\n@Component({\n  selector: 'app-cvdcourse-detail',\n  templateUrl: './cvdcourse-detail.component.html',\n  styleUrls: ['./cvdcourse-detail.component.css']\n})\nexport class CvdcourseDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Course Detail';\n errorMessage = '';\n objCvdcourse: Cvdcourse | undefined;\n\nconstructor( private objCvdclasseService: CvdclasseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdcourseService: CvdcourseService) { }\n\n   getCvdclasse(id: number): void {\n     this.objCvdclasseService.getCvdclasse(id)\n       .subscribe({\n         next: (data) => this.objCvdcourse.CvdclasseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n getCvdcourse(id: number) {\n this.objCvdcourseService.getCvdcourse(id).subscribe({\n  next: (data: Cvdcourse) => {\n    this.objCvdcourse = data;\n    this.getCvdclasse(this.objCvdcourse.FCvdclassId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdcourses']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdcourse(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdcourse\">\n    {{pageTitle + \": \" + objCvdcourse.Name}}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdcourse\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdcourse.Name }}</div>\n        </div>\n           \n      <div class=\"row\">\n        <div class=\"col-md-3\">Description</div>\n        <div class=\"col-md-6\">{{ objCvdcourse.Description }}</div>\n      </div>\n      <div class=\"row\"><div class=\"col-md-3\">Duration Hour</div><div class=\"col-md-6\">{{ objCvdcourse.DurationHr }}</div></div>\n      <div class=\"row\"><div class=\"col-md-3\">Duration Minute</div><div class=\"col-md-6\">{{ objCvdcourse.DurationMin }}</div></div>\n      <div class=\"row\"><div class=\"col-md-3\">CvdclasseName</div><div class=\"col-md-6\">{{ objCvdcourse.CvdclasseName }}</div></div>\n    </div>\n  </div>\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdcourses', objCvdcourse.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\n\n@Component({\n selector: 'app-cvdcourse-edit', \n templateUrl: './cvdcourse-edit.component.html',\n styleUrls: ['./cvdcourse-edit.component.css']\n})\nexport class CvdcourseEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdcourseForm: FormGroup;\n objCvdcourse: Cvdcourse;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdcourseForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdcourseForm);\n });\n }\n\n constructor(private objCvdclasseService: CvdclasseService, private route: ActivatedRoute, private router: Router, private objCvdcourseService: CvdcourseService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n  Description: {\n  required: 'This field is required'\n  },\n  DurationHr: {\n  required: 'This field is required'\n  },\n DurationMin: {\n required: 'This field is required'\n },\n\n \n\n FCvdclassId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdclasse();\n  }\n\n   \n  \n  CvdclasseList: Cvdclasse[];\n  getAllCvdclasse() {\n    this.objCvdclasseService.getAllCvdclasse().subscribe({\n     next: data => {\n        this.CvdclasseList = data;\n        if(this.CvdcourseForm.controls.FCvdclassId.value===undefined)\n           this.CvdcourseForm.controls.FCvdclassId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  } \n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdcourse(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdcourseForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Description: ['', Validators.required],\n    DurationHr: ['', Validators.required],\n    DurationMin: ['', Validators.required],\n    FCvdclassId: [0, Validators.min(1)],    \n\n  });\n}\n\n displayCvdcourse(objCvdcourse: Cvdcourse): void {\n if (this.CvdcourseForm) {\n this.CvdcourseForm.reset();\n }\n this.objCvdcourse = objCvdcourse;\n\n if (this.objCvdcourse.id === 0) {\n this.pageTitle = 'Add Course';\n } else {\n this.pageTitle = `Edit Course: ${this.objCvdcourse.Name  }`;\n }\n\n this.CvdcourseForm.patchValue({\n  Name: this.objCvdcourse.Name\n  ,Description: this.objCvdcourse.Description\n  ,DurationHr: this.objCvdcourse.DurationHr\n  ,DurationMin: this.objCvdcourse.DurationMin,\n  FCvdclassId: this.objCvdcourse.FCvdclassId\n \n\n});\n }\n\n saveCvdcourse(): void {\n if (this.CvdcourseForm.valid) {\n if (this.CvdcourseForm.dirty) {\n const p = { ...this.objCvdcourse, ...this.CvdcourseForm.value };\n\n if (p.id === 0) {\n this.createCvdcourse(p);\n } else {\n this.updateCvdcourse(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdcourse.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdcourse(this.objCvdcourse.id)\n }\n }\n }\n\n PerformOperation(data: Cvdcourse): void { \n this.displayCvdcourse(data);\n }\n getCvdcourse(id: number): void {\n this.objCvdcourseService.getCvdcourse(id)\n .subscribe({\n next: (data: Cvdcourse) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdcourse(p: Cvdcourse): void\n {\n this.objCvdcourseService.createCvdcourse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdcourse(p: Cvdcourse): void\n {\n this.objCvdcourseService.updateCvdcourse(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdcourse(id: number): void {\n this.objCvdcourseService.deleteCvdcourse(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdcourseForm.reset();\n this.router.navigate(['/Cvdcourses']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdcourse()\"\n          [formGroup]=\"CvdcourseForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DescriptionId\">Description</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DescriptionId\"\n                             type=\"text\"\n                             placeholder=\"Description (required)\"\n                             formControlName=\"Description\"\n                             [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.Description}}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DurationHrId\">Hour</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DurationHrId\"\n                             type=\"text\"\n                             placeholder=\"Duration Hour (required)\"\n                             formControlName=\"DurationHr\"\n                             [ngClass]=\"{'is-invalid': displayMessage.DurationHr}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.DurationHr}}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"DurationMinId\">Minute</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"DurationMinId\"\n                             type=\"text\"\n                             placeholder=\"Duration Minute (required)\"\n                             formControlName=\"DurationMin\"\n                             [ngClass]=\"{'is-invalid': displayMessage.DurationMin}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.DurationMin}}\n                      </span>\n                    </div>\n                  </div>\n            \n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdclassId\" >Select Class</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdclassId\" formControlName=\"FCvdclassId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdclassId}\">\n      <option [value]='0' selected>Select Class...</option>\"\n      <option *ngFor=\"let lstCvdclasse of CvdclasseList\"\n      [value]=\"lstCvdclasse.id\">{{lstCvdclasse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdclassId}}\n      </span>\n      </div>\n      </div>  \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdcourseForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdcourseForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdcourses']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdclasseService } from 'src/app/services/cvdclasse.service';\nimport { Cvdclasse } from 'src/app/models/cvdclasse';\n\n@Component({\n selector: 'app-cvdcourse-list',\n templateUrl: './cvdcourse-list.component.html',\n styleUrls: ['./cvdcourse-list.component.css']\n})\nexport class CvdcourseListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdclasseService: CvdclasseService,private objCvdcourseService: CvdcourseService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdclasse();\n}\n\n \n  CvdclasseList: Cvdclasse[];\n  getAllCvdclasse() {\n    this.objCvdclasseService.getAllCvdclasse().subscribe({\n      next: data => {\n        this.CvdclasseList = data;\n        this.getAllCvdcourse();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdclasseNameFromId(Id: Number): string {\n    return this.CvdclasseList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Course List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdcourses = this.listFilter ? this.performFilter(this.listFilter) : this.CvdcourseList;\n }\n\n filteredCvdcourses: Cvdcourse[] = [];\n CvdcourseList: Cvdcourse[] = [];\n\n performFilter(filterBy: string): Cvdcourse[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdcourseList.filter((data: Cvdcourse) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdcourse() {\n this.objCvdcourseService.getAllCvdcourse().subscribe({\n next: data => {\n this.CvdcourseList = data;\n this.CvdcourseList.forEach(r=>r.CvdclasseName = this.getCvdclasseNameFromId(r.FCvdclassId));\n this.filteredCvdcourses = this.CvdcourseList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdcourses', 0, 'edit']\">\n        Add Course\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdcourseList && CvdcourseList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Video Length</th> \n            <th>Class Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdcourse of filteredCvdcourses\">\n            <td>\n              <a [routerLink]=\"['/Cvdcourses', itrCvdcourse.id]\">\n                {{ itrCvdcourse.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdcourse.Description }}</td>\n            <td>{{ itrCvdcourse.DurationHr + \" : \" + itrCvdcourse.DurationMin }}</td>\n            <td>{{ itrCvdcourse.CvdclasseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdcourses', itrCvdcourse.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdcoursestatu-detail',\n  templateUrl: './cvdcoursestatu-detail.component.html',\n  styleUrls: ['./cvdcoursestatu-detail.component.css']\n})\nexport class CvdcoursestatuDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Course Status Detail';\n errorMessage = '';\n objCvdcoursestatu: Cvdcoursestatu | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private objCvdstatuService: CvdstatuService,\n  private objCvduserService: CvduserService,private route: ActivatedRoute,\n private router: Router,\n private objCvdcoursestatuService: CvdcoursestatuService) { }\n\n\n getCvdcoursestatu(id: number) {\n this.objCvdcoursestatuService.getCvdcoursestatu(id).subscribe({\n  next: (data: Cvdcoursestatu) => {\n    this.objCvdcoursestatu = data;\n    this.getCvduser(this.objCvdcoursestatu.FCvduserId);\n    this.getCvdstatu(this.objCvdcoursestatu.FCvdstatusId);\n    this.getCvdcourse(this.objCvdcoursestatu.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  getCvdstatu(id: number): void {\n    this.objCvdstatuService.getCvdstatu(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvdstatuName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n\n       \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdcoursestatu.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n \n\n onBack(): void {\n this.router.navigate(['/Cvdcoursestatus']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdcoursestatu(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdcoursestatu\">\n    {{pageTitle + \": \" + objCvdcoursestatu.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdcoursestatu\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdcoursestatu.Name }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            CvduserName</div>\n            <div class=\"col-md-6\">{{ objCvdcoursestatu.CvduserName }}</div>\n          </div>\n          <div class=\"row\"><div class=\"col-md-3\">Status Name</div><div class=\"col-md-6\">{{ objCvdcoursestatu.CvdstatuName }}</div></div>\n          <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdcoursestatu.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdcoursestatus', objCvdcoursestatu.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n selector: 'app-cvdcoursestatu-edit', \n templateUrl: './cvdcoursestatu-edit.component.html',\n styleUrls: ['./cvdcoursestatu-edit.component.css']\n})\nexport class CvdcoursestatuEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdcoursestatuForm: FormGroup;\n objCvdcoursestatu: Cvdcoursestatu;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdcoursestatuForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdcoursestatuForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private objCvdstatuService: CvdstatuService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdcoursestatuService: CvdcoursestatuService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n FCvdstatusId: {\n min: 'This field is required'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdstatu(); \n    this.getAllCvdcourse(); \n  }\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdcoursestatuForm.controls.FCvdcourseId.value===undefined)\n           this.CvdcoursestatuForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n\nCvdstatuList: Cvdstatu[];\ngetAllCvdstatu() {\n  this.objCvdstatuService.getAllCvdstatu().subscribe({\n   next: data => {\n      this.CvdstatuList = data;\n      if(this.CvdcoursestatuForm.controls.FCvdstatusId.value===undefined)\n         this.CvdcoursestatuForm.controls.FCvdstatusId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n   \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdcoursestatuForm.controls.FCvduserId.value===undefined)\n           this.CvdcoursestatuForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdcoursestatu(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdcoursestatuForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvduserId: [0, Validators.min(1)],\n    FCvdstatusId: [0, Validators.min(1)],\n    FCvdcourseId: [0, Validators.min(1)],\n\n    \n    \n\n   \n\n});\n}\n\n displayCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): void {\n if (this.CvdcoursestatuForm) {\n this.CvdcoursestatuForm.reset();\n }\n this.objCvdcoursestatu = objCvdcoursestatu;\n\n if (this.objCvdcoursestatu.id === 0) {\n this.pageTitle = 'Add Course Status';\n } else {\n this.pageTitle = `Edit Course Status: ${this.objCvdcoursestatu.Name  }`;\n }\n\n this.CvdcoursestatuForm.patchValue({\n  Name: this.objCvdcoursestatu.Name,\n  FCvduserId: this.objCvdcoursestatu.FCvduserId,\n  FCvdstatusId: this.objCvdcoursestatu.FCvdstatusId,\n  FCvdcourseId: this.objCvdcoursestatu.FCvdcourseId\n\n\n\n\n\n });\n }\n\n saveCvdcoursestatu(): void {\n if (this.CvdcoursestatuForm.valid) {\n if (this.CvdcoursestatuForm.dirty) {\n const p = { ...this.objCvdcoursestatu, ...this.CvdcoursestatuForm.value };\n\n if (p.id === 0) {\n this.createCvdcoursestatu(p);\n } else {\n this.updateCvdcoursestatu(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdcoursestatu.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdcoursestatu(this.objCvdcoursestatu.id)\n }\n }\n }\n\n PerformOperation(data: Cvdcoursestatu): void { \n this.displayCvdcoursestatu(data);\n }\n getCvdcoursestatu(id: number): void {\n this.objCvdcoursestatuService.getCvdcoursestatu(id)\n .subscribe({\n next: (data: Cvdcoursestatu) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdcoursestatu(p: Cvdcoursestatu): void\n {\n this.objCvdcoursestatuService.createCvdcoursestatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdcoursestatu(p: Cvdcoursestatu): void\n {\n this.objCvdcoursestatuService.updateCvdcoursestatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdcoursestatu(id: number): void {\n this.objCvdcoursestatuService.deleteCvdcoursestatu(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdcoursestatuForm.reset();\n this.router.navigate(['/Cvdcoursestatus']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvdcoursestatu()\"\n      [formGroup]=\"CvdcoursestatuForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvduserId\">Select User</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\" [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdstatusId\">Select Statu</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdstatusId\" formControlName=\"FCvdstatusId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdstatusId}\">\n            <option [value]='0' selected>Select Statu...</option>\"\n            <option *ngFor=\"let lstCvdstatu of CvdstatuList\" [value]=\"lstCvdstatu.id\">{{lstCvdstatu.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdstatusId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdcourseId\">Select Course</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\" [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvdcoursestatuForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvdcoursestatuForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdcoursestatus']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdcoursestatuService } from 'src/app/services/cvdcoursestatu.service';\nimport { Cvdcoursestatu } from 'src/app/models/cvdcoursestatu';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdcoursestatu-list',\n   templateUrl: './cvdcoursestatu-list.component.html',\n   styleUrls: ['./cvdcoursestatu-list.component.css']\n})\nexport class CvdcoursestatuListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdstatuService: CvdstatuService, private objCvdcoursestatuService: CvdcoursestatuService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdstatu();\n   }\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdcoursestatu();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  } \n     \n     CvdstatuList: Cvdstatu[];\n     getAllCvdstatu() {\n       this.objCvdstatuService.getAllCvdstatu().subscribe({\n         next: data => {\n           this.CvdstatuList = data;\n           this.getAllCvdcourse();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdstatuNameFromId(Id: Number): string {\n       return this.CvdstatuList.find(r=>r.id===Id).Name;\n     }\n   errorMessage: any;\n   pageTitle: string = \"Course Status List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdcoursestatus = this.listFilter ? this.performFilter(this.listFilter) : this.CvdcoursestatuList;\n   }\n\n   filteredCvdcoursestatus: Cvdcoursestatu[] = [];\n   CvdcoursestatuList: Cvdcoursestatu[] = [];\n\n   performFilter(filterBy: string): Cvdcoursestatu[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdcoursestatuList.filter((data: Cvdcoursestatu) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdcoursestatu() {\n      this.objCvdcoursestatuService.getAllCvdcoursestatu().subscribe({\n         next: data => {\n            this.CvdcoursestatuList = data;\n            this.CvdcoursestatuList.forEach(r=>r.CvdstatuName = this.getCvdstatuNameFromId(r.FCvdstatusId));\n            this.CvdcoursestatuList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.filteredCvdcoursestatus = this.CvdcoursestatuList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdcoursestatus', 0, 'edit']\">\n        Add Course Status\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdcoursestatuList && CvdcoursestatuList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Status Name</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdcoursestatu of filteredCvdcoursestatus\">\n            <td>\n              <a [routerLink]=\"['/Cvdcoursestatus', itrCvdcoursestatu.id]\">\n                {{ itrCvdcoursestatu.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdcoursestatu.CvdstatuName }}</td>\n            <td>{{ itrCvdcoursestatu.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdcoursestatus', itrCvdcoursestatu.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvddiscussion-detail',\n  templateUrl: './cvddiscussion-detail.component.html',\n  styleUrls: ['./cvddiscussion-detail.component.css']\n})\nexport class CvddiscussionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Discussion Detail';\n errorMessage = '';\n objCvddiscussion: Cvddiscussion | undefined;\n\nconstructor(private objCvduserService: CvduserService,private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvddiscussionService: CvddiscussionService) { }\n\n\n getCvddiscussion(id: number) {\n this.objCvddiscussionService.getCvddiscussion(id).subscribe({\n  next: (data: Cvddiscussion) => {\n    this.objCvddiscussion = data;\n    this.getCvdcourse(this.objCvddiscussion.FCvdcourseId);\n    this.getCvduser(this.objCvddiscussion.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n\n       \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvddiscussion.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n \n        \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvddiscussion.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvddiscussions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvddiscussion(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvddiscussion\">\n    {{pageTitle + \": \" + objCvddiscussion.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvddiscussion\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvddiscussion.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvddiscussion.CvdcourseName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvddiscussion.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvddiscussions', objCvddiscussion.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvddiscussion-edit', \n templateUrl: './cvddiscussion-edit.component.html',\n styleUrls: ['./cvddiscussion-edit.component.css']\n})\nexport class CvddiscussionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvddiscussionForm: FormGroup;\n objCvddiscussion: Cvddiscussion;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvddiscussionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvddiscussionForm);\n });\n }\n\n constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvddiscussionService: CvddiscussionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n  FCvdcourseId: {\n  min: 'This field is required'\n  },\n\n   FCvduserId: {\n   min: 'This field is required'\n   },\n  \n \n \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n    this.getAllCvduser(); \n  }\n  \n   \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvddiscussionForm.controls.FCvduserId.value===undefined)\n           this.CvddiscussionForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvddiscussionForm.controls.FCvdcourseId.value===undefined)\n           this.CvddiscussionForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvddiscussion(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvddiscussionForm = this.fb.group({\n\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n    \n   FCvduserId: [0, Validators.min(1)],\n  \n \n    \n   \n    \n   \n   \n});\n}\n\n displayCvddiscussion(objCvddiscussion: Cvddiscussion): void {\n if (this.CvddiscussionForm) {\n this.CvddiscussionForm.reset();\n }\n this.objCvddiscussion = objCvddiscussion;\n\n if (this.objCvddiscussion.id === 0) {\n this.pageTitle = 'Add Discussion';\n } else {\n this.pageTitle = `Edit Discussion: ${this.objCvddiscussion.Name  }`;\n }\n\n this.CvddiscussionForm.patchValue({\n  Name: this.objCvddiscussion.Name,\n  FCvdcourseId: this.objCvddiscussion.FCvdcourseId,\n  \n  FCvduserId: this.objCvddiscussion.FCvduserId\n\n\n });\n }\n\n saveCvddiscussion(): void {\n if (this.CvddiscussionForm.valid) {\n if (this.CvddiscussionForm.dirty) {\n const p = { ...this.objCvddiscussion, ...this.CvddiscussionForm.value };\n\n if (p.id === 0) {\n this.createCvddiscussion(p);\n } else {\n this.updateCvddiscussion(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvddiscussion.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvddiscussion(this.objCvddiscussion.id)\n }\n }\n }\n\n PerformOperation(data: Cvddiscussion): void { \n this.displayCvddiscussion(data);\n }\n getCvddiscussion(id: number): void {\n this.objCvddiscussionService.getCvddiscussion(id)\n .subscribe({\n next: (data: Cvddiscussion) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvddiscussion(p: Cvddiscussion): void\n {\n this.objCvddiscussionService.createCvddiscussion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvddiscussion(p: Cvddiscussion): void\n {\n this.objCvddiscussionService.updateCvddiscussion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvddiscussion(id: number): void {\n this.objCvddiscussionService.deleteCvddiscussion(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvddiscussionForm.reset();\n this.router.navigate(['/Cvddiscussions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvddiscussion()\"\n          [formGroup]=\"CvddiscussionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>  \n      \n            \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvddiscussionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvddiscussionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvddiscussions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvddiscussionService } from 'src/app/services/cvddiscussion.service';\nimport { Cvddiscussion } from 'src/app/models/cvddiscussion';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n  selector: 'app-cvddiscussion-list',\n  templateUrl: './cvddiscussion-list.component.html',\n  styleUrls: ['./cvddiscussion-list.component.css']\n})\nexport class CvddiscussionListComponent implements OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private objCvddiscussionService: CvddiscussionService, private router: Router) { }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.getAllCvdcourse();\n  }\n\n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvddiscussion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r => r.id === Id).Name;\n  }\n\n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r => r.id === Id).Name;\n  }\n  errorMessage: any;\n  pageTitle: string = \"Discussion List\";\n  _listFilter = '';\n  get listFilter(): string {\n    return this._listFilter;\n  }\n  set listFilter(value: string) {\n    this._listFilter = value;\n    this.filteredCvddiscussions = this.listFilter ? this.performFilter(this.listFilter) : this.CvddiscussionList;\n  }\n\n  filteredCvddiscussions: Cvddiscussion[] = [];\n  CvddiscussionList: Cvddiscussion[] = [];\n\n  performFilter(filterBy: string): Cvddiscussion[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.CvddiscussionList.filter((data: Cvddiscussion) =>\n      data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n  getAllCvddiscussion() {\n    this.objCvddiscussionService.getAllCvddiscussion().subscribe({\n      next: data => {\n        this.CvddiscussionList = data;\n        this.CvddiscussionList.forEach(r => r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n        this.CvddiscussionList.forEach(r => r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n        this.filteredCvddiscussions = this.CvddiscussionList;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvddiscussions', 0, 'edit']\">\n        Add Discussion\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvddiscussionList && CvddiscussionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvddiscussion of filteredCvddiscussions\">\n            <td>\n              <a [routerLink]=\"['/Cvddiscussions', itrCvddiscussion.id]\">\n                {{ itrCvddiscussion.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvddiscussion.CvdcourseName }}</td>\n            <td>{{ itrCvddiscussion.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvddiscussions', itrCvddiscussion.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdfaq-detail',\n  templateUrl: './cvdfaq-detail.component.html',\n  styleUrls: ['./cvdfaq-detail.component.css']\n})\nexport class CvdfaqDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'FAQ Detail';\n errorMessage = '';\n objCvdfaq: Cvdfaq | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdfaqService: CvdfaqService) { }\n\n\n getCvdfaq(id: number) {\n this.objCvdfaqService.getCvdfaq(id).subscribe({\n next: (data: Cvdfaq) => this.objCvdfaq = data,\n error: err => this.errorMessage = err\n });\n }\n\n \n onBack(): void {\n this.router.navigate(['/Cvdfaqs']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdfaq(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdfaq\">\n    {{pageTitle + \": \" + objCvdfaq.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdfaq\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdfaq.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdfaqs', objCvdfaq.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdfaq-edit', \n templateUrl: './cvdfaq-edit.component.html',\n styleUrls: ['./cvdfaq-edit.component.css']\n})\nexport class CvdfaqEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdfaqForm: FormGroup;\n objCvdfaq: Cvdfaq;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdfaqForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdfaqForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdfaqService: CvdfaqService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n  \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdfaq(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdfaqForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n \n\n});\n}\n\n displayCvdfaq(objCvdfaq: Cvdfaq): void {\n if (this.CvdfaqForm) {\n this.CvdfaqForm.reset();\n }\n this.objCvdfaq = objCvdfaq;\n\n if (this.objCvdfaq.id === 0) {\n this.pageTitle = 'Add FAQ';\n } else {\n this.pageTitle = `Edit FAQ: ${this.objCvdfaq.Name  }`;\n }\n\n this.CvdfaqForm.patchValue({\n  Name: this.objCvdfaq.Name\n\n\n });\n }\n\n saveCvdfaq(): void {\n if (this.CvdfaqForm.valid) {\n if (this.CvdfaqForm.dirty) {\n const p = { ...this.objCvdfaq, ...this.CvdfaqForm.value };\n\n if (p.id === 0) {\n this.createCvdfaq(p);\n } else {\n this.updateCvdfaq(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdfaq.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdfaq(this.objCvdfaq.id)\n }\n }\n }\n\n PerformOperation(data: Cvdfaq): void { \n this.displayCvdfaq(data);\n }\n getCvdfaq(id: number): void {\n this.objCvdfaqService.getCvdfaq(id)\n .subscribe({\n next: (data: Cvdfaq) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdfaq(p: Cvdfaq): void\n {\n this.objCvdfaqService.createCvdfaq(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdfaq(p: Cvdfaq): void\n {\n this.objCvdfaqService.updateCvdfaq(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdfaq(id: number): void {\n this.objCvdfaqService.deleteCvdfaq(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdfaqForm.reset();\n this.router.navigate(['/Cvdfaqs']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdfaq()\"\n          [formGroup]=\"CvdfaqForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdfaqForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdfaqForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdfaqs']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdfaqService } from 'src/app/services/cvdfaq.service';\nimport { Cvdfaq } from 'src/app/models/cvdfaq';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdfaq-list',\n templateUrl: './cvdfaq-list.component.html',\n styleUrls: ['./cvdfaq-list.component.css']\n})\nexport class CvdfaqListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdfaqService: CvdfaqService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdfaq(); \n}\nerrorMessage: any;\npageTitle: string = \"FAQ List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdfaqs = this.listFilter ? this.performFilter(this.listFilter) : this.CvdfaqList;\n }\n\n filteredCvdfaqs: Cvdfaq[] = [];\n CvdfaqList: Cvdfaq[] = [];\n\n performFilter(filterBy: string): Cvdfaq[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdfaqList.filter((data: Cvdfaq) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdfaq() {\n this.objCvdfaqService.getAllCvdfaq().subscribe({\n next: data => {\n this.CvdfaqList = data;\n this.filteredCvdfaqs = this.CvdfaqList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdfaqs', 0, 'edit']\">\n        Add FAQ\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdfaqList && CvdfaqList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdfaq of filteredCvdfaqs\">\n            <td>\n              <a [routerLink]=\"['/Cvdfaqs', itrCvdfaq.id]\">\n                {{ itrCvdfaq.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdfaqs', itrCvdfaq.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdfeedback-detail',\n  templateUrl: './cvdfeedback-detail.component.html',\n  styleUrls: ['./cvdfeedback-detail.component.css']\n})\nexport class CvdfeedbackDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Feedback Detail';\n errorMessage = '';\n objCvdfeedback: Cvdfeedback | undefined;\n\nconstructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdfeedbackService: CvdfeedbackService) { }\n\n\n getCvdfeedback(id: number) {\n this.objCvdfeedbackService.getCvdfeedback(id).subscribe({\n  next: (data: Cvdfeedback) => {\n    this.objCvdfeedback = data;\n    this.getCvdcourse(this.objCvdfeedback.FCvdcourseId);\n    this.getCvduser(this.objCvdfeedback.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdfeedback.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n        \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvdfeedback.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n\n\n\n onBack(): void {\n this.router.navigate(['/Cvdfeedbacks']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdfeedback(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdfeedback\">\n    {{pageTitle + \": \" + objCvdfeedback.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdfeedback\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdfeedback.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdfeedback.CvdcourseName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdfeedback.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdfeedbacks', objCvdfeedback.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdfeedback-edit', \n templateUrl: './cvdfeedback-edit.component.html',\n styleUrls: ['./cvdfeedback-edit.component.css']\n})\nexport class CvdfeedbackEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdfeedbackForm: FormGroup;\n objCvdfeedback: Cvdfeedback;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdfeedbackForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdfeedbackForm);\n });\n }\n\n constructor( private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdfeedbackService: CvdfeedbackService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n  \n    FCvdcourseId: {\n    min: 'This field is required'\n    },\n     FCvduserId: {\n     min: 'This field is required'\n     },\n    \n    \n   \n   \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n    this.getAllCvduser(); \n  }\n\n  // ngoninit \n  \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdfeedbackForm.controls.FCvduserId.value===undefined)\n           this.CvdfeedbackForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdfeedbackForm.controls.FCvdcourseId.value===undefined)\n           this.CvdfeedbackForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdfeedback(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdfeedbackForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n    FCvduserId: [0, Validators.min(1)],\n    \n \n\n});\n}\n\n displayCvdfeedback(objCvdfeedback: Cvdfeedback): void {\n if (this.CvdfeedbackForm) {\n this.CvdfeedbackForm.reset();\n }\n this.objCvdfeedback = objCvdfeedback;\n\n if (this.objCvdfeedback.id === 0) {\n this.pageTitle = 'Add Feedback';\n } else {\n this.pageTitle = `Edit Feedback: ${this.objCvdfeedback.Name  }`;\n }\n\n this.CvdfeedbackForm.patchValue({\n  Name: this.objCvdfeedback.Name,\n  FCvdcourseId: this.objCvdfeedback.FCvdcourseId,\n  FCvduserId: this.objCvdfeedback.FCvduserId\n\n });\n }\n\n saveCvdfeedback(): void {\n if (this.CvdfeedbackForm.valid) {\n if (this.CvdfeedbackForm.dirty) {\n const p = { ...this.objCvdfeedback, ...this.CvdfeedbackForm.value };\n\n if (p.id === 0) {\n this.createCvdfeedback(p);\n } else {\n this.updateCvdfeedback(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdfeedback.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdfeedback(this.objCvdfeedback.id)\n }\n }\n }\n\n PerformOperation(data: Cvdfeedback): void { \n this.displayCvdfeedback(data);\n }\n getCvdfeedback(id: number): void {\n this.objCvdfeedbackService.getCvdfeedback(id)\n .subscribe({\n next: (data: Cvdfeedback) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdfeedback(p: Cvdfeedback): void\n {\n this.objCvdfeedbackService.createCvdfeedback(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdfeedback(p: Cvdfeedback): void\n {\n this.objCvdfeedbackService.updateCvdfeedback(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdfeedback(id: number): void {\n this.objCvdfeedbackService.deleteCvdfeedback(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdfeedbackForm.reset();\n this.router.navigate(['/Cvdfeedbacks']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdfeedback()\"\n          [formGroup]=\"CvdfeedbackForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvdcourseId\" >Select Course</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n            [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n            </span>\n            </div>\n            </div>\n\n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvduserId\" >Select User</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\"\n            [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n            </span>\n            </div>\n            </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdfeedbackForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdfeedbackForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdfeedbacks']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdfeedbackService } from 'src/app/services/cvdfeedback.service';\nimport { Cvdfeedback } from 'src/app/models/cvdfeedback';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdfeedback-list',\n templateUrl: './cvdfeedback-list.component.html',\n styleUrls: ['./cvdfeedback-list.component.css']\n})\nexport class CvdfeedbackListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdcourseService: CvdcourseService, private objCvdfeedbackService: CvdfeedbackService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdcourse();\n}\n\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdfeedback();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Feedback List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdfeedbacks = this.listFilter ? this.performFilter(this.listFilter) : this.CvdfeedbackList;\n }\n\n filteredCvdfeedbacks: Cvdfeedback[] = [];\n CvdfeedbackList: Cvdfeedback[] = [];\n\n performFilter(filterBy: string): Cvdfeedback[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdfeedbackList.filter((data: Cvdfeedback) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdfeedback() {\n this.objCvdfeedbackService.getAllCvdfeedback().subscribe({\n next: data => {\n this.CvdfeedbackList = data;\n this.CvdfeedbackList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n this.CvdfeedbackList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.filteredCvdfeedbacks = this.CvdfeedbackList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdfeedbacks', 0, 'edit']\">\n        Add Feedback\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdfeedbackList && CvdfeedbackList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdfeedback of filteredCvdfeedbacks\">\n            <td>\n              <a [routerLink]=\"['/Cvdfeedbacks', itrCvdfeedback.id]\">\n                {{ itrCvdfeedback.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdfeedback.CvdcourseName }}</td>\n            <td>{{ itrCvdfeedback.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdfeedbacks', itrCvdfeedback.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdlearncheck-detail',\n  templateUrl: './cvdlearncheck-detail.component.html',\n  styleUrls: ['./cvdlearncheck-detail.component.css']\n})\nexport class CvdlearncheckDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Learn Check Detail';\n errorMessage = '';\n objCvdlearncheck: Cvdlearncheck | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService,private objCvduserService: CvduserService,private route: ActivatedRoute,\n private router: Router,\n private objCvdlearncheckService: CvdlearncheckService) { }\n\n       \n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdlearncheck.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n \n        \n \n   getCvdquestion(id: number): void {\n     this.objCvdquestionService.getCvdquestion(id)\n       .subscribe({\n         next: (data) => this.objCvdlearncheck.CvdquestionName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n \n        \n \n   getCvduser(id: number): void {\n     this.objCvduserService.getCvduser(id)\n       .subscribe({\n         next: (data) => this.objCvdlearncheck.CvduserName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n getCvdlearncheck(id: number) {\n this.objCvdlearncheckService.getCvdlearncheck(id).subscribe({\n  next: (data: Cvdlearncheck) => {\n    this.objCvdlearncheck = data;\n    this.getCvduser(this.objCvdlearncheck.FCvduserId);\n    this.getCvdquestion(this.objCvdlearncheck.FCvdquestionId);\n    this.getCvdcourse(this.objCvdlearncheck.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdlearnchecks']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdlearncheck(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdlearncheck\">\n    {{pageTitle + \": \" + objCvdlearncheck.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdlearncheck\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdlearncheck.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Status</div><div class=\"col-md-6\">{{ objCvdlearncheck.Status }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Total Questions </div><div class=\"col-md-6\">{{ objCvdlearncheck.Totalques }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Correct Answer</div><div class=\"col-md-6\">{{ objCvdlearncheck.CorrectAns }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvduserName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Question</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvdquestionName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdlearncheck.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdlearnchecks', objCvdlearncheck.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdlearncheck-edit', \n templateUrl: './cvdlearncheck-edit.component.html',\n styleUrls: ['./cvdlearncheck-edit.component.css']\n})\nexport class CvdlearncheckEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdlearncheckForm: FormGroup;\n objCvdlearncheck: Cvdlearncheck;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdlearncheckForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdlearncheckForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdlearncheckService: CvdlearncheckService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Status: {\n required: 'This field is required'\n },\n Totalques: {\n required: 'This field is required'\n },\n CorrectAns: {\n required: 'This field is required'\n },\n\n\n\n\n  FCvduserId: {\n  min: 'This field is required'\n  },\n \n   FCvdquestionId: {\n   min: 'This field is required'\n   },\n\n    FCvdcourseId: {\n    min: 'This field is required'\n    },\n   \n   \n  \n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdquestion(); \n    this.getAllCvdcourse(); \n  }\n\n// ngoninit \n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdlearncheckForm.controls.FCvdcourseId.value===undefined)\n         this.CvdlearncheckForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n   \n   CvdquestionList: Cvdquestion[];\n   getAllCvdquestion() {\n     this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n         this.CvdquestionList = data;\n         if(this.CvdlearncheckForm.controls.FCvdquestionId.value===undefined)\n            this.CvdlearncheckForm.controls.FCvdquestionId.setValue(0);\n       },\n        error: err => this.errorMessage = err\n     });\n   }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n     next: data => {\n        this.CvduserList = data;\n        if(this.CvdlearncheckForm.controls.FCvduserId.value===undefined)\n           this.CvdlearncheckForm.controls.FCvduserId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdlearncheck(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdlearncheckForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Status: ['', Validators.required],\n    Totalques: ['', Validators.required],\n    CorrectAns: ['', Validators.required],\n\n    \n    \n      \n  FCvduserId: [0, Validators.min(1)],\n  FCvdquestionId: [0, Validators.min(1)],\n  FCvdcourseId: [0, Validators.min(1)],  \n});\n}\n\n displayCvdlearncheck(objCvdlearncheck: Cvdlearncheck): void {\n if (this.CvdlearncheckForm) {\n this.CvdlearncheckForm.reset();\n }\n this.objCvdlearncheck = objCvdlearncheck;\n\n if (this.objCvdlearncheck.id === 0) {\n this.pageTitle = 'Add Learn Check';\n } else {\n this.pageTitle = `Edit Learn Check: ${this.objCvdlearncheck.Name  }`;\n }\n\n this.CvdlearncheckForm.patchValue({\n  Name: this.objCvdlearncheck.Name,\n  FCvduserId: this.objCvdlearncheck.FCvduserId,\n  FCvdquestionId: this.objCvdlearncheck.FCvdquestionId,\n  FCvdcourseId: this.objCvdlearncheck.FCvdcourseId,\n  Status: this.objCvdlearncheck.Status,\n  Totalques: this.objCvdlearncheck.Totalques,\n  CorrectAns: this.objCvdlearncheck.CorrectAns\n\n});\n }\n\n saveCvdlearncheck(): void {\n if (this.CvdlearncheckForm.valid) {\n if (this.CvdlearncheckForm.dirty) {\n const p = { ...this.objCvdlearncheck, ...this.CvdlearncheckForm.value };\n\n if (p.id === 0) {\n this.createCvdlearncheck(p);\n } else {\n this.updateCvdlearncheck(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdlearncheck.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdlearncheck(this.objCvdlearncheck.id)\n }\n }\n }\n\n PerformOperation(data: Cvdlearncheck): void { \n this.displayCvdlearncheck(data);\n }\n getCvdlearncheck(id: number): void {\n this.objCvdlearncheckService.getCvdlearncheck(id)\n .subscribe({\n next: (data: Cvdlearncheck) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdlearncheck(p: Cvdlearncheck): void\n {\n this.objCvdlearncheckService.createCvdlearncheck(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdlearncheck(p: Cvdlearncheck): void\n {\n this.objCvdlearncheckService.updateCvdlearncheck(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdlearncheck(id: number): void {\n this.objCvdlearncheckService.deleteCvdlearncheck(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdlearncheckForm.reset();\n this.router.navigate(['/Cvdlearnchecks']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdlearncheck()\"\n          [formGroup]=\"CvdlearncheckForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"StatusId\">Status</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"StatusId\"\n                 type=\"text\"\n                 placeholder=\"Status (required)\"\n                 formControlName=\"Status\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Status}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Status}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"TotalquesId\">Questions</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"TotalquesId\"\n                 type=\"text\"\n                 placeholder=\"Total Questions (required)\"\n                 formControlName=\"Totalques\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Totalques}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Totalques}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"CorrectAnsId\">Answer</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"CorrectAnsId\"\n                 type=\"text\"\n                 placeholder=\"Correct Answer (required)\"\n                 formControlName=\"CorrectAns\"\n                 [ngClass]=\"{'is-invalid': displayMessage.CorrectAns}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.CorrectAns}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdquestionId\" >Select Question</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdquestionId\" formControlName=\"FCvdquestionId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdquestionId}\">\n      <option [value]='0' selected>Select Question...</option>\"\n      <option *ngFor=\"let lstCvdquestion of CvdquestionList\"\n      [value]=\"lstCvdquestion.id\">{{lstCvdquestion.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdquestionId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n      \n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdlearncheckForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdlearncheckForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdlearnchecks']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdlearncheckService } from 'src/app/services/cvdlearncheck.service';\nimport { Cvdlearncheck } from 'src/app/models/cvdlearncheck';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdlearncheck-list',\n templateUrl: './cvdlearncheck-list.component.html',\n styleUrls: ['./cvdlearncheck-list.component.css']\n})\nexport class CvdlearncheckListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private objCvduserService: CvduserService, private objCvdlearncheckService: CvdlearncheckService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvduser();\n}\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdlearncheck();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\n\n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n        this.CvdquestionList = data;\n        this.getAllCvdcourse();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdquestionNameFromId(Id: Number): string {\n    return this.CvdquestionList.find(r=>r.id===Id).Name;\n  }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdquestion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Learn Check List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdlearnchecks = this.listFilter ? this.performFilter(this.listFilter) : this.CvdlearncheckList;\n }\n\n filteredCvdlearnchecks: Cvdlearncheck[] = [];\n CvdlearncheckList: Cvdlearncheck[] = [];\n\n performFilter(filterBy: string): Cvdlearncheck[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdlearncheckList.filter((data: Cvdlearncheck) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdlearncheck() {\n this.objCvdlearncheckService.getAllCvdlearncheck().subscribe({\n next: data => {\n this.CvdlearncheckList = data;\n this.CvdlearncheckList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.CvdlearncheckList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\nthis.CvdlearncheckList.forEach(r=>r.CvdquestionName = this.getCvdquestionNameFromId(r.FCvdquestionId));\n\n this.filteredCvdlearnchecks = this.CvdlearncheckList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdlearnchecks', 0, 'edit']\">\n        Add Learn Check\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdlearncheckList && CvdlearncheckList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Status</th>\n            <th>Total Questions</th>\n            <th>Correct Answer</th>\n            <th>User Name</th>\n            <th>Question</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdlearncheck of filteredCvdlearnchecks\">\n            <td>\n              <a [routerLink]=\"['/Cvdlearnchecks', itrCvdlearncheck.id]\">\n                {{ itrCvdlearncheck.Name }}\n              </a>\n            </td>\n            <td>itrCvdlearncheck.Status</td>\n            <td>itrCvdlearncheck.Totalques</td>\n            <td>itrCvdlearncheck.CorrectAns</td>\n            <td>{{ itrCvdlearncheck.CvduserName }}</td>\n            <td>{{ itrCvdlearncheck.CvdquestionName }}</td>\n            <td>{{ itrCvdlearncheck.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdlearnchecks', itrCvdlearncheck.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\n\n@Component({\n  selector: 'app-cvdlevel-detail',\n  templateUrl: './cvdlevel-detail.component.html',\n  styleUrls: ['./cvdlevel-detail.component.css']\n})\nexport class CvdlevelDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Level Detail';\n errorMessage = '';\n objCvdlevel: Cvdlevel | undefined;\n\nconstructor( private objCvdtrainingtypeService: CvdtrainingtypeService,private route: ActivatedRoute,\n private router: Router,\n private objCvdlevelService: CvdlevelService) { }\n\n\n getCvdlevel(id: number) {\n this.objCvdlevelService.getCvdlevel(id).subscribe({\n \n  next: (data: Cvdlevel) => {\n    this.objCvdlevel = data;\n    this.getCvdtrainingtype(this.objCvdlevel.FCvdtrainingtypeId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n \n \n   getCvdtrainingtype(id: number): void {\n     this.objCvdtrainingtypeService.getCvdtrainingtype(id)\n       .subscribe({\n         next: (data) => this.objCvdlevel.CvdtrainingtypeName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdlevels']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdlevel(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdlevel\">\n    {{pageTitle + \": \" + objCvdlevel.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdlevel\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdlevel.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Training Type</div><div class=\"col-md-6\">{{ objCvdlevel.CvdtrainingtypeName }}</div></div>\n        \n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdlevels', objCvdlevel.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\n\n@Component({\n selector: 'app-cvdlevel-edit', \n templateUrl: './cvdlevel-edit.component.html',\n styleUrls: ['./cvdlevel-edit.component.css']\n})\nexport class CvdlevelEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdlevelForm: FormGroup;\n objCvdlevel: Cvdlevel;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdlevelForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdlevelForm);\n });\n }\n\n constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private route: ActivatedRoute, private router: Router, private objCvdlevelService: CvdlevelService, private fb: FormBuilder) {\n this.validationMessages = {\n   Name: {\n   required: 'This field is required',\n   minlength: 'This field requires atleast 3 characters.',\n   maxlength: 'cannot exceed more than 50 characters.'\n   },\n    FCvdtrainingtypeId: {\n    min: 'This field is required'\n    },\n   \n   \n  \n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdtrainingtype(); \n  }\n// ngoninit \n \n\nCvdtrainingtypeList: Cvdtrainingtype[];\ngetAllCvdtrainingtype() {\n  this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n   next: data => {\n      this.CvdtrainingtypeList = data;\n      if(this.CvdlevelForm.controls.FCvdtrainingtypeId.value===undefined)\n         this.CvdlevelForm.controls.FCvdtrainingtypeId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdlevel(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdlevelForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdtrainingtypeId: [0, Validators.min(1)],\n   \n   \n   \n \n\n});\n}\n\n displayCvdlevel(objCvdlevel: Cvdlevel): void {\n if (this.CvdlevelForm) {\n this.CvdlevelForm.reset();\n }\n this.objCvdlevel = objCvdlevel;\n\n if (this.objCvdlevel.id === 0) {\n this.pageTitle = 'Add Level';\n } else {\n this.pageTitle = `Edit Level: ${this.objCvdlevel.Name  }`;\n }\n\n this.CvdlevelForm.patchValue({\n  Name: this.objCvdlevel.Name,\n  FCvdtrainingtypeId: this.objCvdlevel.FCvdtrainingtypeId\n  \n\n\n });\n }\n\n saveCvdlevel(): void {\n if (this.CvdlevelForm.valid) {\n if (this.CvdlevelForm.dirty) {\n const p = { ...this.objCvdlevel, ...this.CvdlevelForm.value };\n\n if (p.id === 0) {\n this.createCvdlevel(p);\n } else {\n this.updateCvdlevel(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdlevel.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdlevel(this.objCvdlevel.id)\n }\n }\n }\n\n PerformOperation(data: Cvdlevel): void { \n this.displayCvdlevel(data);\n }\n getCvdlevel(id: number): void {\n this.objCvdlevelService.getCvdlevel(id)\n .subscribe({\n next: (data: Cvdlevel) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdlevel(p: Cvdlevel): void\n {\n this.objCvdlevelService.createCvdlevel(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdlevel(p: Cvdlevel): void\n {\n this.objCvdlevelService.updateCvdlevel(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdlevel(id: number): void {\n this.objCvdlevelService.deleteCvdlevel(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdlevelForm.reset();\n this.router.navigate(['/Cvdlevels']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdlevel()\"\n          [formGroup]=\"CvdlevelForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdtrainingtypeId\" >Select Training Type</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdtrainingtypeId\" formControlName=\"FCvdtrainingtypeId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdtrainingtypeId}\">\n      <option [value]='0' selected>Select Training Type...</option>\"\n      <option *ngFor=\"let lstCvdtrainingtype of CvdtrainingtypeList\"\n      [value]=\"lstCvdtrainingtype.id\">{{lstCvdtrainingtype.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdtrainingtypeId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdlevelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdlevelForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdlevels']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdlevelService } from 'src/app/services/cvdlevel.service';\nimport { Cvdlevel } from 'src/app/models/cvdlevel';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\n\n@Component({\n selector: 'app-cvdlevel-list',\n templateUrl: './cvdlevel-list.component.html',\n styleUrls: ['./cvdlevel-list.component.css']\n})\nexport class CvdlevelListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private objCvdlevelService: CvdlevelService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdtrainingtype();\n}\n  \n  CvdtrainingtypeList: Cvdtrainingtype[];\n  getAllCvdtrainingtype() {\n    this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n      next: data => {\n        this.CvdtrainingtypeList = data;\n        this.getAllCvdlevel();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdtrainingtypeNameFromId(Id: Number): string {\n    return this.CvdtrainingtypeList.find(r=>r.id===Id).Name;\n  }\nerrorMessage: any;\npageTitle: string = \"Level List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdlevels = this.listFilter ? this.performFilter(this.listFilter) : this.CvdlevelList;\n }\n\n filteredCvdlevels: Cvdlevel[] = [];\n CvdlevelList: Cvdlevel[] = [];\n\n performFilter(filterBy: string): Cvdlevel[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdlevelList.filter((data: Cvdlevel) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdlevel() {\n this.objCvdlevelService.getAllCvdlevel().subscribe({\n next: data => {\n this.CvdlevelList = data;\n this.CvdlevelList.forEach(r=>r.CvdtrainingtypeName = this.getCvdtrainingtypeNameFromId(r.FCvdtrainingtypeId));\n this.filteredCvdlevels = this.CvdlevelList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdlevels', 0, 'edit']\">\n        Add Level\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdlevelList && CvdlevelList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Training Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdlevel of filteredCvdlevels\">\n            <td>\n              <a [routerLink]=\"['/Cvdlevels', itrCvdlevel.id]\">\n                {{ itrCvdlevel.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdlevel.CvdtrainingtypeName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdlevels', itrCvdlevel.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\n\n@Component({\n  selector: 'app-cvdoption-detail',\n  templateUrl: './cvdoption-detail.component.html',\n  styleUrls: ['./cvdoption-detail.component.css']\n})\nexport class CvdoptionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Option Detail';\n errorMessage = '';\n objCvdoption: Cvdoption | undefined;\n\nconstructor(private objCvdquestionService: CvdquestionService,private route: ActivatedRoute,\n private router: Router,\n private objCvdoptionService: CvdoptionService) { }\n\n\n getCvdoption(id: number) {\n this.objCvdoptionService.getCvdoption(id).subscribe({\n  next: (data: Cvdoption) => {\n    this.objCvdoption = data;\n    this.getCvdquestion(this.objCvdoption.FCvdquestionId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n \n   getCvdquestion(id: number): void {\n     this.objCvdquestionService.getCvdquestion(id)\n       .subscribe({\n         next: (data) => this.objCvdoption.CvdquestionName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdoptions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdoption(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdoption\">\n    {{pageTitle + \": \" + objCvdoption.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdoption\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdoption.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Answer</div><div class=\"col-md-6\">{{ objCvdoption.Answer }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Question</div><div class=\"col-md-6\">{{ objCvdoption.CvdquestionName }}</div></div>\n        \n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdoptions', objCvdoption.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","\nimport { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\n\n@Component({\n selector: 'app-cvdoption-edit', \n templateUrl: './cvdoption-edit.component.html',\n styleUrls: ['./cvdoption-edit.component.css']\n})\n\nexport class CvdoptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdoptionForm: FormGroup;\n objCvdoption: Cvdoption;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdoptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdoptionForm);\n });\n }\n\n constructor(private objCvdquestionService: CvdquestionService, private route: ActivatedRoute, private router: Router, private objCvdoptionService: CvdoptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Answer: {\n required: 'This field is required'\n },\n\n\n FCvdquestionId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdquestion(); \n  }\n  // ngoninit \n   \n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n     next: data => {\n        this.CvdquestionList = data;\n        if(this.CvdoptionForm.controls.FCvdquestionId.value===undefined)\n           this.CvdoptionForm.controls.FCvdquestionId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdoption(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdoptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Answer: ['', Validators.required],\n    FCvdquestionId: [0, Validators.min(1)],\n   \n\n    \n   \n   \n\n});\n}\n\n displayCvdoption(objCvdoption: Cvdoption): void {\n if (this.CvdoptionForm) {\n this.CvdoptionForm.reset();\n }\n this.objCvdoption = objCvdoption;\n\n if (this.objCvdoption.id === 0) {\n this.pageTitle = 'Add Option';\n } else {\n this.pageTitle = `Edit Option: ${this.objCvdoption.Name  }`;\n }\n\n this.CvdoptionForm.patchValue({\n  Name: this.objCvdoption.Name,\n  Answer: this.objCvdoption.Answer,\n  FCvdquestionId: this.objCvdoption.FCvdquestionId\n\n\n });\n }\n\n saveCvdoption(): void {\n if (this.CvdoptionForm.valid) {\n if (this.CvdoptionForm.dirty) {\n const p = { ...this.objCvdoption, ...this.CvdoptionForm.value };\n\n if (p.id === 0) {\n this.createCvdoption(p);\n } else {\n this.updateCvdoption(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdoption.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdoption(this.objCvdoption.id)\n }\n }\n }\n\n PerformOperation(data: Cvdoption): void { \n this.displayCvdoption(data);\n }\n getCvdoption(id: number): void {\n this.objCvdoptionService.getCvdoption(id)\n .subscribe({\n next: (data: Cvdoption) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdoption(p: Cvdoption): void\n {\n this.objCvdoptionService.createCvdoption(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdoption(p: Cvdoption): void\n {\n this.objCvdoptionService.updateCvdoption(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdoption(id: number): void {\n this.objCvdoptionService.deleteCvdoption(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdoptionForm.reset();\n this.router.navigate(['/Cvdoptions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdoption()\"\n          [formGroup]=\"CvdoptionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n                  <div class=\"form-group row mb-2\">\n                    <label class=\"col-md-2 col-form-label\"\n                           for=\"AnswerId\">Answer</label>\n                    <div class=\"col-md-8\">\n                      <input class=\"form-control\"\n                             id=\"AnswerId\"\n                             type=\"text\"\n                             placeholder=\"Answer (required)\"\n                             formControlName=\"Answer\"\n                             [ngClass]=\"{'is-invalid': displayMessage.Answer}\" />\n                      <span class=\"invalid-feedback\">\n                        {{displayMessage.Answer}}\n                      </span>\n                    </div>\n                  </div>\n            \n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdquestionId\" >Select Question</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdquestionId\" formControlName=\"FCvdquestionId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdquestionId}\">\n      <option [value]='0' selected>Select Question...</option>\"\n      <option *ngFor=\"let lstCvdquestion of CvdquestionList\"\n      [value]=\"lstCvdquestion.id\">{{lstCvdquestion.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdquestionId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdoptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdoptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdoptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdoptionService } from 'src/app/services/cvdoption.service';\nimport { Cvdoption } from 'src/app/models/cvdoption';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\n\n@Component({\n selector: 'app-cvdoption-list',\n templateUrl: './cvdoption-list.component.html',\n styleUrls: ['./cvdoption-list.component.css']\n})\nexport class CvdoptionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdquestionService: CvdquestionService, private objCvdoptionService: CvdoptionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdquestion();\n}\n\n  \n  CvdquestionList: Cvdquestion[];\n  getAllCvdquestion() {\n    this.objCvdquestionService.getAllCvdquestion().subscribe({\n      next: data => {\n        this.CvdquestionList = data;\n        this.getAllCvdoption();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdquestionNameFromId(Id: Number): string {\n    return this.CvdquestionList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Option List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdoptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdoptionList;\n }\n\n filteredCvdoptions: Cvdoption[] = [];\n CvdoptionList: Cvdoption[] = [];\n\n performFilter(filterBy: string): Cvdoption[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdoptionList.filter((data: Cvdoption) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdoption() {\n this.objCvdoptionService.getAllCvdoption().subscribe({\n next: data => {\n this.CvdoptionList = data;\n this.CvdoptionList.forEach(r=>r.CvdquestionName = this.getCvdquestionNameFromId(r.FCvdquestionId));\n this.filteredCvdoptions = this.CvdoptionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdoptions', 0, 'edit']\">\n        Add Option\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdoptionList && CvdoptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Answer</th>\n            <th>Question Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdoption of filteredCvdoptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdoptions', itrCvdoption.id]\">\n                {{ itrCvdoption.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdoption.Answer }}</td>\n            <td>{{ itrCvdoption.CvdquestionName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdoptions', itrCvdoption.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdpermission-detail',\n  templateUrl: './cvdpermission-detail.component.html',\n  styleUrls: ['./cvdpermission-detail.component.css']\n})\nexport class CvdpermissionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Permission Detail';\n errorMessage = '';\n objCvdpermission: Cvdpermission | undefined;\n\nconstructor(private objCvduserService: CvduserService,private objCvdroleService: CvdroleService,private route: ActivatedRoute,\n private router: Router,\n private objCvdpermissionService: CvdpermissionService) { }\n\n\n getCvdpermission(id: number) {\n this.objCvdpermissionService.getCvdpermission(id).subscribe({\n  next: (data: Cvdpermission) => {\n    this.objCvdpermission = data;\n    this.getCvdrole(this.objCvdpermission.FCvdroleId);\n    this.getCvduser(this.objCvdpermission.FCvduserId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n   \n\n  getCvduser(id: number): void {\n    this.objCvduserService.getCvduser(id)\n      .subscribe({\n        next: (data) => this.objCvdpermission.CvduserName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n \n        \n \n   getCvdrole(id: number): void {\n     this.objCvdroleService.getCvdrole(id)\n       .subscribe({\n         next: (data) => this.objCvdpermission.CvdroleName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n onBack(): void {\n this.router.navigate(['/Cvdpermissions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdpermission(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdpermission\">\n    {{pageTitle + \": \" + objCvdpermission.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdpermission\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdpermission.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Role Name</div><div class=\"col-md-6\">{{ objCvdpermission.CvdroleName }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">User Name</div><div class=\"col-md-6\">{{ objCvdpermission.CvduserName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdpermissions', objCvdpermission.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdpermission-edit', \n templateUrl: './cvdpermission-edit.component.html',\n styleUrls: ['./cvdpermission-edit.component.css']\n})\nexport class CvdpermissionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdpermissionForm: FormGroup;\n objCvdpermission: Cvdpermission;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdpermissionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdpermissionForm);\n });\n }\n\n constructor(private objCvduserService: CvduserService, private objCvdroleService: CvdroleService, private route: ActivatedRoute, private router: Router, private objCvdpermissionService: CvdpermissionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvdroleId: {\n min: 'This field is required'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n\n\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdrole(); \n    this.getAllCvduser(); \n  }\n\n  // ngoninit \n   // ngoninit \n    \n   \n   CvduserList: Cvduser[];\n   getAllCvduser() {\n     this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n         this.CvduserList = data;\n         if(this.CvdpermissionForm.controls.FCvduserId.value===undefined)\n            this.CvdpermissionForm.controls.FCvduserId.setValue(0);\n       },\n        error: err => this.errorMessage = err\n     });\n   }  \n  \n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n     next: data => {\n        this.CvdroleList = data;\n        if(this.CvdpermissionForm.controls.FCvdroleId.value===undefined)\n           this.CvdpermissionForm.controls.FCvdroleId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdpermission(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdpermissionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdroleId: [0, Validators.min(1)],\n\n    FCvduserId: [0, Validators.min(1)],\n\n\n   \n\n});\n}\n\n displayCvdpermission(objCvdpermission: Cvdpermission): void {\n if (this.CvdpermissionForm) {\n this.CvdpermissionForm.reset();\n }\n this.objCvdpermission = objCvdpermission;\n\n if (this.objCvdpermission.id === 0) {\n this.pageTitle = 'Add Permission';\n } else {\n this.pageTitle = `Edit Permission: ${this.objCvdpermission.Name  }`;\n }\n\n this.CvdpermissionForm.patchValue({\n  Name: this.objCvdpermission.Name,\n  \nFCvdroleId: this.objCvdpermission.FCvdroleId,\n\nFCvduserId: this.objCvdpermission.FCvduserId\n\n\n });\n }\n\n saveCvdpermission(): void {\n if (this.CvdpermissionForm.valid) {\n if (this.CvdpermissionForm.dirty) {\n const p = { ...this.objCvdpermission, ...this.CvdpermissionForm.value };\n\n if (p.id === 0) {\n this.createCvdpermission(p);\n } else {\n this.updateCvdpermission(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdpermission.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdpermission(this.objCvdpermission.id)\n }\n }\n }\n\n PerformOperation(data: Cvdpermission): void { \n this.displayCvdpermission(data);\n }\n getCvdpermission(id: number): void {\n this.objCvdpermissionService.getCvdpermission(id)\n .subscribe({\n next: (data: Cvdpermission) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdpermission(p: Cvdpermission): void\n {\n this.objCvdpermissionService.createCvdpermission(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdpermission(p: Cvdpermission): void\n {\n this.objCvdpermissionService.updateCvdpermission(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdpermission(id: number): void {\n this.objCvdpermissionService.deleteCvdpermission(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdpermissionForm.reset();\n this.router.navigate(['/Cvdpermissions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdpermission()\"\n          [formGroup]=\"CvdpermissionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdroleId\" >Select Role</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdroleId\" formControlName=\"FCvdroleId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdroleId}\">\n      <option [value]='0' selected>Select Role...</option>\"\n      <option *ngFor=\"let lstCvdrole of CvdroleList\"\n      [value]=\"lstCvdrole.id\">{{lstCvdrole.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdroleId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvduserId\" >Select User</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n      <option [value]='0' selected>Select User...</option>\"\n      <option *ngFor=\"let lstCvduser of CvduserList\"\n      [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvduserId}}\n      </span>\n      </div>\n      </div>\n      \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdpermissionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdpermissionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdpermissions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdpermissionService } from 'src/app/services/cvdpermission.service';\nimport { Cvdpermission } from 'src/app/models/cvdpermission';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n selector: 'app-cvdpermission-list',\n templateUrl: './cvdpermission-list.component.html',\n styleUrls: ['./cvdpermission-list.component.css']\n})\nexport class CvdpermissionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdroleService: CvdroleService, \n      private objCvdpermissionService: CvdpermissionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdrole();\n}\n//model\n\n\n//ctor\n\n\n//getallCvdpermission\n\n\n//oninit\n\n\n//html \n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdpermission();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n  \n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n      next: data => {\n        this.CvdroleList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdroleNameFromId(Id: Number): string {\n    return this.CvdroleList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Permission List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdpermissions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdpermissionList;\n }\n\n filteredCvdpermissions: Cvdpermission[] = [];\n CvdpermissionList: Cvdpermission[] = [];\n\n performFilter(filterBy: string): Cvdpermission[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdpermissionList.filter((data: Cvdpermission) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdpermission() {\n this.objCvdpermissionService.getAllCvdpermission().subscribe({\n next: data => {\n this.CvdpermissionList = data;\n this.CvdpermissionList.forEach(r=>r.CvdroleName = this.getCvdroleNameFromId(r.FCvdroleId));\n this.CvdpermissionList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n this.filteredCvdpermissions = this.CvdpermissionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdpermissions', 0, 'edit']\">\n        Add Permission\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdpermissionList && CvdpermissionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Role Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdpermission of filteredCvdpermissions\">\n            <td>\n              <a [routerLink]=\"['/Cvdpermissions', itrCvdpermission.id]\">\n                {{ itrCvdpermission.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdpermission.CvdroleName }}</td>\n            <td>{{ itrCvdpermission.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdpermissions', itrCvdpermission.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdquestion-detail',\n  templateUrl: './cvdquestion-detail.component.html',\n  styleUrls: ['./cvdquestion-detail.component.css']\n})\nexport class CvdquestionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Question Detail';\n errorMessage = '';\n objCvdquestion: Cvdquestion | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdquestionService: CvdquestionService) { }\n\n\n getCvdquestion(id: number) {\n this.objCvdquestionService.getCvdquestion(id).subscribe({\n  next: (data: Cvdquestion) => {\n    this.objCvdquestion = data;\n    this.getCvdcourse(this.objCvdquestion.FCvdcourseId);\n  },\n error: err => this.errorMessage = err\n });\n }\n\n\n         \n \n   getCvdcourse(id: number): void {\n     this.objCvdcourseService.getCvdcourse(id)\n       .subscribe({\n         next: (data) => this.objCvdquestion.CvdcourseName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n onBack(): void {\n this.router.navigate(['/Cvdquestions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdquestion(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdquestion\">\n    {{pageTitle + \": \" + objCvdquestion.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdquestion\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdquestion.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdquestion.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdquestions', objCvdquestion.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdquestion-edit', \n templateUrl: './cvdquestion-edit.component.html',\n styleUrls: ['./cvdquestion-edit.component.css']\n})\nexport class CvdquestionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdquestionForm: FormGroup;\n objCvdquestion: Cvdquestion;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdquestionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdquestionForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdquestionService: CvdquestionService, private fb: FormBuilder) {\n this.validationMessages = {\n\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n  }\n  // ngoninit \n   \n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n     next: data => {\n        this.CvdcourseList = data;\n        if(this.CvdquestionForm.controls.FCvdcourseId.value===undefined)\n           this.CvdquestionForm.controls.FCvdcourseId.setValue(0);\n      },\n       error: err => this.errorMessage = err\n    });\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdquestion(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdquestionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvdcourseId: [0, Validators.min(1)],\n\n   \n   \n\n});\n}\n\n displayCvdquestion(objCvdquestion: Cvdquestion): void {\n if (this.CvdquestionForm) {\n this.CvdquestionForm.reset();\n }\n this.objCvdquestion = objCvdquestion;\n\n if (this.objCvdquestion.id === 0) {\n this.pageTitle = 'Add Question';\n } else {\n this.pageTitle = `Edit Question: ${this.objCvdquestion.Name  }`;\n }\n\n this.CvdquestionForm.patchValue({\n  Name: this.objCvdquestion.Name,\n  \n  FCvdcourseId: this.objCvdquestion.FCvdcourseId\n\n\n });\n }\n\n saveCvdquestion(): void {\n if (this.CvdquestionForm.valid) {\n if (this.CvdquestionForm.dirty) {\n const p = { ...this.objCvdquestion, ...this.CvdquestionForm.value };\n\n if (p.id === 0) {\n this.createCvdquestion(p);\n } else {\n this.updateCvdquestion(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdquestion.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdquestion(this.objCvdquestion.id)\n }\n }\n }\n\n PerformOperation(data: Cvdquestion): void { \n this.displayCvdquestion(data);\n }\n getCvdquestion(id: number): void {\n this.objCvdquestionService.getCvdquestion(id)\n .subscribe({\n next: (data: Cvdquestion) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdquestion(p: Cvdquestion): void\n {\n this.objCvdquestionService.createCvdquestion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdquestion(p: Cvdquestion): void\n {\n this.objCvdquestionService.updateCvdquestion(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdquestion(id: number): void {\n this.objCvdquestionService.deleteCvdquestion(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdquestionForm.reset();\n this.router.navigate(['/Cvdquestions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdquestion()\"\n          [formGroup]=\"CvdquestionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\" >\n      <label class=\"col-md-2 col-form-label\"\n      for=\"FCvdcourseId\" >Select Course</label>\n      <div class=\"col-sm-8\">\n      <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n      [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n      <option [value]='0' selected>Select Course...</option>\"\n      <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n      [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n      </select>\n      <span class=\"invalid-feedback\">\n      {{displayMessage.FCvdcourseId}}\n      </span>\n      </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdquestionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdquestionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdquestions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdquestionService } from 'src/app/services/cvdquestion.service';\nimport { Cvdquestion } from 'src/app/models/cvdquestion';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdquestion-list',\n templateUrl: './cvdquestion-list.component.html',\n styleUrls: ['./cvdquestion-list.component.css']\n})\nexport class CvdquestionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdquestionService: CvdquestionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\nthis.getAllCvdcourse();\n}\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdquestion();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\nerrorMessage: any;\npageTitle: string = \"Question List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdquestions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdquestionList;\n }\n\n filteredCvdquestions: Cvdquestion[] = [];\n CvdquestionList: Cvdquestion[] = [];\n\n performFilter(filterBy: string): Cvdquestion[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdquestionList.filter((data: Cvdquestion) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdquestion() {\n this.objCvdquestionService.getAllCvdquestion().subscribe({\n next: data => {\n this.CvdquestionList = data;\n this.CvdquestionList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n this.filteredCvdquestions = this.CvdquestionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdquestions', 0, 'edit']\">\n        Add Question\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdquestionList && CvdquestionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdquestion of filteredCvdquestions\">\n            <td>\n              <a [routerLink]=\"['/Cvdquestions', itrCvdquestion.id]\">\n                {{ itrCvdquestion.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdquestion.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdquestions', itrCvdquestion.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdrole-detail',\n  templateUrl: './cvdrole-detail.component.html',\n  styleUrls: ['./cvdrole-detail.component.css']\n})\nexport class CvdroleDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Role Detail';\n errorMessage = '';\n objCvdrole: Cvdrole | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdroleService: CvdroleService) { }\n\n\n getCvdrole(id: number) {\n this.objCvdroleService.getCvdrole(id).subscribe({\n next: (data: Cvdrole) => this.objCvdrole = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdroles']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdrole(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdrole\">\n    {{pageTitle + \": \" + objCvdrole.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdrole\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdrole.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdroles', objCvdrole.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdrole-edit', \n templateUrl: './cvdrole-edit.component.html',\n styleUrls: ['./cvdrole-edit.component.css']\n})\nexport class CvdroleEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdroleForm: FormGroup;\n objCvdrole: Cvdrole;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdroleForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdroleForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdroleService: CvdroleService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdrole(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdroleForm = this.fb.group({\n    Name: ['', [Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50)]],\n       \n       \n\n});\n}\n\n displayCvdrole(objCvdrole: Cvdrole): void {\n if (this.CvdroleForm) {\n this.CvdroleForm.reset();\n }\n this.objCvdrole = objCvdrole;\n\n if (this.objCvdrole.id === 0) {\n this.pageTitle = 'Add Role';\n } else {\n this.pageTitle = `Edit Role: ${this.objCvdrole.Name  }`;\n }\n\n this.CvdroleForm.patchValue({\n    Name: this.objCvdrole.Name\n });\n }\n\n saveCvdrole(): void {\n if (this.CvdroleForm.valid) {\n if (this.CvdroleForm.dirty) {\n const p = { ...this.objCvdrole, ...this.CvdroleForm.value };\n\n if (p.id === 0) {\n this.createCvdrole(p);\n } else {\n this.updateCvdrole(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdrole.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdrole(this.objCvdrole.id)\n }\n }\n }\n\n PerformOperation(data: Cvdrole): void { \n this.displayCvdrole(data);\n }\n getCvdrole(id: number): void {\n this.objCvdroleService.getCvdrole(id)\n .subscribe({\n next: (data: Cvdrole) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdrole(p: Cvdrole): void\n {\n this.objCvdroleService.createCvdrole(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdrole(p: Cvdrole): void\n {\n this.objCvdroleService.updateCvdrole(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdrole(id: number): void {\n this.objCvdroleService.deleteCvdrole(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdroleForm.reset();\n this.router.navigate(['/Cvdroles']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdrole()\"\n          [formGroup]=\"CvdroleForm\">\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"NameId\"\n                 type=\"text\"\n                 placeholder=\"Name (required)\"\n                 formControlName=\"Name\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n             \n          \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdroleForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdroleForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdroles']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n\n@Component({\n selector: 'app-cvdrole-list',\n templateUrl: './cvdrole-list.component.html',\n styleUrls: ['./cvdrole-list.component.css']\n})\nexport class CvdroleListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdroleService: CvdroleService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdrole(); \n}\nerrorMessage: any;\npageTitle: string = \"Role List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdroles = this.listFilter ? this.performFilter(this.listFilter) : this.CvdroleList;\n }\n\n filteredCvdroles: Cvdrole[] = [];\n CvdroleList: Cvdrole[] = [];\n\n performFilter(filterBy: string): Cvdrole[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdroleList.filter((data: Cvdrole) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdrole() {\n this.objCvdroleService.getAllCvdrole().subscribe({\n next: data => {\n this.CvdroleList = data;\n this.filteredCvdroles = this.CvdroleList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n  <div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdroles', 0, 'edit']\">\n        Add Role\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdroleList && CvdroleList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdrole of filteredCvdroles\">\n            <td>\n              <a [routerLink]=\"['/Cvdroles', itrCvdrole.id]\">\n                {{ itrCvdrole.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdroles', itrCvdrole.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdscreen-detail',\n  templateUrl: './cvdscreen-detail.component.html',\n  styleUrls: ['./cvdscreen-detail.component.css']\n})\nexport class CvdscreenDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Screen Detail';\n errorMessage = '';\n objCvdscreen: Cvdscreen | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdscreenService: CvdscreenService) { }\n\n\n getCvdscreen(id: number) {\n this.objCvdscreenService.getCvdscreen(id).subscribe({\n next: (data: Cvdscreen) => this.objCvdscreen = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdscreens']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdscreen(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdscreen\">\n    {{pageTitle + \": \" + objCvdscreen.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdscreen\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdscreen.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdscreens', objCvdscreen.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdscreen-edit', \n templateUrl: './cvdscreen-edit.component.html',\n styleUrls: ['./cvdscreen-edit.component.css']\n})\nexport class CvdscreenEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdscreenForm: FormGroup;\n objCvdscreen: Cvdscreen;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdscreenForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdscreenForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdscreenService: CvdscreenService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdscreen(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdscreenForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n});\n}\n\n displayCvdscreen(objCvdscreen: Cvdscreen): void {\n if (this.CvdscreenForm) {\n this.CvdscreenForm.reset();\n }\n this.objCvdscreen = objCvdscreen;\n\n if (this.objCvdscreen.id === 0) {\n this.pageTitle = 'Add Screen';\n } else {\n this.pageTitle = `Edit Screen: ${this.objCvdscreen.Name  }`;\n }\n\n this.CvdscreenForm.patchValue({\n  Name: this.objCvdscreen.Name\n });\n }\n\n saveCvdscreen(): void {\n if (this.CvdscreenForm.valid) {\n if (this.CvdscreenForm.dirty) {\n const p = { ...this.objCvdscreen, ...this.CvdscreenForm.value };\n\n if (p.id === 0) {\n this.createCvdscreen(p);\n } else {\n this.updateCvdscreen(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdscreen.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdscreen(this.objCvdscreen.id)\n }\n }\n }\n\n PerformOperation(data: Cvdscreen): void { \n this.displayCvdscreen(data);\n }\n getCvdscreen(id: number): void {\n this.objCvdscreenService.getCvdscreen(id)\n .subscribe({\n next: (data: Cvdscreen) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdscreen(p: Cvdscreen): void\n {\n this.objCvdscreenService.createCvdscreen(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdscreen(p: Cvdscreen): void\n {\n this.objCvdscreenService.updateCvdscreen(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdscreen(id: number): void {\n this.objCvdscreenService.deleteCvdscreen(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdscreenForm.reset();\n this.router.navigate(['/Cvdscreens']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdscreen()\"\n          [formGroup]=\"CvdscreenForm\">\n          <div class=\"form-group row mb-2\">\n            <label class=\"col-md-2 col-form-label\"\n                   for=\"NameId\">Name</label>\n            <div class=\"col-md-8\">\n              <input class=\"form-control\"\n                     id=\"NameId\"\n                     type=\"text\"\n                     placeholder=\"Name (required)\"\n                     formControlName=\"Name\"\n                     [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n              <span class=\"invalid-feedback\">\n                {{displayMessage.Name}}\n              </span>\n            </div>\n          </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdscreenForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdscreenForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdscreens']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdscreenService } from 'src/app/services/cvdscreen.service';\nimport { Cvdscreen } from 'src/app/models/cvdscreen';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdscreen-list',\n templateUrl: './cvdscreen-list.component.html',\n styleUrls: ['./cvdscreen-list.component.css']\n})\nexport class CvdscreenListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdscreenService: CvdscreenService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdscreen(); \n}\nerrorMessage: any;\npageTitle: string = \"Screen List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdscreens = this.listFilter ? this.performFilter(this.listFilter) : this.CvdscreenList;\n }\n\n filteredCvdscreens: Cvdscreen[] = [];\n CvdscreenList: Cvdscreen[] = [];\n\n performFilter(filterBy: string): Cvdscreen[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdscreenList.filter((data: Cvdscreen) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdscreen() {\n this.objCvdscreenService.getAllCvdscreen().subscribe({\n next: data => {\n this.CvdscreenList = data;\n this.filteredCvdscreens = this.CvdscreenList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdscreens', 0, 'edit']\">\n        Add Screen\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdscreenList && CvdscreenList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdscreen of filteredCvdscreens\">\n            <td>\n              <a [routerLink]=\"['/Cvdscreens', itrCvdscreen.id]\">\n                {{ itrCvdscreen.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdscreens', itrCvdscreen.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdstatu-detail',\n  templateUrl: './cvdstatu-detail.component.html',\n  styleUrls: ['./cvdstatu-detail.component.css']\n})\nexport class CvdstatuDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Status Detail';\n errorMessage = '';\n objCvdstatu: Cvdstatu | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdstatuService: CvdstatuService) { }\n\n\n getCvdstatu(id: number) {\n this.objCvdstatuService.getCvdstatu(id).subscribe({\n next: (data: Cvdstatu) => this.objCvdstatu = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdstatus']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdstatu(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdstatu\">\n    {{pageTitle + \": \" + objCvdstatu.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdstatu\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdstatu.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdstatus', objCvdstatu.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdstatu-edit', \n templateUrl: './cvdstatu-edit.component.html',\n styleUrls: ['./cvdstatu-edit.component.css']\n})\nexport class CvdstatuEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdstatuForm: FormGroup;\n objCvdstatu: Cvdstatu;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdstatuForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdstatuForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdstatuService: CvdstatuService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdstatu(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdstatuForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n   \n\n});\n}\n\n displayCvdstatu(objCvdstatu: Cvdstatu): void {\n if (this.CvdstatuForm) {\n this.CvdstatuForm.reset();\n }\n this.objCvdstatu = objCvdstatu;\n\n if (this.objCvdstatu.id === 0) {\n this.pageTitle = 'Add Statu';\n } else {\n this.pageTitle = `Edit Statu: ${this.objCvdstatu.Name  }`;\n }\n\n this.CvdstatuForm.patchValue({\n  Name: this.objCvdstatu.Name\n\n\n });\n }\n\n saveCvdstatu(): void {\n if (this.CvdstatuForm.valid) {\n if (this.CvdstatuForm.dirty) {\n const p = { ...this.objCvdstatu, ...this.CvdstatuForm.value };\n\n if (p.id === 0) {\n this.createCvdstatu(p);\n } else {\n this.updateCvdstatu(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdstatu.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdstatu(this.objCvdstatu.id)\n }\n }\n }\n\n PerformOperation(data: Cvdstatu): void { \n this.displayCvdstatu(data);\n }\n getCvdstatu(id: number): void {\n this.objCvdstatuService.getCvdstatu(id)\n .subscribe({\n next: (data: Cvdstatu) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdstatu(p: Cvdstatu): void\n {\n this.objCvdstatuService.createCvdstatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdstatu(p: Cvdstatu): void\n {\n this.objCvdstatuService.updateCvdstatu(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdstatu(id: number): void {\n this.objCvdstatuService.deleteCvdstatu(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdstatuForm.reset();\n this.router.navigate(['/Cvdstatus']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdstatu()\"\n          [formGroup]=\"CvdstatuForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdstatuForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdstatuForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdstatus']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdstatuService } from 'src/app/services/cvdstatu.service';\nimport { Cvdstatu } from 'src/app/models/cvdstatu';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdstatu-list',\n templateUrl: './cvdstatu-list.component.html',\n styleUrls: ['./cvdstatu-list.component.css']\n})\nexport class CvdstatuListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdstatuService: CvdstatuService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdstatu(); \n}\nerrorMessage: any;\npageTitle: string = \"Status List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdstatus = this.listFilter ? this.performFilter(this.listFilter) : this.CvdstatuList;\n }\n\n filteredCvdstatus: Cvdstatu[] = [];\n CvdstatuList: Cvdstatu[] = [];\n\n performFilter(filterBy: string): Cvdstatu[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdstatuList.filter((data: Cvdstatu) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdstatu() {\n this.objCvdstatuService.getAllCvdstatu().subscribe({\n next: data => {\n this.CvdstatuList = data;\n this.filteredCvdstatus = this.CvdstatuList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdstatus', 0, 'edit']\">\n        Add Status\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdstatuList && CvdstatuList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdstatu of filteredCvdstatus\">\n            <td>\n              <a [routerLink]=\"['/Cvdstatus', itrCvdstatu.id]\">\n                {{ itrCvdstatu.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdstatus', itrCvdstatu.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdsubscription-detail',\n  templateUrl: './cvdsubscription-detail.component.html',\n  styleUrls: ['./cvdsubscription-detail.component.css']\n})\nexport class CvdsubscriptionDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Subscription Detail';\n errorMessage = '';\n objCvdsubscription: Cvdsubscription | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdsubscriptionService: CvdsubscriptionService) { }\n\n\n getCvdsubscription(id: number) {\n this.objCvdsubscriptionService.getCvdsubscription(id).subscribe({\n next: (data: Cvdsubscription) => this.objCvdsubscription = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdsubscriptions']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdsubscription(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdsubscription\">\n    {{pageTitle + \": \" + objCvdsubscription.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdsubscription\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Name }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Description</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Description }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Price</div>\n          <div class=\"col-md-6\">{{ objCvdsubscription.Price }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdsubscriptions', objCvdsubscription.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdsubscription-edit', \n templateUrl: './cvdsubscription-edit.component.html',\n styleUrls: ['./cvdsubscription-edit.component.css']\n})\nexport class CvdsubscriptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdsubscriptionForm: FormGroup;\n objCvdsubscription: Cvdsubscription;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdsubscriptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdsubscriptionForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdsubscriptionService: CvdsubscriptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Description: {\n required: 'This field is required'\n },\n Price: {\n required: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdsubscription(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdsubscriptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    Description: ['', Validators.required],\n    Price: ['', Validators.required],\n\n    \n\n   \n\n});\n}\n\n displayCvdsubscription(objCvdsubscription: Cvdsubscription): void {\n if (this.CvdsubscriptionForm) {\n this.CvdsubscriptionForm.reset();\n }\n this.objCvdsubscription = objCvdsubscription;\n\n if (this.objCvdsubscription.id === 0) {\n this.pageTitle = 'Add Subscription';\n } else {\n this.pageTitle = `Edit Subscription: ${this.objCvdsubscription.Name  }`;\n }\n\n this.CvdsubscriptionForm.patchValue({\n  Name: this.objCvdsubscription.Name,\n  Description: this.objCvdsubscription.Description,\n  Price: this.objCvdsubscription.Price\n\n\n\n });\n }\n\n saveCvdsubscription(): void {\n if (this.CvdsubscriptionForm.valid) {\n if (this.CvdsubscriptionForm.dirty) {\n const p = { ...this.objCvdsubscription, ...this.CvdsubscriptionForm.value };\n\n if (p.id === 0) {\n this.createCvdsubscription(p);\n } else {\n this.updateCvdsubscription(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdsubscription.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdsubscription(this.objCvdsubscription.id)\n }\n }\n }\n\n PerformOperation(data: Cvdsubscription): void { \n this.displayCvdsubscription(data);\n }\n getCvdsubscription(id: number): void {\n this.objCvdsubscriptionService.getCvdsubscription(id)\n .subscribe({\n next: (data: Cvdsubscription) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdsubscription(p: Cvdsubscription): void\n {\n this.objCvdsubscriptionService.createCvdsubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdsubscription(p: Cvdsubscription): void\n {\n this.objCvdsubscriptionService.updateCvdsubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdsubscription(id: number): void {\n this.objCvdsubscriptionService.deleteCvdsubscription(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdsubscriptionForm.reset();\n this.router.navigate(['/Cvdsubscriptions']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdsubscription()\"\n          [formGroup]=\"CvdsubscriptionForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"DescriptionId\">Description</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"DescriptionId\"\n                 type=\"text\"\n                 placeholder=\"Description (required)\"\n                 formControlName=\"Description\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Description}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"PriceId\">Price</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"PriceId\"\n                 type=\"text\"\n                 placeholder=\"Price (required)\"\n                 formControlName=\"Price\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Price}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Price}}\n          </span>\n        </div>\n      </div>\n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdsubscriptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdsubscriptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdsubscriptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdsubscription-list',\n templateUrl: './cvdsubscription-list.component.html',\n styleUrls: ['./cvdsubscription-list.component.css']\n})\nexport class CvdsubscriptionListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdsubscriptionService: CvdsubscriptionService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdsubscription(); \n}\nerrorMessage: any;\npageTitle: string = \"Subscription List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdsubscriptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdsubscriptionList;\n }\n\n filteredCvdsubscriptions: Cvdsubscription[] = [];\n CvdsubscriptionList: Cvdsubscription[] = [];\n\n performFilter(filterBy: string): Cvdsubscription[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdsubscriptionList.filter((data: Cvdsubscription) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdsubscription() {\n this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n next: data => {\n this.CvdsubscriptionList = data;\n this.filteredCvdsubscriptions = this.CvdsubscriptionList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdsubscriptions', 0, 'edit']\">\n        Add Subscription\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdsubscriptionList && CvdsubscriptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdsubscription of filteredCvdsubscriptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdsubscriptions', itrCvdsubscription.id]\">\n                {{ itrCvdsubscription.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdsubscription.Description }}</td>\n            <td>{{ itrCvdsubscription.Price }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdsubscriptions', itrCvdsubscription.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\n\n@Component({\n  selector: 'app-cvdtableofcontent-detail',\n  templateUrl: './cvdtableofcontent-detail.component.html',\n  styleUrls: ['./cvdtableofcontent-detail.component.css']\n})\nexport class CvdtableofcontentDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Table of Content Detail';\n errorMessage = '';\n objCvdtableofcontent: Cvdtableofcontent | undefined;\n\nconstructor(private objCvdcourseService: CvdcourseService,private route: ActivatedRoute,\n private router: Router,\n private objCvdtableofcontentService: CvdtableofcontentService) { }\n\n\n getCvdtableofcontent(id: number) {\n this.objCvdtableofcontentService.getCvdtableofcontent(id).subscribe({\n next: (data: Cvdtableofcontent) => {\n  this.objCvdtableofcontent = data;\n  this.getCvdcourse(this.objCvdtableofcontent.FCvdcourseId);\n},\n error: err => this.errorMessage = err\n });\n }\n \n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdtableofcontent.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n onBack(): void {\n this.router.navigate(['/Cvdtableofcontents']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdtableofcontent(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdtableofcontent\">\n    {{pageTitle + \": \" + objCvdtableofcontent.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdtableofcontent\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdtableofcontent.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Description</div><div class=\"col-md-6\">{{ objCvdtableofcontent.Description }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Duration Hour</div><div class=\"col-md-6\">{{ objCvdtableofcontent.DurationHr }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Duration Minute</div><div class=\"col-md-6\">{{ objCvdtableofcontent.DurationMin }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">File Path</div><div class=\"col-md-6\">{{ objCvdtableofcontent.Filepath }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Course Name</div><div class=\"col-md-6\">{{ objCvdtableofcontent.CvdcourseName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdtableofcontents', objCvdtableofcontent.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n selector: 'app-cvdtableofcontent-edit', \n templateUrl: './cvdtableofcontent-edit.component.html',\n styleUrls: ['./cvdtableofcontent-edit.component.css']\n})\nexport class CvdtableofcontentEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdtableofcontentForm: FormGroup;\n objCvdtableofcontent: Cvdtableofcontent;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdtableofcontentForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdtableofcontentForm);\n });\n }\n\n constructor(private objCvdcourseService: CvdcourseService, private route: ActivatedRoute, private router: Router, private objCvdtableofcontentService: CvdtableofcontentService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n Description: {\n  required: 'This field is required'\n  },\n  DurationHr: {\n  required: 'This field is required'\n  },\n DurationMin: {\n required: 'This field is required'\n },\n Filepath: {\n required: 'This field is required'\n },\n\n\n FCvdcourseId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdcourse(); \n  }\n// ngoninit \n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdtableofcontentForm.controls.FCvdcourseId.value===undefined)\n         this.CvdtableofcontentForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdtableofcontent(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdtableofcontentForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    \n    Description: ['', Validators.required],\n    DurationHr: ['', Validators.required],\n    DurationMin: ['', Validators.required],\n    Filepath: ['', Validators.required],\n    FCvdcourseId: [0, Validators.min(1)],\n       \n\n});\n}\n\n displayCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): void {\n if (this.CvdtableofcontentForm) {\n this.CvdtableofcontentForm.reset();\n }\n this.objCvdtableofcontent = objCvdtableofcontent;\n\n if (this.objCvdtableofcontent.id === 0) {\n this.pageTitle = 'Add Table of Content';\n } else {\n this.pageTitle = `Edit Table of Content: ${this.objCvdtableofcontent.Name  }`;\n }\n\n this.CvdtableofcontentForm.patchValue({\n  Name: this.objCvdtableofcontent.Name\n  ,Description: this.objCvdtableofcontent.Description\n  ,DurationHr: this.objCvdtableofcontent.DurationHr\n  ,DurationMin: this.objCvdtableofcontent.DurationMin\n  ,FCvdcourseId: this.objCvdtableofcontent.FCvdcourseId\n\n\n  ,Filepath: this.objCvdtableofcontent.Filepath\n\n });\n }\n\n saveCvdtableofcontent(): void {\n if (this.CvdtableofcontentForm.valid) {\n if (this.CvdtableofcontentForm.dirty) {\n const p = { ...this.objCvdtableofcontent, ...this.CvdtableofcontentForm.value };\n\n if (p.id === 0) {\n this.createCvdtableofcontent(p);\n } else {\n this.updateCvdtableofcontent(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdtableofcontent.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdtableofcontent(this.objCvdtableofcontent.id)\n }\n }\n }\n\n PerformOperation(data: Cvdtableofcontent): void { \n this.displayCvdtableofcontent(data);\n }\n getCvdtableofcontent(id: number): void {\n this.objCvdtableofcontentService.getCvdtableofcontent(id)\n .subscribe({\n next: (data: Cvdtableofcontent) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdtableofcontent(p: Cvdtableofcontent): void\n {\n this.objCvdtableofcontentService.createCvdtableofcontent(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdtableofcontent(p: Cvdtableofcontent): void\n {\n this.objCvdtableofcontentService.updateCvdtableofcontent(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdtableofcontent(id: number): void {\n this.objCvdtableofcontentService.deleteCvdtableofcontent(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdtableofcontentForm.reset();\n this.router.navigate(['/Cvdtableofcontents']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdtableofcontent()\"\n          [formGroup]=\"CvdtableofcontentForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DescriptionId\">Description</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DescriptionId\"\n                       type=\"text\"\n                       placeholder=\"Description (required)\"\n                       formControlName=\"Description\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Description}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Description}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DurationHrId\">Hour</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DurationHrId\"\n                       type=\"text\"\n                       placeholder=\"Duration Hour (required)\"\n                       formControlName=\"DurationHr\"\n                       [ngClass]=\"{'is-invalid': displayMessage.DurationHr}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.DurationHr}}\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"DurationMinId\">Minute</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"DurationMinId\"\n                       type=\"text\"\n                       placeholder=\"Duration Minute (required)\"\n                       formControlName=\"DurationMin\"\n                       [ngClass]=\"{'is-invalid': displayMessage.DurationMin}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.DurationMin}}\n                </span>\n              </div>\n            </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\"\n               for=\"FilepathId\">File path</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\"\n                 id=\"FilepathId\"\n                 type=\"text\"\n                 placeholder=\"File path (required)\"\n                 formControlName=\"Filepath\"\n                 [ngClass]=\"{'is-invalid': displayMessage.Filepath}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Filepath}}\n          </span>\n        </div>\n      </div>\n\n\n            <div class=\"form-group row mb-2\" >\n            <label class=\"col-md-2 col-form-label\"\n            for=\"FCvdcourseId\" >Select Course</label>\n            <div class=\"col-sm-8\">\n            <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\" \n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\"\n            [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n            </select>\n            <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n            </span>\n            </div>\n            </div>  \n\n            \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdtableofcontentForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdtableofcontentForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdtableofcontents']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdtableofcontentService } from 'src/app/services/cvdtableofcontent.service';\nimport { Cvdtableofcontent } from 'src/app/models/cvdtableofcontent';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdtableofcontent-list',\n   templateUrl: './cvdtableofcontent-list.component.html',\n   styleUrls: ['./cvdtableofcontent-list.component.css']\n})\nexport class CvdtableofcontentListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdcourseService: CvdcourseService, private objCvdtableofcontentService: CvdtableofcontentService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdcourse();\n   }\n\n  \n  CvdcourseList: Cvdcourse[];\n  getAllCvdcourse() {\n    this.objCvdcourseService.getAllCvdcourse().subscribe({\n      next: data => {\n        this.CvdcourseList = data;\n        this.getAllCvdtableofcontent();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdcourseNameFromId(Id: Number): string {\n    return this.CvdcourseList.find(r=>r.id===Id).Name;\n  }\n\n   errorMessage: any;\n   pageTitle: string = \"Table of Content List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdtableofcontents = this.listFilter ? this.performFilter(this.listFilter) : this.CvdtableofcontentList;\n   }\n\n   filteredCvdtableofcontents: Cvdtableofcontent[] = [];\n   CvdtableofcontentList: Cvdtableofcontent[] = [];\n\n   performFilter(filterBy: string): Cvdtableofcontent[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdtableofcontentList.filter((data: Cvdtableofcontent) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdtableofcontent() {\n      this.objCvdtableofcontentService.getAllCvdtableofcontent().subscribe({\n         next: data => {\n            this.CvdtableofcontentList = data;\n            this.CvdtableofcontentList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.filteredCvdtableofcontents = this.CvdtableofcontentList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdtableofcontents', 0, 'edit']\">\n        Add Table of Content\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdtableofcontentList && CvdtableofcontentList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Video Length</th> \n            <th>File Path</th>\n            <th>Course Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdtableofcontent of filteredCvdtableofcontents\">\n            <td>\n              <a [routerLink]=\"['/Cvdtableofcontents', itrCvdtableofcontent.id]\">\n                {{ itrCvdtableofcontent.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdtableofcontent.Description }}</td>\n            <td>{{ itrCvdtableofcontent.DurationHr + \" : \" + itrCvdtableofcontent.DurationMin }}</td>\n            <td>{{ itrCvdtableofcontent.Filepath }}</td>\n            <td>{{ itrCvdtableofcontent.CvdcourseName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdtableofcontents', itrCvdtableofcontent.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n  selector: 'app-cvdtrainingtype-detail',\n  templateUrl: './cvdtrainingtype-detail.component.html',\n  styleUrls: ['./cvdtrainingtype-detail.component.css']\n})\nexport class CvdtrainingtypeDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'Training Type Detail';\n errorMessage = '';\n objCvdtrainingtype: Cvdtrainingtype | undefined;\n\nconstructor(private route: ActivatedRoute,\n private router: Router,\n private objCvdtrainingtypeService: CvdtrainingtypeService) { }\n\n\n getCvdtrainingtype(id: number) {\n this.objCvdtrainingtypeService.getCvdtrainingtype(id).subscribe({\n next: (data: Cvdtrainingtype) => this.objCvdtrainingtype = data,\n error: err => this.errorMessage = err\n });\n }\n\n onBack(): void {\n this.router.navigate(['/Cvdtrainingtypes']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvdtrainingtype(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdtrainingtype\">\n    {{pageTitle + \": \" + objCvdtrainingtype.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdtrainingtype\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdtrainingtype.Name }}</div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdtrainingtypes', objCvdtrainingtype.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { appconstants } from 'src/app/common/appconstants';\n\n@Component({\n selector: 'app-cvdtrainingtype-edit', \n templateUrl: './cvdtrainingtype-edit.component.html',\n styleUrls: ['./cvdtrainingtype-edit.component.css']\n})\nexport class CvdtrainingtypeEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdtrainingtypeForm: FormGroup;\n objCvdtrainingtype: Cvdtrainingtype;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdtrainingtypeForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdtrainingtypeForm);\n });\n }\n\n constructor(private route: ActivatedRoute, private router: Router, private objCvdtrainingtypeService: CvdtrainingtypeService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n  }\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdtrainingtype(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdtrainingtypeForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n   \n   \n\n});\n}\n\n displayCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): void {\n if (this.CvdtrainingtypeForm) {\n this.CvdtrainingtypeForm.reset();\n }\n this.objCvdtrainingtype = objCvdtrainingtype;\n\n if (this.objCvdtrainingtype.id === 0) {\n this.pageTitle = 'Add Training Type';\n } else {\n this.pageTitle = `Edit Training Type: ${this.objCvdtrainingtype.Name  }`;\n }\n\n this.CvdtrainingtypeForm.patchValue({\n  Name: this.objCvdtrainingtype.Name\n\n\n });\n }\n\n saveCvdtrainingtype(): void {\n if (this.CvdtrainingtypeForm.valid) {\n if (this.CvdtrainingtypeForm.dirty) {\n const p = { ...this.objCvdtrainingtype, ...this.CvdtrainingtypeForm.value };\n\n if (p.id === 0) {\n this.createCvdtrainingtype(p);\n } else {\n this.updateCvdtrainingtype(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdtrainingtype.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdtrainingtype(this.objCvdtrainingtype.id)\n }\n }\n }\n\n PerformOperation(data: Cvdtrainingtype): void { \n this.displayCvdtrainingtype(data);\n }\n getCvdtrainingtype(id: number): void {\n this.objCvdtrainingtypeService.getCvdtrainingtype(id)\n .subscribe({\n next: (data: Cvdtrainingtype) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdtrainingtype(p: Cvdtrainingtype): void\n {\n this.objCvdtrainingtypeService.createCvdtrainingtype(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdtrainingtype(p: Cvdtrainingtype): void\n {\n this.objCvdtrainingtypeService.updateCvdtrainingtype(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdtrainingtype(id: number): void {\n this.objCvdtrainingtypeService.deleteCvdtrainingtype(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdtrainingtypeForm.reset();\n this.router.navigate(['/Cvdtrainingtypes']);\n }\n}\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n    <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\"  \n          (ngSubmit)=\"saveCvdtrainingtype()\"\n          [formGroup]=\"CvdtrainingtypeForm\">\n\n          <div class=\"form-group row mb-2\">\n              <label class=\"col-md-2 col-form-label\"\n                     for=\"NameId\">Name</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\"\n                       id=\"NameId\"\n                       type=\"text\"\n                       placeholder=\"Name (required)\"\n                       formControlName=\"Name\"\n                       [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                <span class=\"invalid-feedback\">\n                  {{displayMessage.Name}}\n                </span>\n              </div>\n            </div>\n      \n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"submit\"\n                  [title]=\"CvdtrainingtypeForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                  [disabled]=\"!CvdtrainingtypeForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\"\n                  style=\"width:80px;\"\n                  type=\"button\"\n                  title=\"Cancel your edits\"\n                  [routerLink]=\"['/Cvdtrainingtypes']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\"\n                  style=\"width:80px\"\n                  type=\"button\"\n                  title=\"Delete\"\n                  (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  </div></div>\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdtrainingtypeService } from 'src/app/services/cvdtrainingtype.service';\nimport { Cvdtrainingtype } from 'src/app/models/cvdtrainingtype';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n selector: 'app-cvdtrainingtype-list',\n templateUrl: './cvdtrainingtype-list.component.html',\n styleUrls: ['./cvdtrainingtype-list.component.css']\n})\nexport class CvdtrainingtypeListComponent implements OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n   constructor(private objCvdtrainingtypeService: CvdtrainingtypeService, private router: Router) { }\nngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n this.getAllCvdtrainingtype(); \n}\nerrorMessage: any;\npageTitle: string = \"Training Type List\";\n _listFilter = '';\n get listFilter(): string {\n return this._listFilter;\n }\n set listFilter(value: string) {\n this._listFilter = value;\n this.filteredCvdtrainingtypes = this.listFilter ? this.performFilter(this.listFilter) : this.CvdtrainingtypeList;\n }\n\n filteredCvdtrainingtypes: Cvdtrainingtype[] = [];\n CvdtrainingtypeList: Cvdtrainingtype[] = [];\n\n performFilter(filterBy: string): Cvdtrainingtype[] {\n filterBy = filterBy.toLocaleLowerCase();\n return this.CvdtrainingtypeList.filter((data: Cvdtrainingtype) =>\n data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n }\n\n getAllCvdtrainingtype() {\n this.objCvdtrainingtypeService.getAllCvdtrainingtype().subscribe({\n next: data => {\n this.CvdtrainingtypeList = data;\n this.filteredCvdtrainingtypes = this.CvdtrainingtypeList;\n },\n error: err => this.errorMessage = err\n });\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdtrainingtypes', 0, 'edit']\">\n        Add Training Type\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdtrainingtypeList && CvdtrainingtypeList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdtrainingtype of filteredCvdtrainingtypes\">\n            <td>\n              <a [routerLink]=\"['/Cvdtrainingtypes', itrCvdtrainingtype.id]\">\n                {{ itrCvdtrainingtype.Name }}\n              </a>\n            </td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdtrainingtypes', itrCvdtrainingtype.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\n\n@Component({\n  selector: 'app-cvduser-detail',\n  templateUrl: './cvduser-detail.component.html',\n  styleUrls: ['./cvduser-detail.component.css']\n})\nexport class CvduserDetailComponent implements OnDestroy, OnInit {\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n pageTitle: string = 'User Detail';\n errorMessage = '';\n objCvduser: Cvduser | undefined;\n\nconstructor( private objCvdroleService: CvdroleService,private route: ActivatedRoute,\n private router: Router,\n private objCvduserService: CvduserService) { }\n\n\n getCvduser(id: number) {\n this.objCvduserService.getCvduser(id).subscribe({\n  next: (data: Cvduser) => {\n    this.objCvduser = data;\n    this.getCvdrole(this.objCvduser.FCvdroleId);\n  },\n\n error: err => this.errorMessage = err\n });\n }\n\n\n \n        \n   getCvdrole(id: number): void {\n     this.objCvdroleService.getCvdrole(id)\n       .subscribe({\n         next: (data) => this.objCvduser.CvdroleName = data.Name,\n         error: err => this.errorMessage = err\n       });\n   }\n\n\n onBack(): void {\n this.router.navigate(['/Cvdusers']);\n }\nngOnInit() {\n if(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n\n this.GetQueryStringParams();\n }\n\n private sub: Subscription;\n\n ngOnDestroy(): void {\n  this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n  this.sub = this.route.paramMap.subscribe(\n   params => {\n    const id = +params.get('id');\n    this.getCvduser(id);\n   }\n  );\n }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvduser\">\n    {{pageTitle + \": \" + objCvduser.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvduser\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvduser.Name }}</div>\n        </div>\n        <div class=\"row\"><div class=\"col-md-3\">Email Address</div><div class=\"col-md-6\">{{ objCvduser.EmailAddress }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Mobile Number</div><div class=\"col-md-6\">{{ objCvduser.MobileNo }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Password</div><div class=\"col-md-6\">{{ objCvduser.Password }}</div></div>\n        <div class=\"row\"><div class=\"col-md-3\">Role Name</div><div class=\"col-md-6\">{{ objCvduser.CvdroleName }}</div></div>\n      </div>\n\n    </div>\n\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdusers', objCvduser.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\n\n@Component({\n selector: 'app-cvduser-edit', \n templateUrl: './cvduser-edit.component.html',\n styleUrls: ['./cvduser-edit.component.css']\n})\nexport class CvduserEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvduserForm: FormGroup;\n objCvduser: Cvduser;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvduserForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvduserForm);\n });\n }\n\n constructor(private objCvdroleService: CvdroleService, private route: ActivatedRoute, private router: Router, private objCvduserService: CvduserService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n EmailAddress: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n MobileNo: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 12 characters.'\n },\n Password: {\n required: 'This field is required',\n minlength: 'This field requires atleast 6 characters.',\n maxlength: 'cannot exceed more than 20 characters.'\n },\n FCvdroleId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvdrole(); \n  }\n\n// ngoninit \n \n\nCvdroleList: Cvdrole[];\ngetAllCvdrole() {\n  this.objCvdroleService.getAllCvdrole().subscribe({\n   next: data => {\n      this.CvdroleList = data;\n      if(this.CvduserForm.controls.FCvdroleId.value===undefined)\n         this.CvduserForm.controls.FCvdroleId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvduser(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvduserForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    EmailAddress: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      MobileNo: ['', [Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(12)]],\n        Password: ['', [Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(20)]],\n          FCvdroleId: [0, Validators.min(1)],\n\n                   \n                \n            \n        \n   \n\n});\n}\n\n displayCvduser(objCvduser: Cvduser): void {\n if (this.CvduserForm) {\n this.CvduserForm.reset();\n }\n this.objCvduser = objCvduser;\n\n if (this.objCvduser.id === 0) {\n this.pageTitle = 'Add User';\n } else {\n this.pageTitle = `Edit User: ${this.objCvduser.Name  }`;\n }\n\n this.CvduserForm.patchValue({\n  Name: this.objCvduser.Name,\n  EmailAddress: this.objCvduser.EmailAddress,\n  MobileNo: this.objCvduser.MobileNo,\n  Password: this.objCvduser.Password,\n  FCvdroleId: this.objCvduser.FCvdroleId\n\n\n\n });\n }\n\n saveCvduser(): void {\n if (this.CvduserForm.valid) {\n if (this.CvduserForm.dirty) {\n const p = { ...this.objCvduser, ...this.CvduserForm.value };\n\n if (p.id === 0) {\n this.createCvduser(p);\n } else {\n this.updateCvduser(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvduser.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvduser(this.objCvduser.id)\n }\n }\n }\n\n PerformOperation(data: Cvduser): void { \n this.displayCvduser(data);\n }\n getCvduser(id: number): void {\n this.objCvduserService.getCvduser(id)\n .subscribe({\n next: (data: Cvduser) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvduser(p: Cvduser): void\n {\n this.objCvduserService.createCvduser(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvduser(p: Cvduser): void\n {\n this.objCvduserService.updateCvduser(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvduser(id: number): void {\n this.objCvduserService.deleteCvduser(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvduserForm.reset();\n this.router.navigate(['/Cvdusers']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvduser()\"\n      [formGroup]=\"CvduserForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"EmailAddressId\">Email</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"EmailAddressId\" type=\"text\" placeholder=\"Email Address (required)\"\n            formControlName=\"EmailAddress\" [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.EmailAddress}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"MobileNoId\">Mobile</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"MobileNoId\" type=\"text\" placeholder=\"Mobile Number (required)\"\n            formControlName=\"MobileNo\" [ngClass]=\"{'is-invalid': displayMessage.MobileNo}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.MobileNo}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"PasswordId\">Password</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"PasswordId\" type=\"text\" placeholder=\"Password (required)\"\n            formControlName=\"Password\" [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Password}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdroleId\">Select Role</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdroleId\" formControlName=\"FCvdroleId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdroleId}\">\n            <option [value]='0' selected>Select Role...</option>\"\n            <option *ngFor=\"let lstCvdrole of CvdroleList\" [value]=\"lstCvdrole.id\">{{lstCvdrole.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdroleId}}\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvduserForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvduserForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdusers']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvdroleService } from 'src/app/services/cvdrole.service';\nimport { Cvdrole } from 'src/app/models/cvdrole';\n\n@Component({\n   selector: 'app-cvduser-list',\n   templateUrl: './cvduser-list.component.html',\n   styleUrls: ['./cvduser-list.component.css']\n})\nexport class CvduserListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvdroleService: CvdroleService, private objCvduserService: CvduserService, private router: Router) { }\n   ngOnInit() {appconstants.gblisUserLoggedin =true;\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdrole();\n   }\n\n  CvdroleList: Cvdrole[];\n  getAllCvdrole() {\n    this.objCvdroleService.getAllCvdrole().subscribe({\n      next: data => {\n        this.CvdroleList = data;\n        this.getAllCvduser();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvdroleNameFromId(Id: Number): string {\n    return this.CvdroleList.find(r=>r.id===Id).Name;\n  }\n\n   errorMessage: any;\n   pageTitle: string = \"User List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdusers = this.listFilter ? this.performFilter(this.listFilter) : this.CvduserList;\n   }\n\n   filteredCvdusers: Cvduser[] = [];\n   CvduserList: Cvduser[] = [];\n\n   performFilter(filterBy: string): Cvduser[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvduserList.filter((data: Cvduser) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvduser() {\n      this.objCvduserService.getAllCvduser().subscribe({\n         next: data => {\n            this.CvduserList = data;\n            this.CvduserList.forEach(r=>r.CvdroleName = this.getCvdroleNameFromId(r.FCvdroleId));\n            this.filteredCvdusers = this.CvduserList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdusers', 0, 'edit']\">\n        Add User\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvduserList && CvduserList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email Address</th>\n            <th>Mobile No</th>\n            <th>Password</th>\n            <th>Role Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvduser of filteredCvdusers\">\n            <td>\n              <a [routerLink]=\"['/Cvdusers', itrCvduser.id]\">\n                {{ itrCvduser.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvduser.EmailAddress }}</td>\n            <td>{{ itrCvduser.MobileNo }}</td>\n            <td>{{ itrCvduser.Password }}</td>\n            <td>{{ itrCvduser.CvdroleName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdusers', itrCvduser.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { Subscription } from 'rxjs';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { CvduserService } from 'src/app/services/cvduser.service';\n\n@Component({\n  selector: 'app-cvdusersubscription-detail',\n  templateUrl: './cvdusersubscription-detail.component.html',\n  styleUrls: ['./cvdusersubscription-detail.component.css']\n})\nexport class CvdusersubscriptionDetailComponent implements OnDestroy, OnInit {\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n  pageTitle: string = 'User Subscription Detail';\n  errorMessage = '';\n  objCvdusersubscription: Cvdusersubscription | undefined;\n\n  constructor(private objCvduserService: CvduserService,\n    private objCvdsubscriptionService: CvdsubscriptionService,\n    private objCvdcourseService: CvdcourseService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private objCvdusersubscriptionService: CvdusersubscriptionService) { }\n\n\n  getCvdusersubscription(id: number) {\n    this.objCvdusersubscriptionService.getCvdusersubscription(id).subscribe({\n      next: (data: Cvdusersubscription) => {\n        this.objCvdusersubscription = data;\n        this.getCvdcourse(this.objCvdusersubscription.FCvdcourseId);\n        this.getCvdsubscription(this.objCvdusersubscription.FCvdsubscriptionId);\n        this.getCvduser(this.objCvdusersubscription.FCvduserId);\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/Cvdusersubscriptions']);\n  }\n  ngOnInit() {\n    if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.GetQueryStringParams();\n  }\n\n  \n    getCvduser(id: number): void {\n      this.objCvduserService.getCvduser(id)\n        .subscribe({\n          next: (data) => this.objCvdusersubscription.CvduserName = data.Name,\n          error: err => this.errorMessage = err\n        });\n    }\n\n  getCvdsubscription(id: number): void {\n    this.objCvdsubscriptionService.getCvdsubscription(id)\n      .subscribe({\n        next: (data) => this.objCvdusersubscription.CvdsubscriptionName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n\n  getCvdcourse(id: number): void {\n    this.objCvdcourseService.getCvdcourse(id)\n      .subscribe({\n        next: (data) => this.objCvdusersubscription.CvdcourseName = data.Name,\n        error: err => this.errorMessage = err\n      });\n  }\n\n  private sub: Subscription;\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  GetQueryStringParams() {\n    this.sub = this.route.paramMap.subscribe(\n      params => {\n        const id = +params.get('id');\n        this.getCvdusersubscription(id);\n      }\n    );\n  }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\"\n       *ngIf=\"objCvdusersubscription\">\n    {{pageTitle + \": \" + objCvdusersubscription.Name }}\n  </div>\n\n  <div class=\"card-body\"\n       *ngIf=\"objCvdusersubscription\">\n\n    <div class=\"row\">\n\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name</div>\n          <div class=\"col-md-6\">{{ objCvdusersubscription.Name }}</div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-3\">Course Name</div>\n          <div class=\"col-md-6\">{{ objCvdusersubscription.CvdcourseName }}</div>\n        </div>\n     \n\n      <div class=\"row\">\n        <div class=\"col-md-3\">Subscription</div>\n        <div class=\"col-md-6\">{{ objCvdusersubscription.CvdsubscriptionName }}</div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\">User</div>\n        <div class=\"col-md-6\">{{ objCvdusersubscription.CvduserName }}</div>\n      </div>\n    </div>\n  </div>\n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-outline-secondary mr-3\"\n                style=\"width:80px\"\n                (click)=\"onBack()\">\n          <i class=\"fa fa-chevron-left\"></i> Back\n        </button>\n        <button class=\"btn btn-outline-primary\"\n                style=\"width:80px\"\n                [routerLink]=\"['/Cvdusersubscriptions', objCvdusersubscription.id, 'edit']\">\n          Edit\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"alert alert-danger\"\n       *ngIf=\"errorMessage\">{{errorMessage}}\n  </div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Subscription, Observable, fromEvent, merge } from 'rxjs';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\n\n@Component({\n selector: 'app-cvdusersubscription-edit', \n templateUrl: './cvdusersubscription-edit.component.html',\n styleUrls: ['./cvdusersubscription-edit.component.css']\n})\nexport class CvdusersubscriptionEditComponent implements OnInit, OnDestroy, AfterViewInit {\n @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\nisUserLoggedin: boolean;\nLoggedinUserName: string;\n displayMessage: { [key: string]: string } = {};\n private validationMessages: { [key: string]: { [key: string]: string } };\n private genericValidator: GenericValidator;\n private sub: Subscription;\n CvdusersubscriptionForm: FormGroup;\n objCvdusersubscription: Cvdusersubscription;\n pageTitle: string;\n errorMessage: string;\n\n ngAfterViewInit(): void {\n const controlBlurs: Observable<any>[] = this.formInputElements\n .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n merge(this.CvdusersubscriptionForm.valueChanges, ...controlBlurs).pipe(\n debounceTime(800)\n ).subscribe(value => {\n this.displayMessage = this.genericValidator.processMessages(this.CvdusersubscriptionForm);\n });\n }\n\n constructor(private objCvdsubscriptionService: CvdsubscriptionService, private objCvdcourseService: CvdcourseService, private objCvduserService: CvduserService, private route: ActivatedRoute, private router: Router, private objCvdusersubscriptionService: CvdusersubscriptionService, private fb: FormBuilder) {\n this.validationMessages = {\n Name: {\n required: 'This field is required',\n minlength: 'This field requires atleast 3 characters.',\n maxlength: 'cannot exceed more than 50 characters.'\n },\n FCvduserId: {\n min: 'This field is required'\n },\n FCvdcourseId: {\n min: 'This field is required'\n },\n FCvdsubscriptionId: {\n min: 'This field is required'\n },\n\n\n };\n this.genericValidator = new GenericValidator(this.validationMessages);\n }\n\n  ngOnInit() {\nif(!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n    this.InitializeForm();\n    this.GetQueryStringParams();\n    this.getAllCvduser(); \n    this.getAllCvdcourse(); \n    this.getAllCvdsubscription(); \n  }\n\n// ngoninit \n \n\nCvdsubscriptionList: Cvdsubscription[];\ngetAllCvdsubscription() {\n  this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n   next: data => {\n      this.CvdsubscriptionList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvdsubscriptionId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvdsubscriptionId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n \n\nCvdcourseList: Cvdcourse[];\ngetAllCvdcourse() {\n  this.objCvdcourseService.getAllCvdcourse().subscribe({\n   next: data => {\n      this.CvdcourseList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvdcourseId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvdcourseId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n} \n\nCvduserList: Cvduser[];\ngetAllCvduser() {\n  this.objCvduserService.getAllCvduser().subscribe({\n   next: data => {\n      this.CvduserList = data;\n      if(this.CvdusersubscriptionForm.controls.FCvduserId.value===undefined)\n         this.CvdusersubscriptionForm.controls.FCvduserId.setValue(0);\n    },\n     error: err => this.errorMessage = err\n  });\n}\n\n ngOnDestroy(): void {\n this.sub.unsubscribe();\n }\n\n GetQueryStringParams() {\n this.sub = this.route.paramMap.subscribe(\n params => {\n const id = +params.get('id');\n this.getCvdusersubscription(id);\n }\n );\n }\n\nprivate InitializeForm() {\n this.CvdusersubscriptionForm = this.fb.group({\n  Name: ['', [Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(50)]],\n    FCvduserId: [0, Validators.min(1)],\n    FCvdcourseId: [0, Validators.min(1)],\n    FCvdsubscriptionId: [0, Validators.min(1)],\n\n    \n    \n   \n   \n\n});\n}\n\n displayCvdusersubscription(objCvdusersubscription: Cvdusersubscription): void {\n if (this.CvdusersubscriptionForm) {\n this.CvdusersubscriptionForm.reset();\n }\n this.objCvdusersubscription = objCvdusersubscription;\n\n if (this.objCvdusersubscription.id === 0) {\n this.pageTitle = 'Add User Subscription';\n } else {\n this.pageTitle = `Edit User Subscription: ${this.objCvdusersubscription.Name  }`;\n }\n\n this.CvdusersubscriptionForm.patchValue({\n  Name: this.objCvdusersubscription.Name,\n  FCvduserId: this.objCvdusersubscription.FCvduserId,\n  FCvdcourseId: this.objCvdusersubscription.FCvdcourseId,\n  FCvdsubscriptionId: this.objCvdusersubscription.FCvdsubscriptionId\n\n\n });\n }\n\n saveCvdusersubscription(): void {\n if (this.CvdusersubscriptionForm.valid) {\n if (this.CvdusersubscriptionForm.dirty) {\n const p = { ...this.objCvdusersubscription, ...this.CvdusersubscriptionForm.value };\n\n if (p.id === 0) {\n this.createCvdusersubscription(p);\n } else {\n this.updateCvdusersubscription(p);\n }\n } else {\n this.onSaveComplete();\n }\n } else {\n this.errorMessage = 'Please correct the validation errors.';\n }\n }\n\n DeleteConfirmation(): void{\n if (this.objCvdusersubscription.id === 0) {\n this.onSaveComplete();\n } else {\n if (confirm(\"Are you sure you want to delete this record. \")) {\n this.deleteCvdusersubscription(this.objCvdusersubscription.id)\n }\n }\n }\n\n PerformOperation(data: Cvdusersubscription): void { \n this.displayCvdusersubscription(data);\n }\n getCvdusersubscription(id: number): void {\n this.objCvdusersubscriptionService.getCvdusersubscription(id)\n .subscribe({\n next: (data: Cvdusersubscription) => this.PerformOperation(data),\n error: err => this.errorMessage = err\n });\n }\n\n createCvdusersubscription(p: Cvdusersubscription): void\n {\n this.objCvdusersubscriptionService.createCvdusersubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n updateCvdusersubscription(p: Cvdusersubscription): void\n {\n this.objCvdusersubscriptionService.updateCvdusersubscription(p)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n\n }\n deleteCvdusersubscription(id: number): void {\n this.objCvdusersubscriptionService.deleteCvdusersubscription(id)\n .subscribe({\n next: () => this.onSaveComplete(),\n error: err => this.errorMessage = err\n });\n }\n\n\n onSaveComplete(): void {\n // Reset the form to clear the flags\n this.CvdusersubscriptionForm.reset();\n this.router.navigate(['/Cvdusersubscriptions']);\n }\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n      <div class=\"card\">\n    <div class=\"card-header\">\n      {{pageTitle}}\n    </div>\n  \n    <div class=\"card-body\">\n  \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvdusersubscription()\"\n      [formGroup]=\"CvdusersubscriptionForm\">\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"NameId\">Name</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\" formControlName=\"Name\"\n            [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n          <span class=\"invalid-feedback\">\n            {{displayMessage.Name}}\n          </span>\n        </div>\n      </div>\n\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdcourseId\">Select Course</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdcourseId\" formControlName=\"FCvdcourseId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdcourseId}\">\n            <option [value]='0' selected>Select Course...</option>\"\n            <option *ngFor=\"let lstCvdcourse of CvdcourseList\" [value]=\"lstCvdcourse.id\">{{lstCvdcourse.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdcourseId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvdsubscriptionId\">Select Subscription</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvdsubscriptionId\" formControlName=\"FCvdsubscriptionId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvdsubscriptionId}\">\n            <option [value]='0' selected>Select Subscription...</option>\"\n            <option *ngFor=\"let lstCvdsubscription of CvdsubscriptionList\" [value]=\"lstCvdsubscription.id\">\n              {{lstCvdsubscription.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvdsubscriptionId}}\n          </span>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"FCvduserId\">Select User</label>\n        <div class=\"col-sm-8\">\n          <select class=\"form-control\" id=\"FCvduserId\" formControlName=\"FCvduserId\"\n            [ngClass]=\"{'is-invalid': displayMessage.FCvduserId}\">\n            <option [value]='0' selected>Select User...</option>\"\n            <option *ngFor=\"let lstCvduser of CvduserList\" [value]=\"lstCvduser.id\">{{lstCvduser.Name}}</option>\n          </select>\n          <span class=\"invalid-feedback\">\n            {{displayMessage.FCvduserId}}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\"\n            [title]=\"CvdusersubscriptionForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n            [disabled]=\"!CvdusersubscriptionForm.valid\">\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\" title=\"Cancel your edits\"\n            [routerLink]=\"['/Cvdusersubscriptions']\">\n            Cancel\n          </button>\n          <button class=\"btn btn-outline-warning\" style=\"width:80px\" type=\"button\" title=\"Delete\"\n            (click)=\"DeleteConfirmation()\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n</div></div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n  </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { CvdusersubscriptionService } from 'src/app/services/cvdusersubscription.service';\nimport { Cvdusersubscription } from 'src/app/models/cvdusersubscription';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { Router } from '@angular/router';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { CvdsubscriptionService } from 'src/app/services/cvdsubscription.service';\nimport { CvdcourseService } from 'src/app/services/cvdcourse.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { Cvdsubscription } from 'src/app/models/cvdsubscription';\nimport { Cvdcourse } from 'src/app/models/cvdcourse';\n\n@Component({\n   selector: 'app-cvdusersubscription-list',\n   templateUrl: './cvdusersubscription-list.component.html',\n   styleUrls: ['./cvdusersubscription-list.component.css']\n})\nexport class CvdusersubscriptionListComponent implements OnInit {\n   isUserLoggedin: boolean;\n   LoggedinUserName: string;\n   constructor(private objCvduserService: CvduserService, private objCvdsubscriptionService: CvdsubscriptionService, private objCvdcourseService: CvdcourseService, private objCvdusersubscriptionService: CvdusersubscriptionService, private router: Router) { }\n   ngOnInit() {\n      if (!appconstants.gblisUserLoggedin) this.router.navigate(['/homes']); this.isUserLoggedin = appconstants.gblisUserLoggedin; this.LoggedinUserName = appconstants.gblLoggedinUserName;\n      this.getAllCvdcourse();\n   }\n  \n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        this.getAllCvdusersubscription();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  getCvduserNameFromId(Id: Number): string {\n    return this.CvduserList.find(r=>r.id===Id).Name;\n  }\n\n     CvdsubscriptionList: Cvdsubscription[];\n     getAllCvdsubscription() {\n       this.objCvdsubscriptionService.getAllCvdsubscription().subscribe({\n         next: data => {\n           this.CvdsubscriptionList = data;\n           this.getAllCvduser();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdsubscriptionNameFromId(Id: Number): string {\n       return this.CvdsubscriptionList.find(r=>r.id===Id).Name;\n     }\n     \n     CvdcourseList: Cvdcourse[];\n     getAllCvdcourse() {\n       this.objCvdcourseService.getAllCvdcourse().subscribe({\n         next: data => {\n           this.CvdcourseList = data;\n           this.getAllCvdsubscription();\n         },\n         error: err => this.errorMessage = err\n       });\n     }\n   \n     getCvdcourseNameFromId(Id: Number): string {\n       return this.CvdcourseList.find(r=>r.id===Id).Name;\n     }\n   errorMessage: any;\n   pageTitle: string = \"User Subscription List\";\n   _listFilter = '';\n   get listFilter(): string {\n      return this._listFilter;\n   }\n   set listFilter(value: string) {\n      this._listFilter = value;\n      this.filteredCvdusersubscriptions = this.listFilter ? this.performFilter(this.listFilter) : this.CvdusersubscriptionList;\n   }\n\n   filteredCvdusersubscriptions: Cvdusersubscription[] = [];\n   CvdusersubscriptionList: Cvdusersubscription[] = [];\n\n   performFilter(filterBy: string): Cvdusersubscription[] {\n      filterBy = filterBy.toLocaleLowerCase();\n      return this.CvdusersubscriptionList.filter((data: Cvdusersubscription) =>\n         data.Name.toLocaleLowerCase().indexOf(filterBy) !== -1);\n   }\n\n   getAllCvdusersubscription() {\n      this.objCvdusersubscriptionService.getAllCvdusersubscription().subscribe({\n         next: data => {\n            this.CvdusersubscriptionList = data;\n            this.CvdusersubscriptionList.forEach(r=>r.CvdcourseName = this.getCvdcourseNameFromId(r.FCvdcourseId));\n            this.CvdusersubscriptionList.forEach(r=>r.CvdsubscriptionName = this.getCvdsubscriptionNameFromId(r.FCvdsubscriptionId));\n            this.CvdusersubscriptionList.forEach(r=>r.CvduserName = this.getCvduserNameFromId(r.FCvduserId));\n         \n            this.filteredCvdusersubscriptions = this.CvdusersubscriptionList;\n         },\n         error: err => this.errorMessage = err\n      });\n   }\n}\n\n","\n<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName' ></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<div class=\"card\">\n  <div class=\"card-header\">\n    {{pageTitle}}\n  </div>\n\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">Filter by:</div>\n      <div class=\"col-md-4\">\n        <input type=\"text\"\n               [(ngModel)]=\"listFilter\" />\n      </div>\n<div class=\"col-md-3\"></div>\n<div class=\"col-md-2\">\n    <div class=\"row\">\n        <div class=\"col-md-2\"></div>\n        <div class=\"col-md-10\">\n              <button class=\"btn btn-outline-primary btn-sm\"\n              [routerLink]=\"['/Cvdusersubscriptions', 0, 'edit']\">\n        Add User Subscription\n      </button>\n       </div>\n   </div>\n</div>\n    </div>\n    <div class=\"row\"\n         *ngIf=\"listFilter\">\n      <div class=\"col-md-6\">\n        <h4>Filtered by: {{listFilter}}</h4>\n      </div>\n    </div>\n\n    <div class=\"table-responsive\">\n      <table class=\"table mb-0\"\n             *ngIf=\"CvdusersubscriptionList && CvdusersubscriptionList.length\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Course Name</th>\n            <th>Subscription Name</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itrCvdusersubscription of filteredCvdusersubscriptions\">\n            <td>\n              <a [routerLink]=\"['/Cvdusersubscriptions', itrCvdusersubscription.id]\">\n                {{ itrCvdusersubscription.Name }}\n              </a>\n            </td>\n            <td>{{ itrCvdusersubscription.CvdcourseName }}</td>\n            <td>{{ itrCvdusersubscription.CvdsubscriptionName }}</td>\n            <td>{{ itrCvdusersubscription.CvduserName }}</td>\n            <td>\n              <button class=\"btn btn-outline-primary btn-sm\"\n                      [routerLink]=\"['/Cvdusersubscriptions', itrCvdusersubscription.id, 'edit']\">\n                Edit\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"errorMessage\"\n     class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { appconstants } from '../common/appconstants';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() public isUserLoggedin: boolean;\n  @Input() public LoggedinUserName: string;\n\n  lclFProjroleId: number;\n  constructor(private router:Router) { }\n  \n  ngOnInit() {\n    if(this.isUserLoggedin==true)\n    {\n      this.lclFProjroleId = appconstants.gblLoggedinUserRole;\n     // this.lclFProjroleId = appconstants.gblobjCustomer.FProjroleId;\n    }\n  }\n\n  Logout()\n  {\n    appconstants.gblisUserLoggedin=false;\n    this.isUserLoggedin= false;\n    this.router.navigate([\"/homes\"]);\n  }\n\n  GoToLoginPage()\n  {\n    this.router.navigate([\"/logins\"]);\n  }\n\n\n}\n","<div id=\"main\" *ngIf=\"!isUserLoggedin\">\n    <nav>\n          <ul>\n                <li><a routerLinkActive='active' [routerLink]=\"['/homes']\">Home</a>\n                </li>\n                <li><a routerLinkActive='active' [routerLink]=\"['/Contactus']\">Contact us</a>\n                </li>\n                <button href=\"#\" (click)=\"GoToLoginPage()\" class=\"btn btn-primary\">\n                      <span class=\"glyphicon glyphicon-log-out\"></span> Log in\n                </button>\n          </ul>\n    </nav>\n    <br><br><br>\n</div>\n\n<div id=\"main\" *ngIf=\"isUserLoggedin\">\n    <nav>\n          <ul>\n                <li><a routerLinkActive='active' [routerLink]=\"['/home']\">Home</a>\n                </li>\n           \n                \n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 1\">Super Admin</a>\n                      <ul class=\"nav-dropdown\"  *ngIf=\"lclFProjroleId <= 1\">\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdroles']\">role</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdscreens']\">screen</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdpermissions']\">permission</a>\n                              </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdstatus']\">status</a>\n                                </li>\n                                <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                      [routerLink]=\"['/Cvdtrainingtypes']\">Trainingtype</a>\n                                </li>\n                        \n\n                      </ul>\n                </li>\n\n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 2\">Admin</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 2\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdfaqs']\">faq</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdclasses']\">class</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdlevels']\">level</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdsubscriptions']\">subscription</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdusers']\">user</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdusersubscriptions']\">usersubscription</a>\n                              </li>\n\n                      </ul>\n                </li>\n\n                <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 3\">Teacher</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 3\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdcourses']\">course</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdcoursestatus']\">coursestatus</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdlearnchecks']\">learncheck</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdoptions']\">option</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdquestions']\">question</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdtableofcontents']\">tableofcontent</a>\n                              </li>\n\n                      </ul>\n                </li>\n\n                  <li class=\"navelement\">\n                      <a *ngIf=\"lclFProjroleId <= 4\">Student</a>\n                      <ul class=\"nav-dropdown\" *ngIf=\"lclFProjroleId <= 4\">\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvddiscussions']\">discussion</a>\n                              </li>\n                              <li class='nav-item'><a class='nav-link' routerLinkActive='active' [routerLinkActiveOptions]=\"{exact: true}\"\n                                    [routerLink]=\"['/Cvdfeedbacks']\">feedback</a>\n                              </li>\n\n                      </ul>\n                </li>\n                <li><a routerLinkActive='active' [routerLink]=\"['/Contactus']\">Contact us</a>\n                </li>\n                <button href=\"#\" (click)=\"Logout()\" class=\"btn btn-info\">\n                      <span class=\"glyphicon glyphicon-log-out\"></span> Log out\n                </button>\n                <label>Welcome: {{ LoggedinUserName }} </label>\n          </ul>\n\n    </nav>\n\n</div>\n<br><br>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { appconstants } from '../common/appconstants';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  isUserLoggedin: boolean;\n  LoggedinUserName: string;\n\n  ngOnInit() {\n    this.isUserLoggedin= appconstants.gblisUserLoggedin;\n    this.LoggedinUserName = appconstants.gblLoggedinUserName;\n  }\n\n}\n","<app-header [isUserLoggedin]='isUserLoggedin' [LoggedinUserName]='LoggedinUserName'></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n    <div class=\"row\">\n\n      <div class=\"col-md-10\">\n        \n      </div>\n      <div class=\"col-md-1\"></div>\n    </div>\n\n    <div *ngIf=\"!isUserLoggedin\">\n    </div>","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdclasse } from '../models/cvdclasse';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdclasseService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdclasse(): Observable<Cvdclasse[]> {\n return this.http.get<Cvdclasse[]>(appconstants.url + \"Cvdclasses\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdclasse(id: number): Observable<Cvdclasse> {\n if (id === 0) {\n return of(this.initializeCvdclasse());\n }\n const url = appconstants.url + \"Cvdclasses/\" + id;\n return this.http.get<Cvdclasse>(url)\n .pipe(\n tap(data => console.log('getCvdclasse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdclasse(objCvdclasse: Cvdclasse): Observable<Cvdclasse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdclasse>(appconstants.url + \"Cvdclasses/\", objCvdclasse, { headers })\n .pipe(\n tap(data => console.log('createCvdclasse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdclasse(objCvdclasse: Cvdclasse): Observable<Cvdclasse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdclasses/\" + objCvdclasse.id;\n return this.http.put<Cvdclasse>(url, objCvdclasse, { headers })\n .pipe(\n tap(() => console.log('updateCvdclasse: ' + objCvdclasse.id)),\n map(() => objCvdclasse),\n catchError(this.handleError)\n );\n }\n\n deleteCvdclasse(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdclasses/\" + id;\n return this.http.delete<Cvdclasse>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdclasse: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdclasse(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdcourse } from '../models/cvdcourse';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdcourseService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdcourse(): Observable<Cvdcourse[]> {\n return this.http.get<Cvdcourse[]>(appconstants.url + \"Cvdcourses\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdcourse(id: number): Observable<Cvdcourse> {\n if (id === 0) {\n return of(this.initializeCvdcourse());\n }\n const url = appconstants.url + \"Cvdcourses/\" + id;\n return this.http.get<Cvdcourse>(url)\n .pipe(\n tap(data => console.log('getCvdcourse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdcourse(objCvdcourse: Cvdcourse): Observable<Cvdcourse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdcourse>(appconstants.url + \"Cvdcourses/\", objCvdcourse, { headers })\n .pipe(\n tap(data => console.log('createCvdcourse: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdcourse(objCvdcourse: Cvdcourse): Observable<Cvdcourse> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcourses/\" + objCvdcourse.id;\n return this.http.put<Cvdcourse>(url, objCvdcourse, { headers })\n .pipe(\n tap(() => console.log('updateCvdcourse: ' + objCvdcourse.id)),\n map(() => objCvdcourse),\n catchError(this.handleError)\n );\n }\n\n deleteCvdcourse(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcourses/\" + id;\n return this.http.delete<Cvdcourse>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdcourse: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdcourse(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdcoursestatu } from '../models/cvdcoursestatu';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdcoursestatuService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdcoursestatu(): Observable<Cvdcoursestatu[]> {\n return this.http.get<Cvdcoursestatu[]>(appconstants.url + \"Cvdcoursestatus\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdcoursestatu(id: number): Observable<Cvdcoursestatu> {\n if (id === 0) {\n return of(this.initializeCvdcoursestatu());\n }\n const url = appconstants.url + \"Cvdcoursestatus/\" + id;\n return this.http.get<Cvdcoursestatu>(url)\n .pipe(\n tap(data => console.log('getCvdcoursestatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): Observable<Cvdcoursestatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdcoursestatu>(appconstants.url + \"Cvdcoursestatus/\", objCvdcoursestatu, { headers })\n .pipe(\n tap(data => console.log('createCvdcoursestatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdcoursestatu(objCvdcoursestatu: Cvdcoursestatu): Observable<Cvdcoursestatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcoursestatus/\" + objCvdcoursestatu.id;\n return this.http.put<Cvdcoursestatu>(url, objCvdcoursestatu, { headers })\n .pipe(\n tap(() => console.log('updateCvdcoursestatu: ' + objCvdcoursestatu.id)),\n map(() => objCvdcoursestatu),\n catchError(this.handleError)\n );\n }\n\n deleteCvdcoursestatu(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdcoursestatus/\" + id;\n return this.http.delete<Cvdcoursestatu>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdcoursestatu: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdcoursestatu(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvddiscussion } from '../models/cvddiscussion';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvddiscussionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvddiscussion(): Observable<Cvddiscussion[]> {\n return this.http.get<Cvddiscussion[]>(appconstants.url + \"Cvddiscussions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvddiscussion(id: number): Observable<Cvddiscussion> {\n if (id === 0) {\n return of(this.initializeCvddiscussion());\n }\n const url = appconstants.url + \"Cvddiscussions/\" + id;\n return this.http.get<Cvddiscussion>(url)\n .pipe(\n tap(data => console.log('getCvddiscussion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvddiscussion(objCvddiscussion: Cvddiscussion): Observable<Cvddiscussion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvddiscussion>(appconstants.url + \"Cvddiscussions/\", objCvddiscussion, { headers })\n .pipe(\n tap(data => console.log('createCvddiscussion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvddiscussion(objCvddiscussion: Cvddiscussion): Observable<Cvddiscussion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvddiscussions/\" + objCvddiscussion.id;\n return this.http.put<Cvddiscussion>(url, objCvddiscussion, { headers })\n .pipe(\n tap(() => console.log('updateCvddiscussion: ' + objCvddiscussion.id)),\n map(() => objCvddiscussion),\n catchError(this.handleError)\n );\n }\n\n deleteCvddiscussion(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvddiscussions/\" + id;\n return this.http.delete<Cvddiscussion>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvddiscussion: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvddiscussion(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdfaq } from '../models/cvdfaq';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdfaqService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdfaq(): Observable<Cvdfaq[]> {\n return this.http.get<Cvdfaq[]>(appconstants.url + \"Cvdfaqs\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdfaq(id: number): Observable<Cvdfaq> {\n if (id === 0) {\n return of(this.initializeCvdfaq());\n }\n const url = appconstants.url + \"Cvdfaqs/\" + id;\n return this.http.get<Cvdfaq>(url)\n .pipe(\n tap(data => console.log('getCvdfaq: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdfaq(objCvdfaq: Cvdfaq): Observable<Cvdfaq> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdfaq>(appconstants.url + \"Cvdfaqs/\", objCvdfaq, { headers })\n .pipe(\n tap(data => console.log('createCvdfaq: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdfaq(objCvdfaq: Cvdfaq): Observable<Cvdfaq> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfaqs/\" + objCvdfaq.id;\n return this.http.put<Cvdfaq>(url, objCvdfaq, { headers })\n .pipe(\n tap(() => console.log('updateCvdfaq: ' + objCvdfaq.id)),\n map(() => objCvdfaq),\n catchError(this.handleError)\n );\n }\n\n deleteCvdfaq(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfaqs/\" + id;\n return this.http.delete<Cvdfaq>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdfaq: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdfaq(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdfeedback } from '../models/cvdfeedback';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdfeedbackService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdfeedback(): Observable<Cvdfeedback[]> {\n return this.http.get<Cvdfeedback[]>(appconstants.url + \"Cvdfeedbacks\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdfeedback(id: number): Observable<Cvdfeedback> {\n if (id === 0) {\n return of(this.initializeCvdfeedback());\n }\n const url = appconstants.url + \"Cvdfeedbacks/\" + id;\n return this.http.get<Cvdfeedback>(url)\n .pipe(\n tap(data => console.log('getCvdfeedback: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdfeedback(objCvdfeedback: Cvdfeedback): Observable<Cvdfeedback> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdfeedback>(appconstants.url + \"Cvdfeedbacks/\", objCvdfeedback, { headers })\n .pipe(\n tap(data => console.log('createCvdfeedback: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdfeedback(objCvdfeedback: Cvdfeedback): Observable<Cvdfeedback> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfeedbacks/\" + objCvdfeedback.id;\n return this.http.put<Cvdfeedback>(url, objCvdfeedback, { headers })\n .pipe(\n tap(() => console.log('updateCvdfeedback: ' + objCvdfeedback.id)),\n map(() => objCvdfeedback),\n catchError(this.handleError)\n );\n }\n\n deleteCvdfeedback(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdfeedbacks/\" + id;\n return this.http.delete<Cvdfeedback>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdfeedback: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdfeedback(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdlearncheck } from '../models/cvdlearncheck';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdlearncheckService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdlearncheck(): Observable<Cvdlearncheck[]> {\n return this.http.get<Cvdlearncheck[]>(appconstants.url + \"Cvdlearnchecks\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdlearncheck(id: number): Observable<Cvdlearncheck> {\n if (id === 0) {\n return of(this.initializeCvdlearncheck());\n }\n const url = appconstants.url + \"Cvdlearnchecks/\" + id;\n return this.http.get<Cvdlearncheck>(url)\n .pipe(\n tap(data => console.log('getCvdlearncheck: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdlearncheck(objCvdlearncheck: Cvdlearncheck): Observable<Cvdlearncheck> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdlearncheck>(appconstants.url + \"Cvdlearnchecks/\", objCvdlearncheck, { headers })\n .pipe(\n tap(data => console.log('createCvdlearncheck: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdlearncheck(objCvdlearncheck: Cvdlearncheck): Observable<Cvdlearncheck> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlearnchecks/\" + objCvdlearncheck.id;\n return this.http.put<Cvdlearncheck>(url, objCvdlearncheck, { headers })\n .pipe(\n tap(() => console.log('updateCvdlearncheck: ' + objCvdlearncheck.id)),\n map(() => objCvdlearncheck),\n catchError(this.handleError)\n );\n }\n\n deleteCvdlearncheck(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlearnchecks/\" + id;\n return this.http.delete<Cvdlearncheck>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdlearncheck: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdlearncheck(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdlevel } from '../models/cvdlevel';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdlevelService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdlevel(): Observable<Cvdlevel[]> {\n return this.http.get<Cvdlevel[]>(appconstants.url + \"Cvdlevels\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdlevel(id: number): Observable<Cvdlevel> {\n if (id === 0) {\n return of(this.initializeCvdlevel());\n }\n const url = appconstants.url + \"Cvdlevels/\" + id;\n return this.http.get<Cvdlevel>(url)\n .pipe(\n tap(data => console.log('getCvdlevel: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdlevel(objCvdlevel: Cvdlevel): Observable<Cvdlevel> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdlevel>(appconstants.url + \"Cvdlevels/\", objCvdlevel, { headers })\n .pipe(\n tap(data => console.log('createCvdlevel: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdlevel(objCvdlevel: Cvdlevel): Observable<Cvdlevel> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlevels/\" + objCvdlevel.id;\n return this.http.put<Cvdlevel>(url, objCvdlevel, { headers })\n .pipe(\n tap(() => console.log('updateCvdlevel: ' + objCvdlevel.id)),\n map(() => objCvdlevel),\n catchError(this.handleError)\n );\n }\n\n deleteCvdlevel(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdlevels/\" + id;\n return this.http.delete<Cvdlevel>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdlevel: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdlevel(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdoption } from '../models/cvdoption';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdoptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdoption(): Observable<Cvdoption[]> {\n return this.http.get<Cvdoption[]>(appconstants.url + \"Cvdoptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdoption(id: number): Observable<Cvdoption> {\n if (id === 0) {\n return of(this.initializeCvdoption());\n }\n const url = appconstants.url + \"Cvdoptions/\" + id;\n return this.http.get<Cvdoption>(url)\n .pipe(\n tap(data => console.log('getCvdoption: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdoption(objCvdoption: Cvdoption): Observable<Cvdoption> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdoption>(appconstants.url + \"Cvdoptions/\", objCvdoption, { headers })\n .pipe(\n tap(data => console.log('createCvdoption: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdoption(objCvdoption: Cvdoption): Observable<Cvdoption> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdoptions/\" + objCvdoption.id;\n return this.http.put<Cvdoption>(url, objCvdoption, { headers })\n .pipe(\n tap(() => console.log('updateCvdoption: ' + objCvdoption.id)),\n map(() => objCvdoption),\n catchError(this.handleError)\n );\n }\n\n deleteCvdoption(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdoptions/\" + id;\n return this.http.delete<Cvdoption>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdoption: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdoption(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdpermission } from '../models/cvdpermission';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdpermissionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdpermission(): Observable<Cvdpermission[]> {\n return this.http.get<Cvdpermission[]>(appconstants.url + \"Cvdpermissions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdpermission(id: number): Observable<Cvdpermission> {\n if (id === 0) {\n return of(this.initializeCvdpermission());\n }\n const url = appconstants.url + \"Cvdpermissions/\" + id;\n return this.http.get<Cvdpermission>(url)\n .pipe(\n tap(data => console.log('getCvdpermission: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdpermission(objCvdpermission: Cvdpermission): Observable<Cvdpermission> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdpermission>(appconstants.url + \"Cvdpermissions/\", objCvdpermission, { headers })\n .pipe(\n tap(data => console.log('createCvdpermission: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdpermission(objCvdpermission: Cvdpermission): Observable<Cvdpermission> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdpermissions/\" + objCvdpermission.id;\n return this.http.put<Cvdpermission>(url, objCvdpermission, { headers })\n .pipe(\n tap(() => console.log('updateCvdpermission: ' + objCvdpermission.id)),\n map(() => objCvdpermission),\n catchError(this.handleError)\n );\n }\n\n deleteCvdpermission(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdpermissions/\" + id;\n return this.http.delete<Cvdpermission>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdpermission: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdpermission(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdquestion } from '../models/cvdquestion';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdquestionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdquestion(): Observable<Cvdquestion[]> {\n return this.http.get<Cvdquestion[]>(appconstants.url + \"Cvdquestions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdquestion(id: number): Observable<Cvdquestion> {\n if (id === 0) {\n return of(this.initializeCvdquestion());\n }\n const url = appconstants.url + \"Cvdquestions/\" + id;\n return this.http.get<Cvdquestion>(url)\n .pipe(\n tap(data => console.log('getCvdquestion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdquestion(objCvdquestion: Cvdquestion): Observable<Cvdquestion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdquestion>(appconstants.url + \"Cvdquestions/\", objCvdquestion, { headers })\n .pipe(\n tap(data => console.log('createCvdquestion: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdquestion(objCvdquestion: Cvdquestion): Observable<Cvdquestion> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdquestions/\" + objCvdquestion.id;\n return this.http.put<Cvdquestion>(url, objCvdquestion, { headers })\n .pipe(\n tap(() => console.log('updateCvdquestion: ' + objCvdquestion.id)),\n map(() => objCvdquestion),\n catchError(this.handleError)\n );\n }\n\n deleteCvdquestion(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdquestions/\" + id;\n return this.http.delete<Cvdquestion>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdquestion: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdquestion(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdrole } from '../models/cvdrole';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdroleService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdrole(): Observable<Cvdrole[]> {\n return this.http.get<Cvdrole[]>(appconstants.url + \"Cvdroles\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdrole(id: number): Observable<Cvdrole> {\n if (id === 0) {\n return of(this.initializeCvdrole());\n }\n const url = appconstants.url + \"Cvdroles/\" + id;\n return this.http.get<Cvdrole>(url)\n .pipe(\n tap(data => console.log('getCvdrole: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdrole(objCvdrole: Cvdrole): Observable<Cvdrole> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdrole>(appconstants.url + \"Cvdroles/\", objCvdrole, { headers })\n .pipe(\n tap(data => console.log('createCvdrole: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdrole(objCvdrole: Cvdrole): Observable<Cvdrole> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdroles/\" + objCvdrole.id;\n return this.http.put<Cvdrole>(url, objCvdrole, { headers })\n .pipe(\n tap(() => console.log('updateCvdrole: ' + objCvdrole.id)),\n map(() => objCvdrole),\n catchError(this.handleError)\n );\n }\n\n deleteCvdrole(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdroles/\" + id;\n return this.http.delete<Cvdrole>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdrole: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdrole(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdscreen } from '../models/cvdscreen';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdscreenService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdscreen(): Observable<Cvdscreen[]> {\n return this.http.get<Cvdscreen[]>(appconstants.url + \"Cvdscreens\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdscreen(id: number): Observable<Cvdscreen> {\n if (id === 0) {\n return of(this.initializeCvdscreen());\n }\n const url = appconstants.url + \"Cvdscreens/\" + id;\n return this.http.get<Cvdscreen>(url)\n .pipe(\n tap(data => console.log('getCvdscreen: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdscreen(objCvdscreen: Cvdscreen): Observable<Cvdscreen> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdscreen>(appconstants.url + \"Cvdscreens/\", objCvdscreen, { headers })\n .pipe(\n tap(data => console.log('createCvdscreen: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdscreen(objCvdscreen: Cvdscreen): Observable<Cvdscreen> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdscreens/\" + objCvdscreen.id;\n return this.http.put<Cvdscreen>(url, objCvdscreen, { headers })\n .pipe(\n tap(() => console.log('updateCvdscreen: ' + objCvdscreen.id)),\n map(() => objCvdscreen),\n catchError(this.handleError)\n );\n }\n\n deleteCvdscreen(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdscreens/\" + id;\n return this.http.delete<Cvdscreen>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdscreen: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdscreen(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdstatu } from '../models/cvdstatu';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdstatuService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdstatu(): Observable<Cvdstatu[]> {\n return this.http.get<Cvdstatu[]>(appconstants.url + \"Cvdstatus\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdstatu(id: number): Observable<Cvdstatu> {\n if (id === 0) {\n return of(this.initializeCvdstatu());\n }\n const url = appconstants.url + \"Cvdstatus/\" + id;\n return this.http.get<Cvdstatu>(url)\n .pipe(\n tap(data => console.log('getCvdstatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdstatu(objCvdstatu: Cvdstatu): Observable<Cvdstatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdstatu>(appconstants.url + \"Cvdstatus/\", objCvdstatu, { headers })\n .pipe(\n tap(data => console.log('createCvdstatu: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdstatu(objCvdstatu: Cvdstatu): Observable<Cvdstatu> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdstatus/\" + objCvdstatu.id;\n return this.http.put<Cvdstatu>(url, objCvdstatu, { headers })\n .pipe(\n tap(() => console.log('updateCvdstatu: ' + objCvdstatu.id)),\n map(() => objCvdstatu),\n catchError(this.handleError)\n );\n }\n\n deleteCvdstatu(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdstatus/\" + id;\n return this.http.delete<Cvdstatu>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdstatu: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdstatu(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdsubscription } from '../models/cvdsubscription';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdsubscriptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdsubscription(): Observable<Cvdsubscription[]> {\n return this.http.get<Cvdsubscription[]>(appconstants.url + \"Cvdsubscriptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdsubscription(id: number): Observable<Cvdsubscription> {\n if (id === 0) {\n return of(this.initializeCvdsubscription());\n }\n const url = appconstants.url + \"Cvdsubscriptions/\" + id;\n return this.http.get<Cvdsubscription>(url)\n .pipe(\n tap(data => console.log('getCvdsubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdsubscription(objCvdsubscription: Cvdsubscription): Observable<Cvdsubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdsubscription>(appconstants.url + \"Cvdsubscriptions/\", objCvdsubscription, { headers })\n .pipe(\n tap(data => console.log('createCvdsubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdsubscription(objCvdsubscription: Cvdsubscription): Observable<Cvdsubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdsubscriptions/\" + objCvdsubscription.id;\n return this.http.put<Cvdsubscription>(url, objCvdsubscription, { headers })\n .pipe(\n tap(() => console.log('updateCvdsubscription: ' + objCvdsubscription.id)),\n map(() => objCvdsubscription),\n catchError(this.handleError)\n );\n }\n\n deleteCvdsubscription(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdsubscriptions/\" + id;\n return this.http.delete<Cvdsubscription>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdsubscription: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdsubscription(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdtableofcontent } from '../models/cvdtableofcontent';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdtableofcontentService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdtableofcontent(): Observable<Cvdtableofcontent[]> {\n return this.http.get<Cvdtableofcontent[]>(appconstants.url + \"Cvdtableofcontents\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdtableofcontent(id: number): Observable<Cvdtableofcontent> {\n if (id === 0) {\n return of(this.initializeCvdtableofcontent());\n }\n const url = appconstants.url + \"Cvdtableofcontents/\" + id;\n return this.http.get<Cvdtableofcontent>(url)\n .pipe(\n tap(data => console.log('getCvdtableofcontent: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): Observable<Cvdtableofcontent> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdtableofcontent>(appconstants.url + \"Cvdtableofcontents/\", objCvdtableofcontent, { headers })\n .pipe(\n tap(data => console.log('createCvdtableofcontent: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdtableofcontent(objCvdtableofcontent: Cvdtableofcontent): Observable<Cvdtableofcontent> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtableofcontents/\" + objCvdtableofcontent.id;\n return this.http.put<Cvdtableofcontent>(url, objCvdtableofcontent, { headers })\n .pipe(\n tap(() => console.log('updateCvdtableofcontent: ' + objCvdtableofcontent.id)),\n map(() => objCvdtableofcontent),\n catchError(this.handleError)\n );\n }\n\n deleteCvdtableofcontent(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtableofcontents/\" + id;\n return this.http.delete<Cvdtableofcontent>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdtableofcontent: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdtableofcontent(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdtrainingtype } from '../models/cvdtrainingtype';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdtrainingtypeService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdtrainingtype(): Observable<Cvdtrainingtype[]> {\n return this.http.get<Cvdtrainingtype[]>(appconstants.url + \"Cvdtrainingtypes\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdtrainingtype(id: number): Observable<Cvdtrainingtype> {\n if (id === 0) {\n return of(this.initializeCvdtrainingtype());\n }\n const url = appconstants.url + \"Cvdtrainingtypes/\" + id;\n return this.http.get<Cvdtrainingtype>(url)\n .pipe(\n tap(data => console.log('getCvdtrainingtype: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): Observable<Cvdtrainingtype> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdtrainingtype>(appconstants.url + \"Cvdtrainingtypes/\", objCvdtrainingtype, { headers })\n .pipe(\n tap(data => console.log('createCvdtrainingtype: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdtrainingtype(objCvdtrainingtype: Cvdtrainingtype): Observable<Cvdtrainingtype> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtrainingtypes/\" + objCvdtrainingtype.id;\n return this.http.put<Cvdtrainingtype>(url, objCvdtrainingtype, { headers })\n .pipe(\n tap(() => console.log('updateCvdtrainingtype: ' + objCvdtrainingtype.id)),\n map(() => objCvdtrainingtype),\n catchError(this.handleError)\n );\n }\n\n deleteCvdtrainingtype(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdtrainingtypes/\" + id;\n return this.http.delete<Cvdtrainingtype>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdtrainingtype: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdtrainingtype(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvduser } from '../models/cvduser';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvduserService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  getAllCvduser(): Observable<Cvduser[]> {\n    return this.http.get<Cvduser[]>(appconstants.url + \"Cvdusers\")\n      .pipe(\n        tap(data => console.log(JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getCvduser(id: number): Observable<Cvduser> {\n    if (id === 0) {\n      return of(this.initializeCvduser());\n    }\n    const url = appconstants.url + \"Cvdusers/\" + id;\n    return this.http.get<Cvduser>(url)\n      .pipe(\n        tap(data => console.log('getCvduser: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  createCvduser(objCvduser: Cvduser): Observable<Cvduser> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<Cvduser>(appconstants.url + \"Cvdusers/\", objCvduser, { headers })\n      .pipe(\n        tap(data => console.log('createCvduser: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  updateCvduser(objCvduser: Cvduser): Observable<Cvduser> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = appconstants.url + \"Cvdusers/\" + objCvduser.id;\n    return this.http.put<Cvduser>(url, objCvduser, { headers })\n      .pipe(\n        tap(() => console.log('updateCvduser: ' + objCvduser.id)),\n        map(() => objCvduser),\n        catchError(this.handleError)\n      );\n  }\n\n  deleteCvduser(id: number): Observable<{}> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = appconstants.url + \"Cvdusers/\" + id;\n    return this.http.delete<Cvduser>(url, { headers })\n      .pipe(\n        tap(data => console.log('deleteCvduser: ' + id)),\n        catchError(this.handleError)\n      );\n  }\n\n  initializeCvduser(): any {\n    return {\n      id: 0,\n      Name: null,\n      EmailAddress: null,\n      MobileNo: null,\n      Password: null,\n      FCvdroleId: 0\n    };\n  }\n\n  private handleError(err) {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = \"An error occurred:\" + err.error.message;\n    } else {\n      errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Cvdusersubscription } from '../models/cvdusersubscription';\nimport { appconstants } from '../common/appconstants';\nimport { tap, catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CvdusersubscriptionService {\n\n  constructor(private http: HttpClient) { }\n\n getAllCvdusersubscription(): Observable<Cvdusersubscription[]> {\n return this.http.get<Cvdusersubscription[]>(appconstants.url + \"Cvdusersubscriptions\")\n .pipe(\n tap(data => console.log(JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n \n getCvdusersubscription(id: number): Observable<Cvdusersubscription> {\n if (id === 0) {\n return of(this.initializeCvdusersubscription());\n }\n const url = appconstants.url + \"Cvdusersubscriptions/\" + id;\n return this.http.get<Cvdusersubscription>(url)\n .pipe(\n tap(data => console.log('getCvdusersubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n createCvdusersubscription(objCvdusersubscription: Cvdusersubscription): Observable<Cvdusersubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n return this.http.post<Cvdusersubscription>(appconstants.url + \"Cvdusersubscriptions/\", objCvdusersubscription, { headers })\n .pipe(\n tap(data => console.log('createCvdusersubscription: ' + JSON.stringify(data))),\n catchError(this.handleError)\n );\n }\n\n updateCvdusersubscription(objCvdusersubscription: Cvdusersubscription): Observable<Cvdusersubscription> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdusersubscriptions/\" + objCvdusersubscription.id;\n return this.http.put<Cvdusersubscription>(url, objCvdusersubscription, { headers })\n .pipe(\n tap(() => console.log('updateCvdusersubscription: ' + objCvdusersubscription.id)),\n map(() => objCvdusersubscription),\n catchError(this.handleError)\n );\n }\n\n deleteCvdusersubscription(id: number): Observable<{}> {\n const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n const url = appconstants.url + \"Cvdusersubscriptions/\" + id;\n return this.http.delete<Cvdusersubscription>(url, { headers })\n .pipe(\n tap(data => console.log('deleteCvdusersubscription: ' + id)),\n catchError(this.handleError)\n );\n }\n\n initializeCvdusersubscription(): any {\n return {\n id: 0,\n Name: null\n };\n}\n\n private handleError(err) {\n let errorMessage: string;\n if (err.error instanceof ErrorEvent) {\n errorMessage = \"An error occurred:\" + err.error.message;\n } else {\n errorMessage = \"Backend returned code \" + err.status + \":\" + err.body.error;\n }\n console.error(err);\n return throwError(errorMessage);\n }\n}\n","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n  showForm: boolean;\n  objForgotPassword: Cvduser;\n\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.ForgotPasswordForm.valueChanges, ...controlBlurs).pipe(\n      debounceTime(800)\n    ).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.ForgotPasswordForm);\n    });\n  }\n\n  constructor(private router: Router, private fb: FormBuilder, private objCvduserService: CvduserService) {\n    this.validationMessages = {\n      EmailAddress: {\n        required: 'This field is required. ',\n        minlength: 'This field requires atleast 3 characters. ',\n        maxlength: 'cannot exceed more than 50 characters. ',\n        email: ' Valid Email Address is required. '\n      },\n      Code: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 6 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n      cnfPassword: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n\n\n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n  errorMessage: string;\n\n  ForgotPasswordForm: FormGroup;\n\n  private InitializeForm() {\n    this.ForgotPasswordForm = this.fb.group({\n      EmailAddress: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50),\n      Validators.email]],\n      Code: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(6)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n      cnfPassword: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n\n    });\n  }\n\n\n  saveChangePassword(): void {\n    if (this.ForgotPasswordForm.controls.Password.value == this.ForgotPasswordForm.controls.cnfPassword.value) {\n      if (this.code == this.ForgotPasswordForm.controls.Code.value) {\n\n        if (this.ForgotPasswordForm.valid) {\n          if (this.ForgotPasswordForm.dirty) {\n            this.objForgotPassword.Password = this.ForgotPasswordForm.controls.Password.value;\n            this.updateCvduser(this.objForgotPassword);\n          } else {\n            //this.onSaveComplete();\n          }\n        } else {\n          this.errorMessage = 'Please correct the validation errors.';\n        }\n      }\n      else {\n        alert(\"Entered code doesnot match.\");\n      }\n    }\n    else {\n      alert(\"Password and confirm password must be same.\");\n    }\n  }\n\n  updateCvduser(p: Cvduser): void {\n    this.objCvduserService.updateCvduser(p)\n      .subscribe({\n        next: () => { alert('Password updated successfully.'); this.router.navigate([\"/logins\"]); },\n        error: err => this.errorMessage = err\n      });\n\n  }\n\n  CvduserList: Cvduser[];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n  ngOnInit() {\n    this.InitializeForm();\n    this.getAllCvduser();\n  }\n  code: string;\n  VerifyEmail() {\n    const EmailAddress = this.ForgotPasswordForm.controls.EmailAddress.value.toLocaleLowerCase();\n    let countEmailAddress = this.CvduserList.filter(r => r.EmailAddress.toLocaleLowerCase() == EmailAddress).length;\n    if (countEmailAddress == 1) {\n      this.objForgotPassword = this.CvduserList.filter(r => r.EmailAddress.toLocaleLowerCase() == EmailAddress)[0];\n      this.showForm = true;\n      this.code = this.CreateCode();\n      this.sendEmail();\n    } else {\n      alert(\"This email Address doesnot exist. Check your email address and try again.\");\n      this.showForm = false;\n    }\n\n  }\n  sendEmail(): any {\n    console.log('code: ' + this.code);\n  }\n\n  CreateCode(): string {\n   // var randomize = require('randomatic');\n   // return randomize('0', 6);\n   return \"123456\";\n  }\n\n  NavigateToLanding() {\n    this.router.navigate(['/homes']);\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n\n  savePassword(){}\n}\n\n\n","<app-header [isUserLoggedin]=\"false\"></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n\n\n       <br>\n<br>\n<br>\n<div class=\"row\">\n       <div class=\"col-md-3\"></div>\n       <div class=\"col-md-6\">\n              <div class=\"jumbotron\">\n                     <div>\n\n                            <h4>Forgot Password</h4>\n                            <hr><br>\n                            <div class=\"form-group\">\n                                       \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"savePassword()\" [formGroup]=\"ForgotPasswordForm\">\n                                          <div class=\"form-group row mb-2\">\n                                                 <label class=\"col-md-2 col-form-label\"\n                                                        for=\"EmailAddressId\">Email</label>\n                                                 <div class=\"col-md-7\">\n                                                        <input class=\"form-control\" id=\"EmailAddressId\" type=\"email\"\n                                                               placeholder=\"Email Address (required)\"\n                                                               formControlName=\"EmailAddress\"\n                                                               [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n                                                        <span class=\"invalid-feedback\">\n                                                               {{displayMessage.EmailAddress}}\n                                                        </span>\n                                                 </div>\n                                                 \n                                                 <div class=\"col-md-3\" *ngIf=\"ForgotPasswordForm.controls.EmailAddress\">\n                                                        <button type=\"button\" class=\"btn btn-primary btn-block\"\n                                                        [disabled]=\"!ForgotPasswordForm.controls.EmailAddress.valid\" (click)=\"VerifyEmail()\">Verify\n                                                        </button>\n                                                 </div>\n                                          </div>\n                                          <br>\n\n                                          <hr>\n                                          <div *ngIf=\"showForm\">\n                                                 <div class=\"form-group row mb-2\">\n\n                                                        <div class=\"col-md-4\">\n                                                               <input class=\"form-control\" id=\"CodeId\" type=\"text\"\n                                                                      placeholder=\"Code (required)\"\n                                                                      formControlName=\"Code\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.Code}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.Code}}\n                                                               </span>\n                                                        </div>\n                                                        <div class=\"col-md-8\">\n                                                               <p>We have sent code to your Email Id. Please enter code\n                                                                      to change your password.</p>\n                                                        </div>\n                                                 </div>\n                                                 <hr>\n                                                 <br>\n                                                 <div class=\"form-group row mb-2\">\n                                                        <label class=\"col-md-4 col-form-label\"\n                                                               for=\"PasswordId\">Password</label>\n                                                        <div class=\"col-md-8\">\n                                                               <input class=\"form-control\" id=\"PasswordId\"\n                                                                      type=\"password\" placeholder=\"Password (required)\"\n                                                                      formControlName=\"Password\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.Password}}\n                                                               </span>\n                                                        </div>\n                                                 </div>\n\n                                                 <div class=\"form-group row mb-2\">\n                                                        <label class=\"col-md-4 col-form-label\"\n                                                               for=\"cnfPasswordId\">Confirm Password</label>\n                                                        <div class=\"col-md-8\">\n                                                               <input class=\"form-control\" id=\"cnfPasswordId\"\n                                                                      type=\"password\"\n                                                                      placeholder=\"Confirm Password (required)\"\n                                                                      formControlName=\"cnfPassword\"\n                                                                      [ngClass]=\"{'is-invalid': displayMessage.cnfPassword}\" />\n                                                               <span class=\"invalid-feedback\">\n                                                                      {{displayMessage.cnfPassword}}\n                                                               </span>\n                                                        </div>\n                                                 </div>\n                                                 <hr>\n                                          </div>\n                                   </form>\n\n                                  \n\n\n                                   <div class=\"row\" *ngIf=\"showForm\">\n                                          <div class=\"col-md-5\">\n                                                 <button type=\"submit\" class=\"btn btn-primary btn-block\"\n                                                 [disabled]=\"!ForgotPasswordForm.valid\" (click)=\"saveChangePassword()\">Change Password</button>\n                                          </div>\n                                          <div class=\"col-md-4\">\n                                                 <button type=\"button\" class=\"btn btn-primary btn-block\"\n                                                        (click)=\"Cancel()\">Cancel</button>\n                                          </div>\n                                   </div>\n                            </div>\n                     </div>\n              </div>\n       </div>\n\n     \n\n\n       <div class=\"col-md-6\"></div>\n</div>  <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n</div>","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { appconstants } from 'src/app/common/appconstants';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\n\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.LoginForm.valueChanges, ...controlBlurs).pipe(\n      debounceTime(800)\n    ).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.LoginForm);\n    });\n  }\n\n  constructor(private router: Router, private objCvduserService: CvduserService, private fb: FormBuilder) {\n    this.validationMessages = {\n      UserName: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 100 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  errorMessage: any;\n\n  ngOnInit() {\n    this.InitializeForm();\n    this.getAllCvduser();\n  }\n\n  LoginForm: FormGroup;\n  pageTitle: string;\n  private InitializeForm() {\n\n    this.LoginForm = this.fb.group({\n      UserName: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(100)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n    });\n  }\n\n  CvduserList: Cvduser[] = [];\n  getAllCvduser() {\n    this.objCvduserService.getAllCvduser().subscribe({\n      next: data => {\n        this.CvduserList = data;\n        //this.saveLogin();\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n  retainCvduser: Cvduser[];\n\n  saveLogin() {\n    appconstants.gblisUserLoggedin = true;\n    let Count=0;\n  //  const UserId = \"yash@gmail.com\";//this.LoginForm.controls.UserName.value;\n  //  const Password = \"123456\";//this.LoginForm.controls.Password.value;\n  const UserId = this.LoginForm.controls.UserName.value;\n  const Password = this.LoginForm.controls.Password.value;\n    this.retainCvduser =   this.CvduserList.filter((data: Cvduser) =>\n    (data.EmailAddress == UserId || data.MobileNo == UserId) &&\n    data.Password == Password);\n    \n    console.log('CL: ' + JSON.stringify(this.CvduserList));\n    console.log('RC: ' + JSON.stringify(this.retainCvduser));\n    Count = this.retainCvduser.length;\n\n    if (Count === 1) {\n      appconstants.gblisUserLoggedin = true;\n      appconstants.gblobjCvduser = this.retainCvduser[0];\n      appconstants.gblLoggedinUserName = this.retainCvduser[0].Name;\n      appconstants.gblLoggedinUserId = this.retainCvduser[0].id;\n      appconstants.gblLoggedinUserRole = this.retainCvduser[0].FCvdroleId;\n      this.router.navigate(['/homes']);\n    }\n    else {\n      alert(\"UserId or password not match.\");\n    }\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n\n}\n","<app-header [isUserLoggedin]=\"false\"></app-header><div class=\"row\"><div class=\"col-md-1\"></div><div class=\"col-md-10\">\n<br><br><br>\n\n<div class=\"row\">\n       <div class=\"col-md-2\"></div>\n       <div class=\"col-md-8\" style=\"background-color: lightgray\">\n              <br>\n              <hr><br>\n                 \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveLogin()\" [formGroup]=\"LoginForm\">\n                     <div class=\"form-group row mb-2\">\n                            <label class=\"col-md-2 col-form-label\" for=\"UserNameId\">User Name</label>\n                            <div class=\"col-md-8\">\n                                   <input class=\"form-control\" id=\"UserNameId\" type=\"text\"\n                                          placeholder=\"User Name (required)\" formControlName=\"UserName\"\n                                          [ngClass]=\"{'is-invalid': displayMessage.UserName}\" />\n                                   <span class=\"invalid-feedback\">\n                                          {{displayMessage.UserName}}\n                                   </span>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2\">\n                            <label class=\"col-md-2 col-form-label\" for=\"PasswordId\">Password</label>\n                            <div class=\"col-md-8\">\n                                   <input class=\"form-control\" id=\"PasswordId\" type=\"password\"\n                                          placeholder=\"Password (required)\" formControlName=\"Password\"\n                                          [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                                   <span class=\"invalid-feedback\">\n                                          {{displayMessage.Password}}\n                                   </span>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2 offset-md-8 col-md-4\">\n                            <div class=\"help-block text-right\"><a href=\"/forgotpasswords\">Forget the password ?</a>\n                            </div>\n                     </div>\n                     <div class=\"form-group row mb-2\">\n                            <div class=\"offset-md-2 col-md-4\">\n                                   <hr><button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type =\"submit\"\n                                          [title]=\"LoginForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                                          [disabled]=\"!LoginForm.valid\">\n                                          Sign in\n                                   </button>\n                                   <button class=\"btn btn-outline-secondary mr-3\" style=\"width:80px;\" type=\"button\"\n                                          title=\"Cancel your edits\" (click)=\"Cancel()\">\n                                          Cancel\n                                   </button>\n                            </div>\n                     </div>\n\n                     <div class=\"checkbox  row mb-2 offset-md-2 col-md-4\"><label><input type=\"checkbox\"> keep me\n                                   logged-in</label>\n                     </div>\n                     <div class=\"bottom text-center\">New here ?<a href=\"/registers\"><b>Join Us</b></a></div>\n\n\n              </form>\n\n       </div>\n</div>\n\n","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef } from '@angular/core';\nimport { CvduserService } from 'src/app/services/cvduser.service';\nimport { Cvduser } from 'src/app/models/cvduser';\nimport { FormBuilder, FormGroup, FormControlName, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/common/generic-validator';\nimport { Observable, fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n  ngAfterViewInit(): void {\n    const controlBlurs: Observable<any>[] = this.formInputElements\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\n\n    merge(this.CvduserForm.valueChanges, ...controlBlurs)\n      .pipe(debounceTime(800)).subscribe(value => {\n        this.displayMessage = this.genericValidator.processMessages(this.CvduserForm);\n      });\n  }\n\n  constructor( private objCvduserService: CvduserService, private route: ActivatedRoute,\n    private router: Router, private fb: FormBuilder) {\n    this.validationMessages = {\n      Name: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },\n      EmailAddress: {\n        required: 'This field is required',\n        email: 'Email Address is invalid.',\n        minlength: 'This field requires atleast 3 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },\n      Password: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 6 characters.',\n        maxlength: 'cannot exceed more than 25 characters.'\n      },\n      MobileNo: {\n        required: 'This field is required',\n        minlength: 'This field requires atleast 1 characters.',\n        maxlength: 'cannot exceed more than 50 characters.'\n      },        \n      userrole: {\n        required: 'This field is required'\n      } \n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  CvduserForm: FormGroup;\n  objCvduser: Cvduser;\n  pageTitle: string;\n  errorMessage: any;\n  \n  ngOnInit() {\n    this.InitializeForm();\n \n  }\n  private InitializeForm() {\n    this.CvduserForm = this.fb.group({\n      Name: ['', [Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      EmailAddress: ['', [Validators.required,\n      Validators.email,\n      Validators.minLength(3),\n      Validators.maxLength(50)]],\n      Password: ['', [Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)]],\n      MobileNo: ['', [Validators.required,\n      Validators.minLength(1),\n      Validators.maxLength(50)]],\n      userrole: ['', Validators.required]\n    });\n  }\n\n  saveCvduser(): void {\n    if (this.CvduserForm.valid) {\n      if (this.CvduserForm.dirty) {\n        const p = { ...this.objCvduser, ...this.CvduserForm.value };\nconsole.log('role: ' + this.CvduserForm.controls.userrole.value);\nif(this.CvduserForm.controls.userrole.value==\"teacher\")\n        p.FCvdroleId = 3;\n        else\n        p.FCvdroleId = 4;\n        this.createCvduser(p);\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      this.errorMessage = 'Please correct the validation errors.';\n    }\n  }\n\n  createCvduser(p: Cvduser): void {\n    this.objCvduserService.createCvduser(p)\n      .subscribe({\n        next: () => this.onSaveComplete(),\n        error: err => this.errorMessage = err\n      });\n  }\n\n  onSaveComplete(): void {\n    this.CvduserForm.reset();\n    this.router.navigate(['/homes']);\n  }\n\n  NavigateToLanding() {\n    this.saveCvduser();\n    this.router.navigate(['/homes']);\n  }\n\n  Cancel() {\n    this.router.navigate(['/homes']);\n  }\n}\n\n","<app-header [isUserLoggedin]=\"false\"></app-header>\n<div class=\"row\">\n  <div class=\"col-md-1\"></div>\n  <div class=\"col-md-10\">\n    <br><br><br>\n\n    <div class=\"row\">\n      <div class=\"col-md-2\"></div>\n      <div class=\"col-md-8\">\n\n        <div class=\"jumbotron\">\n          <h4>Registration Page</h4>\n          <hr>\n          <br>\n          <div class=\"form-group\">\n                \n  <form novalidate style=\"padding:30px;background-color: whitesmoke\" (ngSubmit)=\"saveCvduser()\"\n              [formGroup]=\"CvduserForm\">\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"NameId\">Name</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"NameId\" type=\"text\" placeholder=\"Name (required)\"\n                    formControlName=\"Name\" [ngClass]=\"{'is-invalid': displayMessage.Name}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.Name}}\n                  </span>\n                </div>\n              </div>\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"EmailAddressId\">Email Address</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"EmailAddressId\" type=\"email\" placeholder=\"Email Address (required)\"\n                    formControlName=\"EmailAddress\" [ngClass]=\"{'is-invalid': displayMessage.EmailAddress}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.EmailAddress}}\n                  </span>\n                </div>\n              </div>\n\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"PasswordId\">Password</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"PasswordId\" type=\"password\" placeholder=\"Password (required)\"\n                    formControlName=\"Password\" [ngClass]=\"{'is-invalid': displayMessage.Password}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.Password}}\n                  </span>\n                </div>\n              </div>\n\n\n              <div class=\"form-group row mb-2\">\n                <label class=\"col-md-3 col-form-label\" for=\"MobileNoId\">Mobile</label>\n                <div class=\"col-md-8\">\n                  <input class=\"form-control\" id=\"MobileNoId\" type=\"text\" placeholder=\"Mobile Number (required)\"\n                    formControlName=\"MobileNo\" [ngClass]=\"{'is-invalid': displayMessage.MobileNo}\" />\n                  <span class=\"invalid-feedback\">\n                    {{displayMessage.MobileNo}}\n                  </span>\n                </div>\n              </div>\n\n              <input type=\"radio\" value=\"teacher\" name=\"userrole\" formControlName=\"userrole\" > Teacher\n              <input type=\"radio\" value=\"student\" name=\"userrole\" formControlName=\"userrole\"> Student\n            </form>\n            <br>\n            <hr>\n        \n\n\n\n\n            <div class=\"row\">\n              <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"NavigateToLanding()\">register</button>\n              </div>\n              <div class=\"col-md-3\">\n                <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"Cancel()\">Cancel</button>\n              </div>\n            </div>\n            <hr>\n          </div>\n        </div>\n\n      </div>\n    </div>    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}